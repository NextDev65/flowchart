{"version":3,"sources":["components/SideBar.js","components/CustomEdge.js","components/Canvas.js","App.js","index.js"],"names":["apiUrl","SideBar","currentFile","setCurrentFile","setCanvasVisibility","setEdgeType","setSelectedColor","isEditMode","setOrientation","orientation","useState","files","setFiles","folder","setFolder","file","setFile","React","openNewFolder","setOpenNewFolder","openNewTag","setOpenNewTag","value","msg","error","setError","names","setNames","tagError","setTagError","tag","setTag","tags","setTags","openNewFile","setOpenNewFile","openEditTag","setOpenEditTag","currentEditTag","setCurrentEditTag","editTag","setEditTag","editTagError","setEditTagError","activeFolder","setActiveFolder","displayColorPicker","setDisplayColorPicker","r","g","b","a","color","setColor","setValue","useEffect","fetch","method","body","JSON","stringify","session_id","localStorage","getItem","headers","then","res","json","newTags","newNames","newFiles","console","log","Array","isArray","parse","hasOwnProperty","handleClose","updateFilesDb","newElements","updateNamesDb","updateTagsDb","nodes","length","filter","node","canvasVisibilityHandler","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","styles","reactCSS","default","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","Tabs","onChange","newValue","variant","indicatorColor","tabItemContainerStyle","textColor","aria-label","Tab","icon","label","Grid","item","xs","style","textAlign","borderRight","Typography","gutterBottom","container","spacing","justifyContent","IconButton","onClick","fontSize","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","helperText","target","fullWidth","DialogActions","Button","includes","push","text","expanded","setItem","disabled","parentId","elements","index","findIndex","element","splice","namesIndex","indexOf","removeItem","data","isDelete","updateElementsDb","Object","keys","Divider","marginTop","maxHeight","overflow","searchEnabled","paddingLeft","paddingTop","paddingRight","fontWeight","dataStructure","items","onItemClick","e","itemData","direction","draggable","border","marginLeft","paddingBottom","transform","rgb","FormControl","InputLabel","Select","labelId","defaultValue","displayEmpty","MenuItem","component","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","backgroundColor","startIcon","prevTags","concat","List","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","edge","deleteTag","type","originalTag","submitEditTag","CustomEdge","source","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","animated","edgePath","getSmoothStepPath","getBezierPath","hasArrow","className","markerWidth","markerHeight","viewBox","orient","refX","refY","stroke","strokeLinecap","strokeLinejoin","strokeWidth","fill","points","d","markerEnd","markerStart","getMarkerEnd","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","getLayoutedElements","isHorizontal","setGraph","rankdir","forEach","el","isNode","setNode","setEdge","layout","nodeWithPosition","x","nodeWidth","Math","random","y","nodeHeight","useStyles","makeStyles","theme","createStyles","previewChip","minWidth","maxWidth","SpecialNodeComponent","myRef","useRef","values","expand_collapse","ref","borderColor","minHeight","align","title","marginRight","isConnectable","connectionMode","onMouseOver","current","onMouseLeave","alignItems","description","pair","key","flexItem","OvalNodeComponent","RectangleNodeComponent","DiamondNodeComponent","overflowWrap","Canvas","selectedColor","edgeType","setEditMode","setElements","elementCLicked","setElementClicked","editModeTtitle","setEditModeTitle","setOpen","legend","setLegend","openUpload","setOpenUpload","openNewNode","setOpenNewNode","openNewLegend","setOpenNewLegend","legendVisibility","setLegendVisibility","displayColorPickerArrow","setDisplayColorPickerArrow","colorArrow","setColorArrow","toggledElements","targetElements","setFirstTime","fileObjects","setFileObjects","renderAlert","setRenderAlert","setCsv","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","openNewField","setOpenNewField","field","setField","hasArrowEdge","setArrowEdge","hasAnimatedEdge","setAnimatedEdge","isCollapsable","setCollapsable","handleCloseField","onConnect","params","newParams","addEdge","onElementClick","getAllOutgoers","getOutgoers","reduce","memo","outgoer","onNodeClick","children","allOutgoers","isHidden","child","newChild","u","jsonElements","filteredElements","submitTag","newElement","updateNode","handleDelete","edges","getConnectedEdges","update","getNodeId","Date","newCurrent","addNode","desc","handleChangeArrow","isEdge","elementClickedIndex","stylesArrow","handleChangeLegendTitle","addLegend","hexToRgb","hex","c","test","substring","split","join","hexToRgbA","sort","parseInt","slice","classes","flexDirection","col","placeholder","InputProps","Switch","checked","clearOnUnmount","filesLimit","dialogTitle","Alert","severity","acceptedFiles","cancelButtonText","showAlerts","submitButtonText","maxFileSize","onAdd","newFileObjs","onDelete","deleteFileObj","newFilesObjects","onSave","Papa","complete","results","jsonArr","ids","animateds","edgeTypes","arrows","arrowColors","counter","checkedTags","tags2Check","checkTags","lst","undefined","toLowerCase","startsWith","csvChildren","layoutedElements","showPreviewsInDropzone","useChipsForPreview","previewGridProps","previewChipProps","root","showFileNamesInPreview","Snackbar","autoHideDuration","nodeTypes","special","oval","rectangle","diamond","customEdge","onElementsRemove","onNodeDoubleClick","onDrop","preventDefault","reactFlowBounds","getBoundingClientRect","getData","project","clientX","clientY","onDragOver","dropEffect","onNodeDragStop","connectionLineType","onPaneContextMenu","onLoad","fitView","snapToGrid","paneMoveable","nodeStrokeColor","n","nodeColor","nodeBorderRadius","gap","Drawer","anchor","overflowY","str","endAdornment","InputAdornment","rows","multiline","marginRigh","size","newField","marginBottom","Chip","handleChangeCollapsable","handleChangeAnimated","App","isCanvasVisible","setIsCanvasVisible","session","jwt","sign","userId","uuidv4","expiresIn","algorithm","updateSessionDb","sm","md","lg","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y9BA2CMA,GAAS,0CAk2BAC,GAh2BC,SAAC,GASV,IAAD,EARJC,EAQI,EARJA,YACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,oBACAC,EAKI,EALJA,YACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,eACAC,EACI,EADJA,YAEA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,mBAAS,IAArC,qBAAOG,GAAP,MAAeC,GAAf,MACA,GAAwBJ,mBAAS,IAAjC,qBAAOK,GAAP,MAAaC,GAAb,MACA,GAA0CC,IAAMP,UAAS,GAAzD,qBAAOQ,GAAP,MAAsBC,GAAtB,MACA,GAAoCT,oBAAS,GAA7C,qBAAOU,GAAP,MAAmBC,GAAnB,MACA,GAA0BX,mBAAS,CAAEY,OAAO,EAAOC,IAAK,KAAxD,qBAAOC,GAAP,MAAcC,GAAd,MACA,GAA0Bf,mBAAS,IAAnC,qBAAOgB,GAAP,MAAcC,GAAd,MACA,GAAgCjB,mBAAS,IAAzC,qBAAOkB,GAAP,MAAiBC,GAAjB,MACA,GAAsBnB,mBAAS,IAA/B,qBAAOoB,GAAP,MAAYC,GAAZ,MACA,GAAwBrB,mBAAS,IAAjC,qBAAOsB,GAAP,MAAaC,GAAb,MACA,GAAsChB,IAAMP,UAAS,GAArD,qBAAOwB,GAAP,MAAoBC,GAApB,MACA,GAAsCzB,oBAAS,GAA/C,qBAAO0B,GAAP,MAAoBC,GAApB,MACA,GAA4C3B,mBAAS,IAArD,qBAAO4B,GAAP,MAAuBC,GAAvB,MACA,GAA8B7B,mBAAS,IAAvC,qBAAO8B,GAAP,MAAgBC,GAAhB,MACA,GAAwC/B,mBAAS,IAAjD,qBAAOgC,GAAP,MAAqBC,GAArB,MACA,GAAwCjC,oBAAS,GAAjD,qBAAOkC,GAAP,MAAqBC,GAArB,MACA,GAAoDnC,oBAAS,GAA7D,qBAAOoC,GAAP,MAA2BC,GAA3B,MACA,GAA0BrC,mBAAS,CACjCsC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QAJL,qBAAOC,GAAP,MAAcC,GAAd,MAMA,GAA0B3C,mBAAS,GAAnC,qBAAOY,GAAP,MAAcgC,GAAd,MAEAC,qBAAU,WACRC,MAAM,GAAD,OAAIxD,GAAJ,sBAAgC,CACnCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,aAEnCC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAEL,IAAIC,EAUAC,EAWAC,EAtBJC,QAAQC,IAAI,iBAAkBL,GAG5BC,EADEK,MAAMC,QAAQP,EAAKnC,MACXmC,EAAKnC,KAEX2B,KAAKgB,MAAMR,EAAKnC,MAAM4C,eAAe,QAC7BjB,KAAKgB,MAAMR,EAAKnC,MAAMA,KAEtB2B,KAAKgB,MAAMR,EAAKnC,MAK5BqC,EADEI,MAAMC,QAAQP,EAAKzC,OACVyC,EAAKzC,MAEZ+C,MAAMC,QAAQf,KAAKgB,MAAMR,EAAKzC,QACrBiC,KAAKgB,MAAMR,EAAKzC,OAEhBiC,KAAKgB,MAAMR,EAAKzC,OAAOA,MAMpC4C,EADEG,MAAMC,QAAQP,EAAKxD,OACVwD,EAAKxD,MAEZ8D,MAAMC,QAAQf,KAAKgB,MAAMR,EAAKxD,QACrBgD,KAAKgB,MAAMR,EAAKxD,OAEhBgD,KAAKgB,MAAMR,EAAKxD,OAAOA,MAItC4D,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZrC,GAAQmC,GACRzC,GAAS0C,GACTzD,EAAS+C,KAAKgB,MAAMR,EAAKxD,aAE5B,IAEH,IAiBMkE,GAAc,WAClB/D,GAAU,IACVE,GAAQ,IACRK,IAAc,GACdgB,IAAe,GACfE,IAAkB,GAClBE,IAAW,GACXE,IAAgB,GAChBlB,GAAS,IACTP,GAAgBC,IAAiB,GAASgB,IAAe,IAWrD2C,GAAgB,SAACC,GACrBR,QAAQC,IAAI,yBACZhB,MAAM,GAAD,OAAIxD,GAAJ,qBAA+B,CAClCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,WACjCpD,MAAOoE,IAETf,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLI,QAAQC,IACNL,EACA,+HAEFvD,EAAS+C,KAAKgB,MAAMR,EAAKxD,YAIzBqE,GAAgB,SAACX,GACrBE,QAAQC,IAAI,yBACZhB,MAAM,GAAD,OAAIxD,GAAJ,qBAA+B,CAClCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,WACjCrC,MAAO2C,IAETL,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUxC,GAASwC,EAAKzC,WAqB5BuD,GAAe,SAACb,GACpBG,QAAQC,IAAI,yBACZhB,MAAM,GAAD,OAAIxD,GAAJ,oBAA8B,CACjCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,WACjC/B,KAAMoC,IAERJ,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLI,QAAQC,IAAIb,KAAKgB,MAAMR,EAAKnC,OAC5BC,GAAQ0B,KAAKgB,MAAMR,EAAKnC,WA0I9BuB,qBAAU,YACwB,SAAC2B,GAC/B,GAAIvE,EAAMwE,OAAS,EACHD,EAAME,QAClB,SAACC,GAAD,OACEA,EAAKT,eAAe,aAAeS,EAAKT,eAAe,eAGzDjE,EAAMwE,SAAWvC,GAAcxC,GAAoB,GAClDA,GAAoB,GAG3BkF,CAAwB3E,KACvB,CAACA,EAAOP,IAEX,IAwBMmF,GAAc,SAACC,EAAOC,GAC1BD,EAAME,aAAaC,QAAQ,wBAAyBF,GACpDD,EAAME,aAAaE,cAAgB,QAG/BC,GAASC,IAAS,CACtBC,QAAS,CACP3C,MAAO,CACL4C,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,WAAW,QAAD,OAAU/C,GAAMJ,EAAhB,aAAsBI,GAAMH,EAA5B,aAAkCG,GAAMF,EAAxC,aAA8CE,GAAMD,EAApD,MAEZiD,OAAQ,CACNC,QAAS,MACTH,aAAc,MACdI,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,UAKZ,OACE,6BACE,kBAACC,EAAA,EAAD,CACE3F,MAAOA,GACP4F,SAnUe,SAAC1B,EAAO2B,GAC3B5C,QAAQC,IAAI2C,GACZ7D,GAAS6D,IAkULC,QAAQ,YACRC,eAAe,UACfC,sBAAuB,CAAEtB,MAAO,QAChCuB,UAAU,UACVC,aAAW,2BAEX,kBAACC,EAAA,EAAD,CAAKC,KAAM,kBAAC,KAAD,MAAiBC,MAAM,UAClC,kBAACF,EAAA,EAAD,CAAKC,KAAM,kBAAC,KAAD,MAAyBC,MAAM,YAEjC,IAAVrG,GACC,kBAACsG,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CACL9B,OAAQ,OACR+B,UAAW,SACXC,YAAa,sBAGf,kBAACC,EAAA,EAAD,CAAYd,QAAQ,KAAKe,cAAY,EAACJ,MAAO,CAAE1B,QAAS,KAAxD,qBAGA,kBAACuB,EAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAGC,eAAe,UACzC,kBAACV,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEf,aAAW,aACXgB,QArVI,WAChBrH,IAAiB,IAqVLiC,MAAM,WAEN,kBAAC,IAAD,CAAqBqF,SAAS,aAGlC,kBAACC,EAAA,EAAD,CACEC,KAAMzH,GACN0H,QAAS/D,GACTgE,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,qBAGA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzH,QAAOA,GAAMF,MACb4H,WAAS,EACTC,OAAO,QACPJ,GAAG,SACHpB,MAAM,cACNyB,WAAY5H,GAAMF,OAASE,GAAMD,IACjC2F,SAvVW,SAAC1B,GAC1B1E,GAAU0E,EAAM6D,OAAO/H,QAuVTgI,WAAS,KAGb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAAS3D,GAAazB,MAAM,WAApC,UAGA,kBAACoG,EAAA,EAAD,CAAQhB,QA5QD,WACnB,GAAsB,IAAlB3H,GAAOsE,OACT1D,GAAS,CAAEH,OAAO,EAAMC,IAAK,uCAE7B,GAAIG,GAAM+H,SAAS5I,IACjBY,GAAS,CAAEH,OAAO,EAAMC,IAAK,+BACxB,CACL,IAAM+C,EAAW3D,EAAMwE,OAAS,EAAf,YAAuBxE,GAAS,GACjD2D,EAASoF,KAAK,CAAEX,GAAIlI,GAAQ8I,KAAM9I,GAAQ+I,UAAU,IACpDhJ,EAAS0D,GACTQ,GAAcR,GACdR,aAAa+F,QAAQ,QAASlG,KAAKC,UAAUU,IAC7C,IAAMD,EAA4B,IAAjB3C,GAAMyD,OAAe,GAArB,YAA8BzD,IAC/C2C,EAASqF,KAAK7I,IACd0D,QAAQC,IAAI3D,IACZc,GAAS0C,GACTW,GAAcX,GACdP,aAAa+F,QAAQ,QAASlG,KAAKC,UAAUS,IAC7C5C,GAAS,IACTN,IAAiB,KAyPsBiC,MAAM,WAArC,YAKJ,kBAACwE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEf,aAAW,WACXpE,MAAM,UACNoF,QAxXE,WACdrG,IAAe,IAwXH2H,UAAU5J,EAAY0E,eAAe,aAErC,kBAAC,IAAD,CAAa6D,SAAS,aAG1B,kBAACC,EAAA,EAAD,CACEC,KAAMzG,GACN0G,QAAS/D,GACTgE,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,mBACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzH,QAAOA,GAAMF,MACb4H,WAAS,EACTC,OAAO,QACPJ,GAAG,OACHpB,MAAM,YACNT,SAvXS,SAAC1B,GACxBxE,GAAQwE,EAAM6D,OAAO/H,QAuXP8H,WAAY5H,GAAMF,OAASE,GAAMD,IACjC+H,WAAS,KAGb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAAS3D,GAAazB,MAAM,WAApC,UAGA,kBAACoG,EAAA,EAAD,CAAQhB,QAzRH,WACjB,GAAoB,IAAhBzH,GAAKoE,OACP1D,GAAS,CAAEH,OAAO,EAAMC,IAAK,qCAE7B,GAAIG,GAAM+H,SAAS1I,IACjBU,GAAS,CAAEH,OAAO,EAAMC,IAAK,kCACxB,CACL,IAAM+C,EAAQ,YAAO3D,GACrB,GAAI2D,EAAS,GAAGM,eAAe,YAC7BnD,GAAS,CACPH,OAAO,EACPC,IAAK,+CAEF,CACL+C,EAASoF,KAAK,CACZX,GAAIhI,GACJ4I,KAAM5I,GACNgJ,SAAU7J,EAAY6I,GACtBiB,SAAU,KAEZpJ,EAAS0D,GACTQ,GAAcR,GACd,IAAMD,EAA4B,IAAjB3C,GAAMyD,OAAe,GAArB,YAA8BzD,IAC/C2C,EAASqF,KAAK3I,IACdY,GAAS0C,GACTW,GAAcX,GACd5C,GAAS,IACTU,IAAe,MA8PoBiB,MAAM,WAAnC,YAKJ,kBAACwE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEf,aAAW,SACXpE,MAAM,YACNoF,QAjQK,WACjB,IAAMlE,EAAQ,YAAO3D,GACfsJ,EAAQtJ,EAAMuJ,WAAU,SAACC,GAAD,OAAaA,IAAYjK,KACvDoE,EAAS8F,OAAOH,EAAO,GACvB,IAAM5F,EAAQ,YAAO3C,IACf2I,EAAa3I,GAAM4I,QAAQpK,EAAY6I,IAC7C1E,EAAS+F,OAAOC,EAAY,GAC5B1I,GAAS0C,GACTW,GAAcX,GACdS,GAAcR,GACdR,aAAayG,WAAW,WACxB,IAAMxF,EAAc7E,EAAY8J,SAAS5E,QAAO,SAACoF,GAC/C,OAAOtK,EAAY6I,KAAOyB,EAAKnF,QAEjClF,EAAe,IA5GQ,SAAC4E,GAAmC,IAAtB0F,EAAqB,wDAC1DlG,QAAQC,IAAI,yBACZhB,MAAM,GAAD,OAAIxD,GAAJ,wBAAkC,CACrCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,WACjChD,KAAMb,EAAY6I,GAClB0B,SAAUA,EACVT,SAAUjF,IAEZf,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUI,QAAQC,IAAIL,MA8F9BuG,CAAiB3F,GAAa,IAmPlB+E,SAA8C,IAApCa,OAAOC,KAAK1K,GAAaiF,QAEnC,kBAAC,IAAD,CAAYsD,SAAS,cAI3B,kBAACoC,EAAA,EAAD,CAAS9C,MAAO,CAAE+C,UAAW,IAAMrK,YAAY,eAC/C,kBAACmH,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CAAEC,UAAW,QAAS+C,UAAW,OAAQC,SAAU,SAExC,IAAjBrK,EAAMwE,OACL,8BAEA,kBAAC,IAAD,CACE8F,eAAe,EACflD,MAAO,CACLxB,QAAS,eACT2E,YAAa,GACbC,WAAY,GACZC,aAAc,GACd3C,SAAU,GACV4C,WAAY,UAEdC,cAAc,QACdvC,GAAG,kBACHwC,MAAO5K,EACPqF,MAAM,OACNwF,YAAa,SAACC,GACZlH,QAAQC,IAAI,MAAOiH,EAAEC,SAAS9G,eAAe,aACxC6G,EAAEC,SAAS9G,eAAe,aAK7B/B,IAAgB,GAChBzC,GAAoB,KALpB0D,aAAa+F,QAAQ,UAAWlG,KAAKC,UAAU6H,EAAEC,WACjD7I,IAAgB,GAChBzC,GAAoB,IAKtBD,EAAesL,EAAEC,cAKzB,kBAACb,EAAA,EAAD,CAAS9C,MAAO,CAAE+C,UAAW,IAAMrK,YAAY,eAC9CF,GACC,kBAACqH,EAAA,EAAD,CACEQ,WAAS,EACTuD,UAAU,SACV5D,MAAO,CAAE+C,UAAW,IACpBzC,QAAS,GAET,kBAACT,EAAA,EAAD,CAAMQ,WAAS,EAACuD,UAAU,MAAMtD,QAAS,GACvC,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEvC,YAAa,SAACC,GAAD,OAAWD,GAAYC,EAAO,YAC3CoG,WAAS,GAET,yBACE7D,MAAO,CACL5B,WAAY,UACZ/C,MAAO,QACPiD,QAAS,GACTwF,OAAQ,kBACR7F,MAAO,GACPC,OAAQ,EACRC,aAAc,oBACd8B,UAAW,SACX8D,WAAY,GACZtF,OAAQ,aAGZ,yBACEuB,MAAO,CACL5B,WAAY,QACZ0F,OAAQ,kBACRzI,MAAO,QACPiD,QAAS,GACTL,MAAO,GACPC,OAAQ,GACRC,aAAc,oBACd8B,UAAW,SACX8D,WAAY,GACZtF,OAAQ,eAKhB,kBAACoB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL8D,OAAQ,kBACR5F,OAAQ,OACRD,MAAO,OACPE,aAAc,OACdM,OAAQ,WAEVjB,YAAa,SAACC,GAAD,OAAWD,GAAYC,EAAO,SAC3CoG,WAAS,MAIf,kBAAChE,EAAA,EAAD,CACEQ,WAAS,EACTuD,UAAU,MACVtD,QAAS,EACTN,MAAO,CAAEoD,WAAY,OAAQY,cAAe,SAE5C,kBAACnE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL8D,OAAQ,kBACR5F,OAAQ,OACRD,MAAO,OACPE,aAAc,OACdM,OAAQ,UACRsF,WAAY,IAEdvG,YAAa,SAACC,GAAD,OAAWD,GAAYC,EAAO,cAC3CoG,WAAS,KAGb,kBAAChE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL8D,OAAQ,kBACR5F,OAAQ,OACRD,MAAO,OACPE,aAAc,MACd8F,UAAW,gBACXF,WAAY,OACZtF,OAAQ,WAEVjB,YAAa,SAACC,GAAD,OAAWD,GAAYC,EAAO,YAC3CoG,WAAS,QAQrB,kBAAChE,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CACL9B,OAAQ,OACR+B,UAAW,SACXC,YAAa,sBAGf,kBAACC,EAAA,EAAD,CAAYd,QAAQ,KAAKe,cAAY,EAACJ,MAAO,CAAE1B,QAAS,KAAxD,mBAIA,kBAACuB,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CAAEC,UAAW,QAAS+C,UAAW,OAAQC,SAAU,SAE1D,yBAAKjD,MAAO,CAAEmD,YAAa,GAAIC,WAAY,KACzC,kBAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6D,UAAU,OAC3B,kBAACzD,EAAA,EAAD,CAAYd,QAAQ,YAAYe,cAAY,GAA5C,cAGA,yBAAKJ,MAAOlC,GAAOO,OAAQoC,QA3UhB,WACvBzF,IAAuBD,MA2UT,yBAAKiF,MAAOlC,GAAOzC,SAEpBN,GACC,yBAAKiF,MAAOlC,GAAOY,SACjB,yBAAKsB,MAAOlC,GAAOe,MAAO4B,QA5UnB,WACvBzF,IAAsB,MA4UN,kBAAC,IAAD,CAAcK,MAAOA,GAAO8D,SAzUpB,SAAC9D,GACzB9C,EAAiB8C,EAAM6I,KACvB5I,GAASD,EAAM6I,SAyUC,QAIV,kBAACrE,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CAAEC,UAAW,QAAS+C,UAAW,OAAQC,SAAU,SAE1D,kBAACkB,EAAA,EAAD,CACE9E,QAAQ,WACRW,MAAO,CAAE/B,MAAO,IAAK8E,UAAW,GAAIgB,WAAY,KAEhD,kBAACK,EAAA,EAAD,CAAYpD,GAAG,qCAAf,YAGA,kBAACqD,EAAA,EAAD,CACErE,MAAO,CAAEU,SAAU,IACnB4D,QAAQ,oCACRtD,GAAG,8BACH7B,SA1Ve,SAAC1B,GAC5BnF,EAAYmF,EAAM6D,OAAO/H,QA0Vb8F,QAAQ,WACRO,MAAM,WACN2E,aAAa,aACbC,cAAc,GAEd,kBAACC,EAAA,EAAD,CAAUlL,MAAM,cAAhB,aACA,kBAACkL,EAAA,EAAD,CAAUlL,MAAM,WAAhB,mBAIJf,GACA,kBAAC2L,EAAA,EAAD,CAAaO,UAAU,WAAW1E,MAAO,CAAE+C,UAAW,KACpD,kBAAC4B,EAAA,EAAD,CAAWD,UAAU,UAArB,eACA,kBAACE,EAAA,EAAD,CACEnF,aAAW,cACXoF,KAAK,cACLtL,MAAOb,EACPyG,SAznBkB,SAAC1B,GAC/BhF,EAAegF,EAAM6D,OAAO/H,SA0nBhB,kBAACuL,EAAA,EAAD,CACEvL,MAAM,WACNwL,QAAS,kBAACC,EAAA,EAAD,MACTpF,MAAM,aAER,kBAACkF,EAAA,EAAD,CACEvL,MAAM,aACNwL,QAAS,kBAACC,EAAA,EAAD,MACTpF,MAAM,kBAOlB,kBAACkD,EAAA,EAAD,CAASpK,YAAY,eACrB,kBAACmH,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,OAAK,GACH9B,OAAQ,OACR+B,UAAW,SACXgF,gBAAiB,WAHd,uBAIK,SAJL,0BAKQ,UALR,IAQL,kBAAC9E,EAAA,EAAD,CAAYd,QAAQ,KAAKe,cAAY,EAACJ,MAAO,CAAE1B,QAAS,KAAxD,QAGA,kBAACmD,EAAA,EAAD,CACEhB,QAAS,kBAAMnH,IAAc,IAC7B+F,QAAQ,WACRhE,MAAM,UACN6J,UAAW,kBAAC,IAAD,OAJb,WAQA,kBAACvE,EAAA,EAAD,CACEC,KAAMvH,GACNwH,QAAS/D,GACTgE,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,kBACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzH,QAAOI,GAASN,MAChB4H,WAAS,EACTC,OAAO,QACPJ,GAAG,MACHpB,MAAM,WACNyB,WAAYxH,GAASN,OAASM,GAASL,IACvC2F,SAzfY,SAAC1B,GACvBzD,GAAOyD,EAAM6D,OAAO/H,QAyfVgI,WAAS,KAGb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAAS3D,GAAazB,MAAM,WAApC,UAGA,kBAACoG,EAAA,EAAD,CAAQhB,QA7fA,WAChB,GAAmB,IAAf1G,GAAIqD,OACNtD,GAAY,CAAEP,OAAO,EAAMC,IAAK,oCAEhC,GAAIS,GAAKyH,SAAS3H,IAChBD,GAAY,CAAEP,OAAO,EAAMC,IAAK,4BAC3B,CACLgD,QAAQC,IAAIxC,IACZuC,QAAQC,IAAI1C,IACZ,IAAMsC,EAAO,YAAOpC,IACpBoC,EAAQsF,KAAK5H,IACbG,IAAQ,SAACiL,GAAD,OAAc,YAAIA,GAAUC,OAAO,CAACrL,QAC5CmD,GAAab,GACbN,aAAa+F,QAAQ,OAAQlG,KAAKC,UAAUQ,IAC5CvC,GAAY,IACZR,IAAc,GACdkD,QAAQC,IAAIxC,MA6eoBoB,MAAM,WAAlC,YAKJ,kBAACgK,EAAA,EAAD,KACGpL,GAAKqL,KAAI,SAACvL,GAAD,OACR,kBAACwL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CAAcC,QAAS5L,IACvB,kBAAC6L,EAAA,EAAD,KACE,kBAACpF,EAAA,EAAD,CACEqF,KAAK,MACLpG,aAAW,OACXpE,MAAM,UACNoF,QAAS,WACPjG,GAAkBT,GAClBO,IAAe,KAGjB,kBAAC,IAAD,OAEF,kBAACkG,EAAA,EAAD,CACEqF,KAAK,MACLpG,aAAW,SACXpE,MAAM,UACNoF,QAAS,kBAjfP,SAAC1G,GACjB,IAAMsC,EAAO,YAAOpC,IACdiI,EAAQjI,GAAKkI,WAAU,SAACC,GAAD,OAAaA,IAAYrI,KACtDsC,EAAQgG,OAAOH,EAAO,GACtBhI,GAAQmC,GACRa,GAAab,GACbN,aAAa+F,QAAQ,OAAQlG,KAAKC,UAAUQ,IA2efyJ,CAAU/L,KAEzB,kBAAC,IAAD,YAKR,kBAAC4G,EAAA,EAAD,CACEC,KAAMvG,GACNwG,QAAS/D,GACTgE,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,YACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzH,QAAOkB,GAAapB,MACpB4H,WAAS,EACT4E,KAAK,OACL3E,OAAO,QACPJ,GAAG,MACHuD,aAAchK,GACdqF,MAAM,WACNyB,WAAY1G,GAAapB,OAASoB,GAAanB,IAC/C2F,SAAU,SAACuE,GA9fvBhJ,GA8fiDgJ,EA9fhCpC,OAAO/H,QA+fZgI,WAAS,KAGb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAAS3D,GAAazB,MAAM,WAApC,UAGA,kBAACoG,EAAA,EAAD,CACEhB,QAAS,kBAtiBD,SAACuF,GACrB,GAAuB,IAAnBvL,GAAQ2C,OACVxC,GAAgB,CAAErB,OAAO,EAAMC,IAAK,oCAEpC,GAAIS,GAAKyH,SAASjH,IAChBG,GAAgB,CAAErB,OAAO,EAAMC,IAAK,4BAC/B,CACL,IAAM6C,EAAO,YAAOpC,IAEpBoC,EADcpC,GAAKsI,QAAQyD,IACVvL,GACjBP,GAAQmC,GACRa,GAAab,GACbN,aAAa+F,QAAQ,OAAQlG,KAAKC,UAAUQ,IAC5CzB,GAAgB,IAChBN,IAAe,GACfE,IAAkB,GAClBE,IAAW,IAshBYuL,CAAc1L,KAC7Bc,MAAM,WAFR,gB,6OC53BC,SAAS6K,GAAT,GAaZ,EAZDC,OAYC,EAXD7E,OAWE,IAVFN,EAUC,EAVDA,GACAoF,EASC,EATDA,QACAC,EAQC,EARDA,QACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,QACAC,EAKC,EALDA,eACAC,EAIC,EAJDA,eAIC,KAHDC,SAGC,EAFD1G,cAEC,MAFO,GAEP,EADDyC,EACC,EADDA,KAEMkE,EACU,eAAdlE,EAAKsD,KACDa,aAAkB,CAChBR,UACAC,UACAG,iBACAF,UACAC,UACAE,mBAEFI,aAAc,CACZT,UACAC,UACAG,iBACAF,UACAC,UACAE,mBAER,OACE,oCACE,8BACGhE,EAAKqE,UACJ,4BACEC,UAAU,wBACV/F,GAAE,iBAAYA,GACdgG,YAAY,KACZC,aAAa,KACbC,QAAQ,gBACRC,OAAO,OACPC,KAAK,IACLC,KAAK,KAEL,8BACEC,OAAM,eAAU7E,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACNmM,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,KAAI,eAAUjF,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACJuM,OAAO,0BAIb,4BACEZ,UAAU,wBACV/F,GAAE,uBAAkBA,GACpBgG,YAAY,KACZC,aAAa,KACbC,QAAQ,gBACRC,OAAO,OACPC,KAAK,IACLC,KAAK,KAEL,8BAEErH,MAAO,CAAEiE,UAAW,kBACpBqD,OAAM,eAAU7E,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACNmM,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,KAAI,eAAUjF,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACJuM,OAAO,2BAIb,0BACE3G,GAAIA,EACJ4G,EAAGjB,EACHW,OAAM,eAAU7E,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACNsM,KAAI,eAAUjF,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACJ2L,UAAU,wBACV/G,MAAK,6BACAA,GADA,IAEHsH,OAAO,QAAD,OAAU7E,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,OAERyM,UAAS,sBAAiB7G,EAAjB,KACT8G,YAAW,4BAAuB9G,EAAvB,QCnCnB,IAAM6G,GAAYE,aAAa,cAAe,aAC9CvL,QAAQC,IAAIoL,IAEZ,IAKMG,GAAa,IAAIC,KAAMC,SAASC,MAGhClQ,GAAS,0CACf+P,GAAWI,qBAAoB,iBAAO,MAYtC,IAEMC,GAAsB,SAACpG,GAAgC,IAAtB2B,EAAqB,uDAAT,KAC3C0E,EAA6B,OAAd1E,EAgBrB,OAfAoE,GAAWO,SAAS,CAAEC,QAAS5E,IAE/B3B,EAASwG,SAAQ,SAACC,GACZC,aAAOD,GACTV,GAAWY,QAAQF,EAAG1H,GAAI,CACxB/C,MATU,IAUVC,OATW,MAYb8J,GAAWa,QAAQH,EAAGvC,OAAQuC,EAAGpH,WAIrC2G,KAAMa,OAAOd,IACbxL,QAAQC,IAAIwF,EAAU,mDACfA,EAASqD,KAAI,SAACoD,GACnB,GAAIC,aAAOD,GAAK,CACd,IAAMK,EAAmBf,GAAW1K,KAAKoL,EAAG1H,IAC5C0H,EAAGjC,eAAiB6B,EAAe,OAAS,MAC5CI,EAAGlC,eAAiB8B,EAAe,QAAU,SAK7CI,EAAG/J,SAAW,CACZqK,EAAGD,EAAiBC,EAAIC,GAAgBC,KAAKC,SAAW,IACxDC,EAAGL,EAAiBK,EAAIC,IAI5B,OAAOX,MAILY,GAAYC,cAAW,SAACC,GAAD,OAC3BC,aAAa,CACXC,YAAa,CACXC,SAAU,IACVC,SAAU,UAKVC,GAAuB,SAAC,GAAc,IAAD,EAAXpH,EAAW,EAAXA,KAC1BqH,EAAQC,iBAAO,MACflH,EAAOkH,iBAAO,MACdC,EAASD,iBAAO,MAChBE,EAAkBF,iBAAO,MAC7B,OACE,6BACE,yBACEG,IAAKJ,EACL9J,MAAO,CACL5B,WAAY,UACZ+L,YAAY,QAAD,OAAU1H,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACXC,MAAO,QACPiD,QAAS,GACTwF,OAAO,kBAAD,OAAoBrB,EAAKpH,MAAMJ,EAA/B,aAAqCwH,EAAKpH,MAAMH,EAAhD,aAAsDuH,EAAKpH,MAAMF,EAAjE,aAAuEsH,EAAKpH,MAAMD,EAAlF,KACN6C,MAAO,IACPmM,UAAW,GACXjM,aAAc,oBACd8B,UAAW,WAGb,8BACA,kBAACE,EAAA,EAAD,CACE4G,UAAU,aACV1H,QAAQ,YACRe,cAAY,EACZiK,MAAM,SACNrK,MAAO,CAAE+C,UAAW,OAEnBN,EAAK6H,QAkBV,kBAAC,KAAD,CACEvE,KAAK,SACL/E,GAAG,IACHrC,SAAS,OACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV4L,eAAe,EACfC,eAAe,QACfC,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,OAEnE,kBAAC,KAAD,CACEhB,KAAK,SACL/E,GAAG,IACHrC,SAAS,MACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV4L,eAAe,EACfC,eAAe,QACfC,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,OAEnE,kBAAC,KAAD,CACEhB,KAAK,SACL/E,GAAG,IACHrC,SAAS,QACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV4L,eAAe,EACfC,eAAe,QACfC,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,OAEnE,kBAAC,KAAD,CACEhB,KAAK,SACL/E,GAAG,IACHrC,SAAS,SACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV4L,eAAe,EACfC,eAAe,QACfC,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,OA2BnE,yBACE/G,OAAK,GACH/B,MAAO,OADJ,sBAEI,KAFJ,2BAGS,WAHT,gDAIuBwE,EAAKpH,MAAMJ,EAJlC,aAIwCwH,EAAKpH,MAAMH,EAJnD,aAIyDuH,EAAKpH,MAAMF,EAJpE,aAI0EsH,EAAKpH,MAAMD,EAJrF,4BAKI,SALJ,wBAMM,IANN,0BAOQ,IAPR,6BAQW,qBARX,0BASQ,UATR,IAmBL,yBACE4E,MAAO,CACL/B,MAAO,MACPmM,UAAW,OAEXnK,UAAW,SACX8D,WAAY,GACZwG,YAAa,MAGf,6BACE,4BACEL,IAAKD,EACLjK,MAAO,CACLrB,SAAU,WACVC,OAAQ,EACRmE,UAAW,KACXgB,WAAY,OACZD,OAAQ,YACRzI,MAAO,UACPqF,SAAU,IAEZD,QAAS,WACuB,QAA1BoC,EAAK8H,QAAQ5D,WACflE,EAAK8H,QAAQ5D,UAAY,GACzBiD,EAAOW,QAAQ5D,UAAY,GAC3BkD,EAAgBU,QAAQ5D,UAAY,cAEpClE,EAAK8H,QAAQ5D,UAAY,OACzBiD,EAAOW,QAAQ5D,UAAY,OAC3BkD,EAAgBU,QAAQ5D,UAAY,gBAIvC,WAGL,kBAAClH,EAAA,EAAD,CACEQ,WAAS,EACTuD,UAAU,MACVtD,QAAS,EACTC,eAAe,SACfsK,WAAW,UAGX,yBAAKX,IAAKrH,EAAM7C,MAAO,CAAEC,UAAW,WACjCwC,EAAKqI,YAAYxF,KAAI,SAACyF,GACrB,OACE,kBAAC5K,EAAA,EAAD,CACEd,QAAQ,YACRe,cAAY,EACZJ,MAAO,CACLqD,aAAc,KAGf0H,EAAKC,SAKd,kBAAClI,EAAA,EAAD,CACEpK,YAAY,WACZsH,MAAO,CAAEoK,UAAW,GAAInK,UAAW,UACnCgL,UAAQ,IAEV,yBAAKf,IAAKF,EAAQhK,MAAO,CAAEC,UAAW,WACnCwC,EAAKqI,YAAYxF,KAAI,SAACyF,GACrB,OACE,kBAAC5K,EAAA,EAAD,CACEd,QAAQ,YACRe,cAAY,EACZJ,MAAO,CACLmD,YAAa,KAGd4H,EAAKxR,gBAkCpB2R,GAAoB,SAAC,GAAc,IAAZzI,EAAW,EAAXA,KACvBqH,EAAQC,iBAAO,MACnB,OACE,oCACE,yBACEG,IAAKJ,EACL9J,MAAO,CACL5B,WAAY,UACZ+L,YAAY,QAAD,OAAU1H,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACXC,MAAO,QACPiD,QAAS,GACTwF,OAAO,kBAAD,OAAoBrB,EAAKpH,MAAMJ,EAA/B,aAAqCwH,EAAKpH,MAAMH,EAAhD,aAAsDuH,EAAKpH,MAAMF,EAAjE,aAAuEsH,EAAKpH,MAAMD,EAAlF,KACN6C,MAAO,IACPmM,UAAW,GACXnK,UAAW,SACX9B,aAAc,SAIhB,8BACA,kBAACgC,EAAA,EAAD,CACE4G,UAAU,aACV1H,QAAQ,YACRe,cAAY,EACZiK,MAAM,SACNrK,MAAO,CAAE+C,UAAW,QAEnBN,EAAK6H,QAKV,kBAAC,KAAD,CACEvE,KAAK,SACL/E,GAAG,IACHrC,SAAS,OACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHrC,SAAS,QACT6L,eAAe,EACfxK,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjE0D,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHrC,SAAS,MACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHrC,SAAS,SACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,YASjBU,GAAyB,SAAC,GAAc,IAAZ1I,EAAW,EAAXA,KAC5BqH,EAAQC,iBAAO,MACnB,OACE,oCACE,yBACEG,IAAKJ,EACL9J,MAAO,CACL5B,WAAY,UACZ+L,YAAY,QAAD,OAAU1H,EAAKpH,MAAMJ,EAArB,aAA2BwH,EAAKpH,MAAMH,EAAtC,aAA4CuH,EAAKpH,MAAMF,EAAvD,aAA6DsH,EAAKpH,MAAMD,EAAxE,KACXC,MAAO,QACPiD,QAAS,GACTwF,OAAO,kBAAD,OAAoBrB,EAAKpH,MAAMJ,EAA/B,aAAqCwH,EAAKpH,MAAMH,EAAhD,aAAsDuH,EAAKpH,MAAMF,EAAjE,aAAuEsH,EAAKpH,MAAMD,EAAlF,KACN6C,MAAO,IACPmM,UAAW,GACXnK,UAAW,SACX9B,aAAc,SAIhB,8BACA,kBAACgC,EAAA,EAAD,CACE4G,UAAU,aACV1H,QAAQ,YACRe,cAAY,EACZiK,MAAM,SACNrK,MAAO,CAAE+C,UAAW,QAEnBN,EAAK6H,QAIV,kBAAC,KAAD,CACEvE,KAAK,SACL/E,GAAG,IACHhB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEVD,SAAS,OACT+L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHhB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEpI,SAAS,QAET6L,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHhB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEpI,SAAS,MAET6L,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHhB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,cAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEpI,SAAS,SAET6L,eAAe,EACfC,eAAe,YASjBW,GAAuB,SAAC,GAAc,IAAZ3I,EAAW,EAAXA,KAC9B,EAA4B9J,oBAAS,GAArC,mBACMmR,GADN,UACcC,iBAAO,OACrB,OACE,oCACE,yBACEG,IAAKJ,EACL9J,MAAO,CACL/B,MAAO,OACPU,SAAU,WACVT,OAAQ,OACR6E,UAAW,MACXgB,WAAY,MACZnF,OAAQ,IACRqG,gBAAiB,UACjBnB,OAAO,kBAAD,OAAoBrB,EAAKpH,MAAMJ,EAA/B,aAAqCwH,EAAKpH,MAAMH,EAAhD,aAAsDuH,EAAKpH,MAAMF,EAAjE,aAAuEsH,EAAKpH,MAAMD,EAAlF,KACN6I,UAAW,iBACX9F,aAAc,SAGf,IAED,8BACA,kBAACgC,EAAA,EAAD,CACE4G,UAAU,aACV1H,QAAQ,YACRe,cAAY,EACZiK,MAAM,SACNrK,MAAO,CAAE+C,UAAW,MAAOkB,UAAW,kBAErCxB,EAAK6H,QAIV,yBAAKtK,MAAO,CAAEiF,gBAAiB,cAAelC,UAAW,QACvD,kBAAC,KAAD,CACEgD,KAAK,SACL/E,GAAG,IACHrC,SAAS,OACTqB,MAAO,CACLiF,gBAAiB,cACjBsF,YAAa,KACbzG,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,iBAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHrC,SAAS,QACTqB,MAAO,CACLiF,gBAAiB,cACjBnB,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,iBAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHrC,SAAS,MACTqB,MAAO,CACLiF,gBAAiB,cACjBnB,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,iBAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,kBAAC,KAAD,CACE1E,KAAK,SACL/E,GAAG,IACHrC,SAAS,SACTqB,MAAO,CACLiF,gBAAiB,cACjBnB,OAAQ,MACRxF,QAAS,MACTM,OAAQ,GAEV8L,YAAa,SAAChH,GAAD,OACXoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,iBAE9C6D,aAAc,SAAClH,GAAD,OAAOoG,EAAMa,UAAYb,EAAMa,QAAQ5D,UAAY,KACjEyD,eAAe,EACfC,eAAe,UAEjB,yBACEzK,MAAO,CACLiF,gBAAiB,cACjB5J,MAAO,QAGP4C,MAAO,IACPmM,UAAW,IACXnK,UAAW,SACX9B,aAAc,QAGhB,yBACE6B,MAAO,CAAEiE,UAAW,iBAAkBlB,UAAW,MAAOnE,OAAQ,IAOhE,yBACEoB,MAAO,CACL/B,MAAO,MACPmM,UAAW,OAEXiB,aAAc,aACdtH,WAAY,GACZwG,YAAa,YA63Dde,GAn3DA,SAAC,GAOT,IANLnT,EAMI,EANJA,YACAoT,EAKI,EALJA,cACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAjT,EAEI,EAFJA,WACAE,EACI,EADJA,YAEkBA,EAClB,MAAgCC,mBAAS,IAAzC,mBAAOsJ,EAAP,KAAiByJ,EAAjB,KACA,EAA0B/S,mBAAS,CAAEY,OAAO,EAAOC,IAAK,KAAxD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4Cf,mBAAS,IAArD,mBAAOgT,EAAP,KAAuBC,EAAvB,KACA,EAA2CjT,oBAAS,GAApD,mBAAOkT,EAAP,KAAuBC,EAAvB,KACA,EAAsDnT,oBAAS,GAA/D,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAAOiI,EAAP,KAAamL,EAAb,KACA,GAA4BpT,mBAAS,CAAE0C,MAAO,UAAWiP,MAAO,KAAhE,qBAAO0B,GAAP,MAAeC,GAAf,MACA,GAAoC/S,IAAMP,UAAS,GAAnD,qBAAOuT,GAAP,MAAmBC,GAAnB,MACA,GAAsCxT,oBAAS,GAA/C,qBAAOyT,GAAP,MAAoBC,GAApB,MACA,GAA0C1T,oBAAS,GAAnD,qBAAO2T,GAAP,MAAsBC,GAAtB,MACA,GAAsB5T,mBAAS,IAA/B,qBAAOoB,GAAP,MAAYC,GAAZ,MACA,GAAgDrB,oBAAS,GAAzD,qBAAO6T,GAAP,MAAyBC,GAAzB,MACA,GAAoD9T,oBAAS,GAA7D,qBAAOoC,GAAP,MAA2BC,GAA3B,MACA,GAA8DrC,oBAAS,GAAvE,qBAAO+T,GAAP,MAAgCC,GAAhC,MACA,GAA0BhU,mBAAS,CACjCsC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QAJL,qBAAOC,GAAP,MAAcC,GAAd,MAMA,GAAoC3C,mBAAS,CAC3CsC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QAJL,qBAAOwR,GAAP,MAAmBC,GAAnB,MAMA,GAA8ClU,mBAAS,IAAvD,qBAAOmU,GAAP,MACA,IADA,MAC4CnU,mBAAS,KAArD,qBAAOoU,GAAP,MACA,IADA,MACoCpU,oBAAS,IAA7C,qBAAoBqU,IAApB,aACA,GAAsC9T,IAAMP,SAAS,IAArD,qBAAOsU,GAAP,MAAoBC,GAApB,MACA,GAAsCvU,mBAAS,CAAEY,OAAO,EAAOC,IAAK,KAApE,qBAAO2T,GAAP,MAAoBC,GAApB,MACA,GAAwBzU,mBAAS,IAAjC,qBAAOsB,GAAP,MAAaC,GAAb,MACA,GAAsBvB,oBAAS,GAA/B,qBAAY0U,IAAZ,aACMC,GAAmBvD,iBAAO,MAChC,GAAkDpR,mBAAS,MAA3D,qBAAO4U,GAAP,MAA0BC,GAA1B,MACA,GAAwC7U,oBAAS,GAAjD,qBAAO8U,GAAP,MAAqBC,GAArB,MACA,GAA0B/U,mBAAS,CAAEqS,IAAK,GAAIzR,MAAO,KAArD,qBAAOoU,GAAP,MAAcC,GAAd,MACApR,QAAQC,MACR,OAAqC9D,qBACnCgT,EAAe9O,eAAe,SAC1B8O,EAAelJ,KAAKoL,cAF1B,qBAAOA,GAAP,MAAqBC,GAArB,MAKA,GAA2CnV,qBACzCgT,EAAe9O,eAAe,SAC1B8O,EAAelJ,KAAKsL,iBAF1B,qBAAOA,GAAP,MAAwBC,GAAxB,MAKA,GAAwCrV,qBACtCgT,EAAe9O,eAAe,SAC1B8O,EAAelJ,KAAKwL,eAF1B,qBAAOA,GAAP,MAAsBC,GAAtB,MAaMC,GAAmB,WACvBT,IAAgB,IAoBZ/K,GAAmB,SAAC3F,EAAa7E,GAAmC,IAAtBuK,EAAqB,wDAGvElG,QAAQC,IAAItE,GACZsD,MAAM,GAAD,OAAIxD,GAAJ,wBAAkC,CACrCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,WACjChD,KAAMb,EAAY6I,GAClB0B,SAAUA,EACVT,SAAUjF,IAEZf,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLI,QAAQC,IAAIL,EAAK6F,UACjByJ,EAAYtP,EAAK6F,cAcjBmM,GAAS,yCAAG,WAAOC,GAAP,kBAAAjT,EAAA,6DAIVkT,EAJU,gBAIOD,IACbtI,KAAO,aACjBuI,EAAU7L,KAAO,CAAEqE,UAAU,EAAOf,KAAMyF,EAAUnQ,MAAOuR,IAC3D0B,EAAU5H,UAAW,EACrBlK,QAAQC,IAAI6R,EAAW,eARP,SASGC,aAAQD,EAAWrM,GATtB,cASV4D,EATU,iBAUV6F,EAAY7F,GAVF,4CAAH,sDAaT2I,GAAc,yCAAG,WAAO/Q,EAAO2E,GAAd,UAAAhH,EAAA,sDACjB5C,GACFoT,EAAkBxJ,GAClB8L,GAAe9L,EAAQK,KAAKwL,eAC5BD,GAAgB5L,EAAQK,KAAKsL,iBAC7BD,GAAa1L,EAAQK,KAAKoL,eAE1BjC,EAAkBxJ,GAPC,2CAAH,wDAWdqM,GAAiB,SAAjBA,EAAkBnR,EAAM2E,GAC5B,OAAOyM,aAAYpR,EAAM2E,GAAU0M,QACjC,SAACC,EAAMC,GAAP,4BACKD,GADL,CAEEC,GAFF,YAGKJ,EAAeI,EAAS5M,OAE7B,KAIE6M,GAAW,yCAAG,WAAOrR,EAAO2E,GAAd,oBAAAhH,EAAA,uDACC,IAAf5C,GACE4J,EAAQK,KAAKwL,gBACXjR,EAD0B,YACRiF,IAChB8M,EAAWL,aAAYtM,EAASH,IACzB7E,OAAS,IACd4R,EAAcP,GAAerM,EAASH,GAC5CzF,QAAQC,IAAIuS,GACZxS,QAAQC,IAAIsS,GACRA,EAAS,GAAGE,SACdF,EAASzJ,KAAI,SAAC4J,GACZ,IAAMC,EAAQ,gBAAQD,GACtBC,EAASF,UAAW,EACpBzS,QAAQC,IAAI0S,GACZnS,EAAcA,EAAYsI,KAAI,SAAC8J,GAC7B,OAAIA,EAAEpO,KAAOkO,EAAMlO,IACboO,EAAEvS,eAAe,WACfuS,EAAE9N,SAAW4N,EAAMlO,KACrBoO,EAAEH,UAAW,GAGVG,GAEAD,QAMbH,EAAY1J,KAAI,SAAC4J,GACf,IAAMC,EAAQ,gBAAQD,GACtBC,EAASF,UAAW,EACpBzS,QAAQC,IAAI0S,GACZnS,EAAcA,EAAYsI,KAAI,SAAC8J,GAC7B,OAAIA,EAAEpO,KAAOkO,EAAMlO,IACboO,EAAEvS,eAAe,WACfuS,EAAE9N,SAAW4N,EAAMlO,KACrBoO,EAAEH,UAAW,GAGVG,GAEAD,QAMf3S,QAAQC,IAAIO,GACZ0O,EAAY1O,KAjDA,2CAAH,wDA8GjBxB,qBAAU,WACRC,MAAM,GAAD,OAAIxD,GAAJ,sBAAgC,CACnCyD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,WAAYC,aAAaC,QAAQ,aAEnCC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLI,QAAQC,IAAI,iBAAkBL,GAC9B,IAAIY,EAAc,GACZqS,EAAezT,KAAKgB,MAAMR,EAAK6F,UAEnCjF,EAD0B,IAAxBqS,EAAajS,OACD,GAEViS,EAAaxS,eAAe1E,EAAY6I,IAC5BqO,EAAalX,EAAY6I,IAEzB,GAGlBxE,QAAQC,IAAIO,GACZ0O,EAAY1O,GACZ9C,GAAQ0B,KAAKgB,MAAMR,EAAKnC,YAE3B,CAAC9B,IAEJ,IA6iBImX,GA9hBExS,GAAc,WAClBuP,IAAe,IAOXkD,GAAS,yCAAG,6BAAAnU,EAAA,6DACV4B,EADU,YACQiF,IACZqD,KAAI,SAAClD,GACf,GAAIA,EAAQpB,KAAO2K,EAAe3K,KAC3B2K,EAAelJ,KAAKxI,KAAKyH,SAAS3H,IAAM,CAC3C,IAAMyV,EAAU,YAAO7D,EAAelJ,KAAKxI,MAC3CuV,EAAW7N,KAAK5H,IAChB4R,EAAelJ,KAAKxI,KAAOuV,MAPjB,SAWV9D,EAAY1O,GAXF,OAYhByS,GAAWzS,GAEX+O,GAAQ,GAdQ,2CAAH,qDAkFT2D,GAAY,yCAAG,+BAAAtU,EAAA,sDACbuU,EAAQC,aAAkB,CAACjE,GAAiB1J,GAC5C4N,EAAS5N,EAAS5E,QAAO,SAACoF,GAC9B,OAAIkN,EAAMjO,SAASe,IAGZA,EAAKzB,KAAO2K,EAAe3K,MAEhB,OAAhB7I,IAAsB,gBACAA,GACb8J,SAAW4N,GAExBnE,EAAYmE,GACZlN,GAAiBkN,EAAQ1X,GACzByT,EAAkB,IAdC,2CAAH,qDAyBZkE,GAAY,uCAAqB,IAAIC,KAAS7G,KAAKC,WAEnDsG,GAAa,WAAyB,IAAxBrN,EAAuB,uDAAbH,EACtBjF,EAAW,YAAOoF,GAClB4N,EAAU,gBAAQ7X,GACxB6X,EAAW/N,SAAWjF,EACtB0O,EAAY1O,GACZ2F,GAAiB3F,EAAa7E,IAE1B8X,GAAU,SAAClK,GAAuC,IAAjCpH,EAAgC,uDAArB,CAAEqK,EAAG,IAAKI,EAAG,GACzCpM,EAAciF,EAAQ,YAAOA,GAAY,GAC7CjF,EAAY2E,KAAK,CACfX,GAAI8O,KACJxS,KAAMnF,EAAY6I,GAClB+E,KAAMA,EACNtD,KAAM,CACJ6H,MAAO,QACPQ,YAAsB,YAAT/E,EAAqB,CAAC,CAAEiF,IAAK,GAAIzR,MAAO,KAAQ,KAC7D8B,MAAOkQ,EACP0C,eAAe,EACfF,iBAAiB,EACjBF,cAAc,EACd5T,KAAM,GACNiW,KAAM,eAERzJ,eAAgC,eAAhB/N,EAA+B,OAAS,MACxD8N,eAAgC,eAAhB9N,EAA+B,QAAU,SACzDuW,UAAU,EACVtQ,SAAUA,IAEZ,IAAMqR,EAAU,gBAAQ7X,GACxB6X,EAAW/N,SAAWjF,EACtB0O,EAAY1O,IAGRmT,GAAiB,yCAAG,iCAAA/U,EAAA,sEACJwU,aAAkB,CAACjE,GAAiB1J,GADhC,OAClB0N,EADkB,OAElB3S,EAFkB,YAEAiF,GAExB0N,EAAMrK,KAAI,SAACO,GACT7I,EAAYsI,KAAI,SAAClD,EAASF,GACpBkO,aAAOhO,GACLA,EAAQpB,KAAO6E,EAAK7E,KACtBxE,QAAQC,IAAI2F,GACZA,EAAQK,KAAKqE,UAA4B,IAAjB+G,GAAwB,KAAOhG,IAGrDzF,EAAQpB,KAAO2K,EAAe3K,KAChCqP,EAAsBnO,SAK9BlF,EAAYqT,GAAqB5N,KAAKoL,cACnC7Q,EAAYqT,GAAqB5N,KAAKoL,aACzCC,IAAcD,IACdrR,QAAQC,IAAIO,EAAYqT,GAAqB5N,KAAKoL,cAClDnC,EAAY1O,GAtBY,2CAAH,qDAiGjBc,GAASC,IAAS,CACtBC,QAAS,CACP3C,MAAO,CACL4C,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,WAAW,QAAD,OAAU/C,GAAMJ,EAAhB,aAAsBI,GAAMH,EAA5B,aAAkCG,GAAMF,EAAxC,aAA8CE,GAAMD,EAApD,MAEZiD,OAAQ,CACNC,QAAS,MACTH,aAAc,MACdI,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,UAKNqR,GAAcvS,IAAS,CAC3BC,QAAS,CACP3C,MAAO,CACL4C,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,WAAW,QAAD,OAAUwO,GAAW3R,EAArB,aAA2B2R,GAAW1R,EAAtC,aAA4C0R,GAAWzR,EAAvD,aAA6DyR,GAAWxR,EAAxE,MAEZiD,OAAQ,CACNC,QAAS,MACTH,aAAc,MACdI,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,UAuBNsR,GAA0B,SAAC7M,GAC/BuI,GAAU,CAAE5Q,MAAO2Q,GAAO3Q,MAAOiP,MAAO5G,EAAEpC,OAAO/H,SAkG7CiX,GAAY,WACI,IAAhBxE,GAAO1B,MACT5Q,EAAS,CAAEH,OAAO,EAAMC,IAAK,yCAE7BE,EAAS,CAAEH,OAAO,EAAOC,IAAK,KAC9B+S,IAAiB,GACjBE,IAAoB,KAIlBgE,GAAW,SAACC,GAEhB,IAAIC,EACJ,OAFAnU,QAAQC,IAAIiU,GAER,2BAA2BE,KAAKF,IAClClU,QAAQC,IAAI,mBAEI,IADhBkU,EAAID,EAAIG,UAAU,GAAGC,MAAM,KACrB1T,SACJuT,EAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAGhC,CAAE1V,GADT0V,EAAI,KAAOA,EAAEI,KAAK,MACA,GAAM,IAAK7V,EAAIyV,GAAK,EAAK,IAAKxV,EAAO,IAAJwV,EAASvV,EAAG,IAE1D,CACLH,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QA0BD4V,GAAY,SAACN,GACjB,IAAIC,EACJ,GAAI,2BAA2BC,KAAKF,GAMlC,OAJgB,IADhBC,EAAID,EAAIG,UAAU,GAAGC,MAAM,KACrB1T,SACJuT,EAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAGhC,CACL1V,GAFF0V,EAAI,KAAOA,EAAEI,KAAK,MAEP,GAAM,IACf7V,EAAIyV,GAAK,EAAK,IACdxV,EAAO,IAAJwV,EACHvV,EAAG,MAsDToB,QAAQC,IAAI,WAAYwF,GAIA,IAApBA,EAAS7E,OACXkS,GAAmB,IAEnB9S,QAAQC,IAAIwF,EAAU,8BACtBqN,GAAmBrN,EAAS5E,QAAO,SAACoF,GAClC,OAAOA,EAAKnF,OAASnF,EAAY6I,IAAMyB,EAAK0D,WAE7B8K,MAAK,SAAC7V,EAAGD,GACxB,GAAIC,EAAEyB,eAAe,SAAW1B,EAAE0B,eAAe,QAC/C,OAAOqU,SAAS9V,EAAE4F,GAAGmQ,MAAM,GAAI,KAAOD,SAAS/V,EAAE6F,GAAGmQ,MAAM,GAAI,SAI/D3Y,IACH8W,GAAmBjH,GACjBiH,GACgB,aAAhB5W,EAA6B,KAAO,OAGxC8D,QAAQC,IAAI6S,IACZ9S,QAAQC,IAAIwF,GACZ,IAAMmP,GAAU9H,KAEhB,OAAoB,OAAhBnR,EACK,8BAGL,oCACE,kBAAC0H,EAAA,EAAD,CAAMQ,WAAS,EAACuD,UAAU,MAAMtD,QAAS,EAAGN,MAAO,CAAE/B,MAAO,QAC1D,kBAAC4B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEC,UAAW,UACnCzH,GACC,oCACE,kBAACiJ,EAAA,EAAD,CACEpC,QAAQ,WACRhE,MAAM,UACN6J,UAAW,kBAAC,IAAD,MACXlF,MAAO,CACLC,UAAW,QACX8C,UAAW,IAEbtC,QAAS,kBAAM4L,IAAe,KARhC,YAYA,kBAAC1L,EAAA,EAAD,CACEC,KAAMwL,GACNvL,QAAS/D,GACTgE,kBAAgB,qBAGhB,kBAACC,EAAA,EAAD,CACEC,GAAG,oBACHhB,MAAO,CAAEC,UAAW,WAFtB,kBAMA,kBAACgB,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CAAMQ,WAAS,EAACuD,UAAU,SAAStD,QAAS,GAC1C,kBAACT,EAAA,EAAD,CAAMQ,WAAS,EAACuD,UAAU,MAAMtD,QAAS,GACvC,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEU,QAAS,WACPwP,GAAQ,WACR5D,IAAe,KAGjB,yBACErM,MAAO,CACL5B,WAAY,UACZ/C,MAAO,QACPiD,QAAS,GACTwF,OAAQ,kBACR7F,MAAO,IACPC,OAAQ,GACRC,aAAc,oBACd8B,UAAW,SACXxB,OAAQ,aAGZ,yBACEuB,MAAO,CACL5B,WAAY,QACZ0F,OAAQ,kBACRzI,MAAO,QACPiD,QAAS,GACTL,MAAO,IACPC,OAAQ,GACRC,aAAc,oBACd8B,UAAW,SACXsK,YAAa,OACb9L,OAAQ,eAKhB,kBAACoB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL8D,OAAQ,kBACR5F,OAAQ,OACRD,MAAO,QACPE,aAAc,OACd4F,WAAY,OACZtF,OAAQ,WAEVgC,QAAS,WACPwP,GAAQ,QACR5D,IAAe,QAKvB,kBAACxM,EAAA,EAAD,CACEQ,WAAS,EACTuD,UAAU,MACVtD,QAAS,EACTN,MAAO,CAAEoD,WAAY,OAAQY,cAAe,SAE5C,kBAACnE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL8D,OAAQ,kBACR5F,OAAQ,OACRD,MAAO,QACPE,aAAc,OACdM,OAAQ,WAEVgC,QAAS,WACPwP,GAAQ,aACR5D,IAAe,OAIrB,kBAACxM,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL8D,OAAQ,kBACR5F,OAAQ,OACRD,MAAO,OACPE,aAAc,MACd8F,UAAW,gBACXF,WAAY,OACZtF,OAAQ,WAEVgC,QAAS,WACPwP,GAAQ,WACR5D,IAAe,aAWnC,kBAACxM,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAEb,kBAACI,EAAA,EAAD,CAAYd,QAAQ,KAAKW,MAAO,CAAEsD,WAAY,SAA9C,mBACenL,EAAY6J,WAE3B,kBAAC7B,EAAA,EAAD,CAAYd,QAAQ,MAApB,uBACmBlH,EAAYyJ,SAI/B4K,IAvXN,kBAAC3M,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEC,UAAW,UACpC,kBAACwB,EAAA,EAAD,CACEpC,QAAQ,WACRhE,MAAM,UACN6J,UAAW,kBAAC,IAAD,MACXlF,MAAO,CACLC,UAAW,QACX8C,UAAW,IAEbtC,QAAS,kBAAM8L,IAAiB,KARlC,cAYA,kBAAC5L,EAAA,EAAD,CACEC,KAAM0L,GACNzL,QAAS/D,GACTgE,kBAAgB,qBAGhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,oBAAoBhB,MAAO,CAAEC,UAAW,WAAxD,mBAGA,kBAACgB,EAAA,EAAD,KACE,yBACEjB,MAAO,CACLxB,QAAS,OACT6S,cAAe,MACf9Q,eAAgB,gBAChBtC,MAAO,QApCN,CACX,CAAE5C,MAAO,UAAWwJ,KAAM,WAC1B,CAAExJ,MAAO,UAAWwJ,KAAM,WAC1B,CAAExJ,MAAO,UAAWwJ,KAAM,WAC1B,CAAExJ,MAAO,UAAWwJ,KAAM,YAmCVS,KAAI,SAACgM,GAAD,OACV,yBACEvK,UAAWuK,EAAIjW,OAAS2Q,GAAO3Q,MAAQ,WAAaiW,EAAIzM,KACxD7E,MAAO,CACLiF,gBAAiBqM,EAAIjW,MACrB8C,aAAc,OACdF,MAAO,GACPC,OAAQ,IAEVuC,QAAS,WACPwL,GAAU,CAAE5Q,MAAOiW,EAAIjW,MAAOiP,MAAO0B,GAAO1B,eAKpD,kBAACpJ,EAAA,EAAD,CACE2D,KAAM8G,EAAe3K,GACrBuD,aAAcyH,GAAO1B,MACrBiH,YAAY,cACZnQ,OAAO,SACPjC,SAAUoR,GACVvQ,MAAO,CAAE/B,MAAO,OAChB1E,MAAOyS,GAAO1B,MACd7Q,QAAOA,EAAMF,MACb8H,WAAY5H,EAAMF,OAASE,EAAMD,IACjCgY,WACE,KAaJ,kBAAC/P,EAAA,EAAD,CACEpC,QAAQ,YACRhE,MAAM,UACN2E,MAAO,CAAE+D,WAAY,OACrBtD,QAAS,WACP+P,OALJ,WAkTF,kBAAC3Q,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEC,UAAW,WACpC,kBAACE,EAAA,EAAD,CAAYuE,UAAU,OACpB,kBAAC7E,EAAA,EAAD,CACE6E,UAAU,QACVrE,WAAS,EACTwK,WAAW,SACXvK,QAAS,EACTN,MAAO,CAAEoD,WAAY,GAAID,YAAa,KAEtC,kBAACtD,EAAA,EAAD,CAAMC,MAAI,GAAV,QACA,kBAACD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC2R,GAAA,EAAD,CACEpW,MAAM,UACNqW,QAASlZ,EACT2G,SAraS,WACzB6N,IAAa,GACbvB,GAAajT,IAoaGqM,KAAK,aAGT,kBAAChF,EAAA,EAAD,CAAMC,MAAI,GAAV,QACCtH,GACC,kBAACiJ,EAAA,EAAD,CACEpC,QAAQ,YACRhE,MAAM,UACN2E,MAAO,CAAE+D,WAAY,IACrBtD,QAAS,WAKPgP,GAAW,YAAIxN,MATnB,QAeF,kBAACR,EAAA,EAAD,CACEpC,QAAQ,YACRhE,MAAM,UACN2E,MAAO,CAAE+D,WAAYvL,EAAa,GAAK,IACvC0M,UAAW,kBAAC,KAAD,MACXzE,QAAS,WACP0L,IAAc,KANlB,cAWA,kBAAC,KAAD,CACEwF,gBAAgB,EAChBC,WAAY,EACZC,YACE,oCACGrV,QAAQC,IAAI0Q,IACZA,GAAY5T,OACX,kBAACuY,GAAA,EAAD,CAAOC,SAAS,SAAS5E,GAAY3T,KAEvC,6CACA,kBAACgH,EAAA,EAAD,CACER,MAAO,CACLjB,MAAO,OACPD,IAAK,MACLH,SAAU,YAEZ8B,QAAS,kBAAM0L,IAAc,KAE7B,kBAAC,KAAD,QAIN6F,cAAe,CAAC,QAChB/E,YAAaA,GACbgF,iBAAkB,SAClBC,WAAY,CAAC,QAAS,QACtBC,iBAAkB,SAClBC,YAAa,IACbxR,KAAMsL,GACNmG,MAAO,SAACC,GACN9V,QAAQC,IAAI,QAAS6V,GACM,IAAvBrF,GAAY7P,QACd8P,GAAe,GAAG9H,OAAO6H,GAAaqF,KAG1CC,SAAU,SAACC,GACT,IAAMC,EAAkB,YAAIxF,IAAa5P,QACvC,SAACyC,GAAD,OAAUA,IAAS0S,KAErBtF,GAAeuF,GACfjW,QAAQC,IAAI,WAAY+V,IAE1B3R,QAAS,kBAAMsL,IAAc,IAC7BuG,OAAQ,WACNlW,QAAQC,IAAIwQ,GAAY,IACxB0F,KAAK/V,MAAMqQ,GAAY,GAAGjU,KAAM,CAC9B4Z,SAAU,SAAUC,GAClB,IAAIpQ,EAAOoQ,EAAQpQ,KACfqQ,EAAU,GACRC,EAAM,GACNhE,EAAW,GACXiE,EAAY,GACZC,EAAY,GACZC,EAAS,GACTpI,EAAc,GACdqI,EAAc,GAChBC,EAAU,EA4Gd,IA3GA3Q,EAAOA,EAAK0O,MAAM,IACb7L,KAAI,SAAClD,GACR5F,QAAQC,IAAI,WAAY2F,GACxB,IAAMiR,EA9SZ,SAACC,GAEjB,GADA9W,QAAQC,IAAIxC,IACc,IAAtBqZ,EAAWlW,OACb,MAAO,GAEP,IAAMf,EAAUiX,EAAWxC,MAAM,KACjC,OAAoB,IAAhB7W,GAAKmD,OACA,CACL7D,OAAO,EACPC,IAAK,qDAGT6C,EAAQiJ,KAAI,SAACvL,GACX,IAAKE,GAAKyH,SAAS3H,GACjB,MAAO,CACLR,OAAO,EACPC,IAAK,uDAIJ6C,GA0RiCkX,CAAUnR,EAAQ,IAKtC,GAJA5F,QAAQC,IAAI4W,EAAa,uBACzB7W,QAAQC,IAAI2F,EAAQ,IACpB5F,QAAQC,IAAI2F,EAAQ,IACpB5F,QAAQC,IAAI2F,EAAQ,GAAGV,SAAS,MAC5BU,EAAQ,GAAGV,SAAS,KAAM,CAC5B0R,GAAoB,EACpB,IAAMI,OAEJC,IADA3I,EAAYiI,EAAI3Q,EAAQ,GAAG0O,MAAM,KAAK,KAAtC,YAGShG,EACDiI,EAAI3Q,EAAQ,GAAG0O,MAAM,KAAK,MAG9B,GACN0C,EAAI7R,KAAK,CACPqJ,IAAK5I,EAAQ,GACb7I,MAAO6I,EAAQ,KAEjB0I,EAAYiI,EAAI3Q,EAAQ,GAAG0O,MAAM,KAAK,KAAtC,YACK0C,QAGL,GACE,CACE,UACA,OACA,YACA,WACA9R,SAASU,EAAQ,GAAGsR,eAGtB,GADAlX,QAAQC,IAAI,QACRC,MAAMC,QAAQ0W,IAwChB,GAvCAN,EAAI3Q,EAAQ,IAAM0N,KAClBgD,EAAQnR,KAAK,CACXX,GAAI+R,EAAI3Q,EAAQ,IAChB9E,KAAMnF,EAAY6I,GAClB+E,KAAM3D,EAAQ,GACdK,KAAM,CACJ6H,MAAOlI,EAAQ,GACf0I,YAAa,KACbzP,MAAO+G,EAAQ,GAAGuR,WAAW,KACzBlD,GAASrO,EAAQ,IACjB,CACEnH,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,OAETnB,KAAMoZ,EACNpF,cACiB,SAAf7L,EAAQ,IAEZ6M,UAAU,EACVtQ,SAAU,CAAEqK,EAAG,EAAGI,EAAG,GACrB8G,KAAM,OAEW,SAAf9N,EAAQ,IACV4Q,EAAUrR,KAAKoR,EAAI3Q,EAAQ,KAEV,SAAfA,EAAQ,GACV6Q,EAAUF,EAAI3Q,EAAQ,KAAO,OAE7B6Q,EAAUF,EAAI3Q,EAAQ,KAAO,SAEZ,SAAfA,EAAQ,IACV8Q,EAAOvR,KAAKoR,EAAI3Q,EAAQ,KAEtBA,EAAQ,IAAIuR,WAAW,OACzBR,EAAYJ,EAAI3Q,EAAQ,KAAOA,EAAQ,KAEzC5F,QAAQC,IAAIqW,GACR1Q,EAAQ,GAAGhF,OAAS,GAClBgF,EAAQ,GAAGV,SAAS,KAAM,CAC5B,IAAMkS,EAAcxR,EAAQ,GAAG0O,MAAM,KACrC/B,EAAS3M,EAAQ,IAAMwR,QAI3BpX,QAAQC,IAAI4W,GAEZjG,GAAe,CACb7T,OAAO,EACPC,IAAK,0DAITgD,QAAQC,IAAI,QACZ2Q,GAAe,CACb7T,OAAO,EACPC,IAAK,mDAKbgD,QAAQC,IAAIqW,GACZtW,QAAQC,IAAIqO,GACZgI,EAAQxN,KAAI,SAAClD,GACXA,EAAQK,KAAKqI,YAAcA,EAAY1I,EAAQpB,OAEjDxE,QAAQC,IAAI,YAAaoW,EAAQpQ,MACjCjG,QAAQC,IAAI,SAAUwQ,IACtBzQ,QAAQC,IAAIqW,EAAQ1V,QAChB0V,EAAQ1V,SAAWqF,EAAKrF,OAASgW,EAAS,CAG5C,IAAK,IAAIpI,KAFTxO,QAAQC,IAAIsW,GACZvW,QAAQC,IAAIsS,GACIA,EACd,GAAIA,EAASlS,eAAemO,GAC1B,GAAItO,MAAMC,QAAQoS,EAAS/D,IACzB+D,EAAS/D,GAAK1F,KAAI,SAAC4J,GACjB,IAAMrJ,EAAO0I,aACX,CACE7H,WAAUsM,EAAUtR,SAASqR,EAAI/H,IAGjCjF,KAAM,aACNtD,KAAM,CACJsD,KAAMkN,EAAUF,EAAI/H,IACpBlE,UACgC,IAA9BoM,EAAOxR,SAASqR,EAAI/H,IAGtB3P,WAC4BoY,IAA1BN,EAAYJ,EAAI/H,IACZgG,GAAUmC,EAAYJ,EAAI/H,KAC1B,CACE/P,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QAGb+K,OAAQ4M,EAAI/H,GACZ1J,OAAQyR,EAAI7D,IAEd4D,GAEFtW,QAAQC,IAAIoJ,GACZiN,EAAUjN,SAEP,CACL,IAAMA,EAAO0I,aACX,CACE7H,WAAUsM,EAAUtR,SAASqR,EAAI/H,IAGjCjF,KAAM,aACNtD,KAAM,CACJsD,KAAMkN,EAAUF,EAAI/H,IACpBlE,UACgC,IAA9BoM,EAAOxR,SAASqR,EAAI/H,IAGtB3P,WAC4BoY,IAA1BN,EAAYJ,EAAI/H,IACZgG,GAAUmC,EAAYJ,EAAI/H,KAC1B,CACE/P,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QAGb+K,OAAQ4M,EAAI/H,GACZ1J,OAAQyR,EAAIhE,EAAS/D,KAEvB8H,GAEFtW,QAAQC,IAAIoJ,GACZiN,EAAUjN,EAIhB,IAAMgO,EAAmBxL,GAAoByK,GAC7CpH,EAAYmI,GACZpE,GAAWoE,GACXrX,QAAQC,IAAIqW,GACZzF,IAAO,GACPlB,IAAc,QAKtB2H,wBAAwB,EACxBC,oBAAkB,EAClBC,iBAAkB,CAChB3T,UAAW,CAAEC,QAAS,EAAGsD,UAAW,QAEtCqQ,iBAAkB,CAAE7C,QAAS,CAAE8C,KAAM9C,GAAQ1H,cAC7CyK,wBAAwB,IAE1B,kBAACC,GAAA,EAAD,CACExT,KAAMuM,GAAY5T,MAClB8a,iBAAkB,IAClBxT,QAAS,kBAAMuM,GAAe,CAAE7T,OAAO,EAAOC,IAAK,OAEnD,kBAACsY,GAAA,EAAD,CACEjR,QAAS,kBAAMuM,GAAe,CAAE7T,OAAO,EAAOC,IAAK,MACnDuY,SAAS,SAER5E,GAAY3T,UAOzB,kBAACsJ,EAAA,EAAD,CAASpK,YAAY,eACrB,kBAAC,KAAD,KACE,yBAAKqO,UAAU,oBAAoBmD,IAAKoD,IACtC,kBAAC,KAAD,CACEgH,UAAW,CACTC,QAAS1K,GACT2K,KAAMtJ,GACNuJ,UAAWtJ,GACXuJ,QAAStJ,IAEX6H,UAAW,CACT0B,WAAYzO,IAEdjE,SACyC,IAAvCW,OAAOC,KAAKkK,IAAgB3P,OACxB0P,GACAwC,GAGNsF,iBA7tCa,WACvB,IAAM/E,EAAS5N,EAAS5E,QAAO,SAACoF,GAC9B,OAAOA,EAAKzB,KAAO2K,EAAe3K,MAEpB,gBAAQ7I,GACb8J,SAAW4N,EACtBnE,EAAYmE,GACZJ,GAAWI,IAutCDgF,kBAAmBrG,GACnBA,eAAgBM,GAChBgG,OAxzBG,SAACrX,GACdA,EAAMsX,iBAEN,IAAMC,EAAkB1H,GAAiB3C,QAAQsK,wBAC3ClP,EAAOtI,EAAME,aAAauX,QAAQ,yBAClCvW,EAAW4O,GAAkB4H,QAAQ,CACzCnM,EAAGvL,EAAM2X,QAAUJ,EAAgB/V,KACnCmK,EAAG3L,EAAM4X,QAAUL,EAAgBlW,MAErCmR,GAAQlK,EAAMpH,IAgzBJ2W,WA9zBO,SAAC7X,GAClBA,EAAMsX,iBACNtX,EAAME,aAAa4X,WAAa,QA6zBtBC,eAziCW,SAAC/X,EAAOH,GAC7B,IAAMN,EAAW,YAAOiF,GACxBzF,QAAQC,IAAIa,GAEZN,EAAYsI,KAAI,SAAClD,GACf5F,QAAQC,IAAI2F,GACRA,EAAQpB,KAAO1D,EAAK0D,KACtBxE,QAAQC,IAAI2F,GACZA,EAAQzD,SAAR,gBAAwBrB,EAAKqB,cAGjCnC,QAAQC,IAAIO,GACZ0O,EAAY1O,IA8hCFyY,mBAAoBjK,EACpBkK,kBAAmB,kBAAMrJ,IAAe,IACxC+B,UAAWA,GACXuH,OAzxCG,SAACpI,GAGdC,GAAqBD,GACrBA,EAAkBqI,WAsxCRC,YAAY,EAEZC,cAAc,EACd9V,MAAO,CAAE9B,OAAQ,OAAQD,MAAOzF,EAAa,MAAQ,QAErD,kBAAC,KAAD,CACEud,gBAAiB,SAACC,GAAO,IAAD,EACtB,iBAAIA,EAAEhW,aAAN,aAAI,EAAS5B,YAAmB4X,EAAEhW,MAAM5B,WACzB,YAAX4X,EAAEjQ,KAA2B,UAClB,SAAXiQ,EAAEjQ,KAAwB,UACf,cAAXiQ,EAAEjQ,KAA6B,UACpB,YAAXiQ,EAAEjQ,KAA2B,UAClB,WAAXiQ,EAAEjQ,KAA0B,UACjB,YAAXiQ,EAAEjQ,KAA2B,UAE1B,QAETkQ,UAAW,SAACD,GAAO,IAAD,EAChB,iBAAIA,EAAEhW,aAAN,aAAI,EAAS5B,YAAmB4X,EAAEhW,MAAM5B,WAEjC,QAET8X,iBAAkB,IAEpB,kBAAC,KAAD,MACkB,KAAjBlK,GAAO1B,OAAgBkC,IACtB,yBAAKzF,UAAW,aACd,yBACEA,UAAW,cACX/G,MAAO,CAAEiF,gBAAiB+G,GAAO3Q,SAEnC,yBAAK2E,MAAO,CAAE+D,WAAY,QAAUiI,GAAO1B,QAG/C,kBAAC,KAAD,CAAYjP,MAAM,OAAO8a,IAAK,QAIpC,yBAAKlY,MAAM,IAAIC,OAAO,KACpB,8BACE,4BACE6I,UAAU,wBACV/F,GAAG,YACHgG,YAAY,KACZC,aAAa,KACbC,QAAQ,gBACRC,OAAO,OACPC,KAAK,IACLC,KAAK,KAEL,8BACEC,OAAO,UACPC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,KAAK,UACLC,OAAO,4BAMdnP,EACC,kBAAC4d,GAAA,EAAD,CACE/W,QAAQ,YACRgX,OAAO,QACPrW,MAAO,CACLC,UAAW,SACXqW,UAAW,SACXtT,UAAW,UAGb,kBAACnD,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CAAEC,UAAW,SAAUhC,MAAO,IAAKgF,SAAU,WAEZ,IAAvCL,OAAOC,KAAK8I,GAAgBvO,OAC3B,kBAAC+C,EAAA,EAAD,CACEd,QAAQ,KACRe,cAAY,EACZJ,MAAO,CAAEoD,WAAY,IAAKD,YAAa,GAAIE,aAAc,KAH3D,oDAQA,6BACE,kBAAClD,EAAA,EAAD,CAAYd,QAAQ,KAAKW,MAAO,CAAE+C,UAAW,KAA7C,cAGA,kBAAC7B,EAAA,EAAD,CACE2D,KAAM8G,EAAe3K,GACrBuD,aAAcoH,EAAelJ,KAAK6H,MAClClJ,OAAO,SACPjC,SApmCQ,SAAC1B,GACzB,IAAMT,EAAW,YAAOiF,GACxBjF,EAAYsI,KAAI,SAAClD,GAEb,IAAImU,EADFnU,EAAQpB,KAAOvD,EAAM6D,OAAOuD,OAG5B0R,EADE9Y,EAAM6D,OAAO/H,MAAM6D,QAAU,GACzBK,EAAM6D,OAAO/H,MAAMsX,UAAU,EAAG,IAEhCpT,EAAM6D,OAAO/H,MAErB6I,EAAQK,KAAR,MAAwB8T,EACxB3K,EAAkBxJ,OAGtBsJ,EAAY1O,GAEZyS,GAAWzS,IAqlCK+E,UAAW8J,EACX7L,MAAO,CAAE/B,MAAO,OAChB1E,MAAOoS,EAAelJ,KAAK6H,MAC3BkH,WAAY,CAUVgF,aACE,kBAACC,GAAA,EAAD,CAAgB9X,SAAS,OACvB,kBAAC6B,EAAA,EAAD,CAAYC,QAzlCX,WACvBqL,GAAiB,KAylCO,kBAAC,IAAD,WAMV,kBAAC3L,EAAA,EAAD,CAAYd,QAAQ,KAAKW,MAAO,CAAE+C,UAAW,KAA7C,oBAIA,kBAAC7B,EAAA,EAAD,CACE2D,KAAM8G,EAAe3K,GACrBuD,aAAcoH,EAAelJ,KAAKyN,KAClC9O,OAAO,SACPsV,KAAM,EACNC,WAAS,EACTtX,QAAQ,SACRF,SAllCO,SAAC1B,GACxB,IAAMT,EAAW,YAAOiF,GACxBjF,EAAYsI,KAAI,SAAClD,GACXA,EAAQpB,KAAOvD,EAAM6D,OAAOuD,OAC9BzC,EAAQK,KAAR,KAAuBhF,EAAM6D,OAAO/H,MACpCqS,EAAkBxJ,OAGtB5F,QAAQC,IAAI,UAAWO,GACvB0O,EAAY1O,GACZyS,GAAWzS,IA0kCKgD,MAAO,CAAE/B,MAAO,OAChB1E,MAAOoS,EAAelJ,KAAKyN,OAoBJ,YAAxBvE,EAAe5F,MACd,oCACE,kBAAC5F,EAAA,EAAD,CAAYd,QAAQ,KAAKW,MAAO,CAAE+C,UAAW,KAA7C,aAGA,kBAACtB,EAAA,EAAD,CACEpC,QAAQ,WACR6F,UAAW,kBAAC,IAAD,MACX7J,MAAM,YACNoF,QAAS,kBAAMiN,IAAgB,KAJjC,OAQA,kBAAC/M,EAAA,EAAD,CACEC,KAAM6M,GACN5M,QAASsN,GACTrN,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,iBAGA,kBAACC,EAAA,EAAD,KACE,yBAAKjB,MAAO,CAAEC,UAAW,WACvB,kBAACiB,EAAA,EAAD,CACElB,MAAO,CAAE/B,MAAO,MAAO2Y,WAAY,IACnChX,MAAM,MACNoB,GAAG,sBACHuD,aAAa,MACblF,QAAQ,WACRwX,KAAK,QACL1X,SAAU,SAAC1B,GACT,IAAMqZ,EAAQ,gBAAQnJ,IACtBmJ,EAAS9L,IAAMvN,EAAM6D,OAAO/H,MAC5BqU,GAASkJ,MAGb,kBAAC5V,EAAA,EAAD,CACElB,MAAO,CAAE/B,MAAO,MAAO8F,WAAY,IACnCnE,MAAM,QACNoB,GAAG,uBACHuD,aAAa,QACbpF,SAAU,SAAC1B,GACT,IAAMqZ,EAAQ,gBAAQnJ,IACtBmJ,EAASvd,MAAQkE,EAAM6D,OAAO/H,MAC9BqU,GAASkJ,IAEXzX,QAAQ,WACRwX,KAAK,YAIX,kBAACrV,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAAS0N,GAAkB9S,MAAM,WAAzC,UAGA,kBAACoG,EAAA,EAAD,CAAQhB,QA/xBZ,WAClB,IAAMzD,EAAW,YAAOiF,GACxBjF,EAAYsI,KAAI,SAAClD,GACXA,EAAQpB,KAAO2K,EAAe3K,IAChCoB,EAAQK,KAAKqI,YAAYnJ,KAAKgM,OAGlCjC,EAAY1O,GACZyS,GAAWzS,GACX0Q,IAAgB,IAsxBoCrS,MAAM,WAApC,UAOR,kBAACyH,EAAA,EAAD,CAAS9C,MAAO,CAAE+C,UAAW,MAC7B,kBAACtB,EAAA,EAAD,CACEpC,QAAQ,WACRhE,MAAM,UACN6J,UAAW,kBAAC,IAAD,CAAS2R,KAAK,WACzBpW,QAAS,kBAAMsL,GAAQ,IACvB/L,MAAO,CAAE+C,UAAW,KALtB,WASA,kBAACpC,EAAA,EAAD,CACEC,KAAMA,EACNC,QAAS/D,GACTgE,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,WACA,kBAACC,EAAA,EAAD,KACE,kBAACoD,EAAA,EAAD,CACEC,QAAQ,6CACRtD,GAAG,uCACHzH,MAAOQ,GACPoF,SArwCE,SAAC1B,GACvBzD,GAAOyD,EAAM6D,OAAO/H,QAqwCAgI,WAAS,EACTiD,cAAY,GAEZ,kBAACC,EAAA,EAAD,CAAUlL,MAAM,IACd,qCAEgC,OAAjCwC,aAAaC,QAAQ,SACtBJ,KAAKgB,MAAMb,aAAaC,QAAQ,SAASoB,OAAS,EAChDxB,KAAKgB,MAAMb,aAAaC,QAAQ,SAASsJ,KACvC,SAACvL,GACC,OAAO,kBAAC0K,EAAA,EAAD,CAAUlL,MAAOQ,GAAMA,MAIlC,gCAIN,kBAACyH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAAS3D,GAAazB,MAAM,WAApC,UAGA,kBAACoG,EAAA,EAAD,CAAQhB,QAAS8O,GAAWlU,MAAM,WAAlC,SAKJ,kBAACyH,EAAA,EAAD,CAAS9C,MAAO,CAAE+C,UAAW,GAAIgU,aAAc,MAC9CpL,EAAelJ,KAAKxI,KAAKmD,OAAS,GACjCuO,EAAelJ,KAAKxI,KAAKqL,KAAI,SAACvL,GAAD,OAC3B,kBAACid,GAAA,EAAD,CACEpX,MAAO7F,EACPsB,MAAM,YACN2E,MAAO,CAAE+W,aAAc,SAI7B,kBAACjU,EAAA,EAAD,CAASpK,YAAY,aAAasH,MAAO,CAAE+C,UAAW,MACtD,kBAAC5C,EAAA,EAAD,CAAYuE,UAAU,OACpB,kBAAC7E,EAAA,EAAD,CACE6E,UAAU,QACVrE,WAAS,EACTwK,WAAW,SACXvK,QAAS,EACTN,MAAO,CAAEoD,WAAY,GAAID,YAAa,KAEtC,kBAACtD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC2R,GAAA,EAAD,CACEpW,MAAM,UACNqW,QAASzD,GACTxN,QAAS,kBAtgCD,WAC9BjE,QAAQC,IAAI,qBACZ,IAAMO,EAAW,YAAOiF,GACxBjF,EAAYsI,KAAI,SAAClD,GACXA,EAAQpB,KAAO2K,EAAe3K,KAChCxE,QAAQC,KAAK2F,EAAQK,KAAKwL,eAC1B7L,EAAQK,KAAKwL,eAAiBA,OAGlCC,IAAgBD,IAChBwB,GAAWzS,GA4/B0Bia,IACfpS,KAAK,cAGT,kBAAChF,EAAA,EAAD,CAAMC,MAAI,GAAV,iBAGJ,kBAACgD,EAAA,EAAD,CAASpK,YAAY,aAAasH,MAAO,CAAE+C,UAAW,MACtD,kBAAClD,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,SACX+C,UAAW,OACXC,SAAU,SAGZ,yBAAKjD,MAAO,CAAEmD,YAAa,GAAIC,WAAY,KACzC,kBAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAYd,QAAQ,YAAYe,cAAY,GAA5C,cAGA,yBAAKJ,MAAOlC,GAAOO,OAAQoC,QAnqCxB,WACvBzF,IAAuBD,MAmqCD,yBAAKiF,MAAOlC,GAAOzC,SAEpBN,GACC,yBAAKiF,MAAOlC,GAAOY,SACjB,yBACEsB,MAAOlC,GAAOe,MACd4B,QAlqCH,WACvBzF,IAAsB,MAmqCE,kBAAC,IAAD,CACEK,MAAOA,GACP8D,SA9pCF,SAAC9D,GACzBC,GAASD,EAAM6I,KACf,IAAMlH,EAAW,YAAOiF,GACxBjF,EAAYsI,KAAI,SAAClD,GACXA,EAAQpB,KAAO2K,EAAe3K,KAChCoB,EAAQK,KAAKpH,MAAQA,EAAM6I,QAG/BwH,EAAY1O,OAypCY,QAIV,kBAAC8F,EAAA,EAAD,CAAS9C,MAAO,CAAE+C,UAAW,GAAIgU,aAAc,MAC/C,kBAAClX,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,QACX+C,UAAW,OACXC,SAAU,SAGZ,kBAACkB,EAAA,EAAD,CACE9E,QAAQ,WACRW,MAAO,CAAE/B,MAAO,IAAK8E,UAAW,GAAIgB,WAAY,KAEhD,kBAACK,EAAA,EAAD,CAAYpD,GAAG,qCAAf,YAGA,kBAACqD,EAAA,EAAD,CACErE,MAAO,CAAEU,SAAU,IACnB4D,QAAQ,oCACRtD,GAAG,8BACH7B,SAzmDO,SAAC1B,GAC5B,IAAMkS,EAAQC,aAAkB,CAACjE,GAAiB1J,GAC5CjF,EAAW,YAAOiF,GACxB0N,EAAMrK,KAAI,SAACO,GACT7I,EAAYsI,KAAI,SAAClD,GACXgO,aAAOhO,IACLA,EAAQpB,KAAO6E,EAAK7E,KACtBxE,QAAQC,IAAI2F,GACZA,EAAQK,KAAKsD,KAAOtI,EAAM6D,OAAO/H,aAKzCmS,EAAY1O,GACZyS,GAAWzS,IA4lDSqC,QAAQ,WACRO,MAAM,WACN2E,aAAa,aACbC,cAAc,GAEd,kBAACC,EAAA,EAAD,CAAUlL,MAAM,cAAhB,aACA,kBAACkL,EAAA,EAAD,CAAUlL,MAAM,WAAhB,kBAIN,kBAAC4G,EAAA,EAAD,CAAYuE,UAAU,OACpB,kBAAC7E,EAAA,EAAD,CACE6E,UAAU,QACVrE,WAAS,EACTwK,WAAW,SACXvK,QAAS,EACTN,MAAO,CAAEoD,WAAY,GAAID,YAAa,KAEtC,kBAACtD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC2R,GAAA,EAAD,CACEpW,MAAM,UACNqW,QAAS3D,GACTtN,QAAS,kBAr6BJ,WAC3B,IAEI4P,EAFEV,EAAQC,aAAkB,CAACjE,GAAiB1J,GAC5CjF,EAAW,YAAOiF,GAExB0N,EAAMrK,KAAI,SAACO,GACT7I,EAAYsI,KAAI,SAAClD,EAASF,GACpBkO,aAAOhO,GACLA,EAAQpB,KAAO6E,EAAK7E,KACtBxE,QAAQC,IAAI2F,GACZA,EAAQsE,UAAYqH,IAGlB3L,EAAQpB,KAAO2K,EAAe3K,KAChCqP,EAAsBnO,SAK9BlF,EAAYqT,GAAqB5N,KAAKsL,iBACnC/Q,EAAYqT,GAAqB5N,KAAKsL,gBACzCC,IAAiBD,IACjBrC,EAAY1O,GACZyS,GAAWzS,GA+4B0Bka,IACfrS,KAAK,cAGT,kBAAChF,EAAA,EAAD,CAAMC,MAAI,GAAV,cAGJ,kBAACK,EAAA,EAAD,CAAYuE,UAAU,OACpB,kBAAC7E,EAAA,EAAD,CACE6E,UAAU,QACVrE,WAAS,EACTwK,WAAW,SACXvK,QAAS,EACTN,MAAO,CAAEoD,WAAY,GAAID,YAAa,KAEtC,kBAACtD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC2R,GAAA,EAAD,CACEpW,MAAM,UACNqW,QAAS7D,GACTpN,QAAS,kBAAM0P,MACftL,KAAK,cAGT,kBAAChF,EAAA,EAAD,CAAMC,MAAI,GAAV,WAGJ,yBAAKE,MAAO,CAAEmD,YAAa,GAAIC,WAAY,KACzC,kBAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAYd,QAAQ,YAAYe,cAAY,GAA5C,eAGA,yBACEJ,MAAOsQ,GAAYjS,OACnBoC,QA9vCQ,WAC5BkM,IAA4BD,MA+vCR,yBAAK1M,MAAOsQ,GAAYjV,SAEzBqR,GACC,yBAAK1M,MAAOsQ,GAAY5R,SACtB,yBACEsB,MAAOsQ,GAAYzR,MACnB4B,QA9vCI,WAC5BkM,IAA2B,MA+vCL,kBAAC,IAAD,CACEtR,MAAOuR,GACPzN,SAnvCK,SAAC9D,GAC9BwR,GAAcxR,EAAM6I,KACpB,IAAMyL,EAAQC,aAAkB,CAACjE,GAAiB1J,GAC5CjF,EAAW,YAAOiF,GACxB0N,EAAMrK,KAAI,SAACO,GACT7I,EAAYsI,KAAI,SAAClD,EAASF,GACpBkO,aAAOhO,IACLA,EAAQpB,KAAO6E,EAAK7E,KACtBxE,QAAQC,IAAI2F,GACZA,EAAQK,KAAKpH,MAAQA,EAAM6I,WAKnCwH,EAAY1O,OAwuCU,OAGR,kBAAC8F,EAAA,EAAD,CAAS9C,MAAO,CAAE+C,UAAW,GAAIgU,aAAc,MAC/C,kBAACvW,EAAA,EAAD,CACER,MAAO,CAAE3E,MAAO,OAChBoF,QAAS,kBAAMiP,OAEf,kBAAC,IAAD,UAOV,6BACG9M,OAAOC,KAAK8I,GAAgBvO,OAAS,GACpC,kBAACgZ,GAAA,EAAD,CACE/W,QAAQ,YACRgX,OAAO,QACPrW,MAAO,CACLC,UAAW,SACXqW,UAAW,SACXtT,UAAW,UAGb,kBAACnD,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,SACXhC,MAAO,IACPgF,SAAU,WAGZ,6BACE,kBAAC9C,EAAA,EAAD,CACEd,QAAQ,KACRW,MAAO,CACL+C,UAAW,GACXgU,aAAc,GACdzT,WAAY,WALhB,SAUA,kBAACnD,EAAA,EAAD,CAAYd,QAAQ,KAAKe,cAAY,GAClCuL,EAAelJ,KAAK6H,OAwBvB,kBAACnK,EAAA,EAAD,CACEd,QAAQ,KACRW,MAAO,CACL+C,UAAW,GACXgU,aAAc,GACdzT,WAAY,WALhB,eAUA,kBAACnD,EAAA,EAAD,CAAYd,QAAQ,KAAKe,cAAY,GAClCuL,EAAelJ,KAAKyN,Y,+BCx/E5BiH,OAtEf,WACE,MAAsCxe,mBACA,OAApCoD,aAAaC,QAAQ,WACjB,GACAJ,KAAKgB,MAAMb,aAAaC,QAAQ,aAHtC,mBAAO7D,EAAP,KAAoBC,EAApB,KAKA,EAA8CO,oBAAS,GAAvD,mBAAOye,EAAP,KAAwBC,EAAxB,KACA,EAA0C1e,mBAAS,CACjDsC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QAJL,mBAAOmQ,EAAP,KAAsBhT,EAAtB,KAMA,EAAgCI,mBAAS,cAAzC,mBAAO6S,EAAP,KAAiBlT,EAAjB,KACA,EAAkCK,oBAAS,GAA3C,mBAAOH,EAAP,KAAmBiT,EAAnB,KACA,EAAsC9S,mBAAS,YAA/C,mBAAOD,EAAP,KAAoBD,EAApB,KAwBA,OAVA+C,qBAAU,WACR,GAAwC,OAApCO,aAAaC,QAAQ,WAAqB,CAC5C,IAAMsb,EAAUC,KAAIC,KAAK,CAAEC,OAAQC,iBAAY,YAAa,CAC1DC,UAAW,KACXC,UAAW,WAhBO,SAACN,GACvB7b,MAAM,GAAD,OApBM,0CAoBN,uBAAiC,CACpCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,WAAYwb,IACnCrb,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUI,QAAQC,IAAIL,MAS5Byb,CAAgBP,GAChBvb,aAAa+F,QAAQ,UAAWwV,MAEjC,IAED,kBAACzX,EAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,GACvB,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG+X,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAClC,kBAAC,GAAD,CACE7f,YAAaA,EACbC,eAAgBA,EAChBC,oBAAqB,SAAC4f,GAAD,OAAUZ,EAAmBY,IAClD3f,YAAaA,EACbC,iBAAkBA,EAClBC,WAAYA,EACZC,eAAgBA,EAChBC,YAAaA,KAGhB0e,GACC,kBAACvX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG+X,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,GAAD,CACEtf,YAAaA,EACbP,YAAaA,EACbC,eAAgBA,EAChBI,WAAYA,EACZiT,YAAaA,EACbF,cAAeA,EACfC,SAAUA,OCtEtB0M,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c5f4f18c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  FormLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TreeView from \"devextreme-react/tree-view\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport PermDataSettingIcon from \"@material-ui/icons/PermDataSetting\";\r\n// https://flowchart-backend.herokuapp.com\r\n// http://127.0.0.1:8000\r\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\r\n\r\nconst SideBar = ({\r\n  currentFile,\r\n  setCurrentFile,\r\n  setCanvasVisibility,\r\n  setEdgeType,\r\n  setSelectedColor,\r\n  isEditMode,\r\n  setOrientation,\r\n  orientation,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [folder, setFolder] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [openNewFolder, setOpenNewFolder] = React.useState(false);\r\n  const [openNewTag, setOpenNewTag] = useState(false);\r\n  const [error, setError] = useState({ value: false, msg: \"\" });\r\n  const [names, setNames] = useState([]);\r\n  const [tagError, setTagError] = useState({});\r\n  const [tag, setTag] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [openNewFile, setOpenNewFile] = React.useState(false);\r\n  const [openEditTag, setOpenEditTag] = useState(false);\r\n  const [currentEditTag, setCurrentEditTag] = useState(\"\");\r\n  const [editTag, setEditTag] = useState(\"\");\r\n  const [editTagError, setEditTagError] = useState({});\r\n  const [activeFolder, setActiveFolder] = useState(false);\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(`${apiUrl}/api/get-user-info`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newTags;\r\n        if (Array.isArray(json.tags)) {\r\n          newTags = json.tags;\r\n        } else {\r\n          if (JSON.parse(json.tags).hasOwnProperty(\"tags\")) {\r\n            newTags = JSON.parse(json.tags).tags;\r\n          } else {\r\n            newTags = JSON.parse(json.tags);\r\n          }\r\n        }\r\n        let newNames;\r\n        if (Array.isArray(json.names)) {\r\n          newNames = json.names;\r\n        } else {\r\n          if (Array.isArray(JSON.parse(json.names))) {\r\n            newNames = JSON.parse(json.names);\r\n          } else {\r\n            newNames = JSON.parse(json.names).names;\r\n          }\r\n        }\r\n\r\n        let newFiles;\r\n        if (Array.isArray(json.files)) {\r\n          newFiles = json.files;\r\n        } else {\r\n          if (Array.isArray(JSON.parse(json.files))) {\r\n            newFiles = JSON.parse(json.files);\r\n          } else {\r\n            newFiles = JSON.parse(json.files).files;\r\n          }\r\n        }\r\n\r\n        console.log(newTags);\r\n        console.log(newNames);\r\n        console.log(newFiles);\r\n        setTags(newTags);\r\n        setNames(newNames);\r\n        setFiles(JSON.parse(json.files));\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log(newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeOrientation = (event) => {\r\n    setOrientation(event.target.value);\r\n  };\r\n\r\n  const newFolder = () => {\r\n    setOpenNewFolder(true);\r\n  };\r\n\r\n  const newFile = () => {\r\n    setOpenNewFile(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFolder(\"\");\r\n    setFile(\"\");\r\n    setOpenNewTag(false);\r\n    setOpenEditTag(false);\r\n    setCurrentEditTag(false);\r\n    setEditTag(false);\r\n    setEditTagError(false);\r\n    setError({});\r\n    openNewFolder ? setOpenNewFolder(false) : setOpenNewFile(false);\r\n  };\r\n\r\n  const handleChangeFolder = (event) => {\r\n    setFolder(event.target.value);\r\n  };\r\n\r\n  const handleChangeFile = (event) => {\r\n    setFile(event.target.value);\r\n  };\r\n\r\n  const updateFilesDb = (newElements) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-files`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        files: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\r\n          json,\r\n          \"ndsojdmsio99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"\r\n        );\r\n        setFiles(JSON.parse(json.files));\r\n      });\r\n  };\r\n\r\n  const updateNamesDb = (newNames) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-names`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        names: newNames,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setNames(json.names));\r\n  };\r\n\r\n  const updateElementsDb = (newElements, isDelete = false) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-elements`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => console.log(json));\r\n  };\r\n\r\n  const updateTagsDb = (newTags) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-tags`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        tags: newTags,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(JSON.parse(json.tags));\r\n        setTags(JSON.parse(json.tags));\r\n      });\r\n  };\r\n\r\n  const submitFolder = () => {\r\n    if (folder.length === 0) {\r\n      setError({ value: true, msg: \"Folder name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(folder)) {\r\n        setError({ value: true, msg: \"Folder must be unique.\" });\r\n      } else {\r\n        const newFiles = files.length > 0 ? [...files] : [];\r\n        newFiles.push({ id: folder, text: folder, expanded: true });\r\n        setFiles(newFiles);\r\n        updateFilesDb(newFiles);\r\n        localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n        const newNames = names.length === 0 ? [] : [...names];\r\n        newNames.push(folder);\r\n        console.log(folder);\r\n        setNames(newNames);\r\n        updateNamesDb(newNames);\r\n        localStorage.setItem(\"names\", JSON.stringify(newNames));\r\n        setError({});\r\n        setOpenNewFolder(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitFile = () => {\r\n    if (file.length === 0) {\r\n      setError({ value: true, msg: \"File name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(file)) {\r\n        setError({ value: true, msg: \"File name must be unique.\" });\r\n      } else {\r\n        const newFiles = [...files];\r\n        if (newFiles[0].hasOwnProperty(\"parentId\")) {\r\n          setError({\r\n            value: true,\r\n            msg: \"You must have folder to create a file.\",\r\n          });\r\n        } else {\r\n          newFiles.push({\r\n            id: file,\r\n            text: file,\r\n            parentId: currentFile.id,\r\n            elements: [],\r\n          });\r\n          setFiles(newFiles);\r\n          updateFilesDb(newFiles);\r\n          const newNames = names.length === 0 ? [] : [...names];\r\n          newNames.push(file);\r\n          setNames(newNames);\r\n          updateNamesDb(newNames);\r\n          setError({});\r\n          setOpenNewFile(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    const newFiles = [...files];\r\n    const index = files.findIndex((element) => element === currentFile);\r\n    newFiles.splice(index, 1);\r\n    const newNames = [...names];\r\n    const namesIndex = names.indexOf(currentFile.id);\r\n    newNames.splice(namesIndex, 1);\r\n    setNames(newNames);\r\n    updateNamesDb(newNames);\r\n    updateFilesDb(newFiles);\r\n    localStorage.removeItem(\"current\");\r\n    const newElements = currentFile.elements.filter((data) => {\r\n      return currentFile.id !== data.node;\r\n    });\r\n    setCurrentFile({});\r\n    updateElementsDb(newElements, true);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = () => {\r\n    if (tag.length === 0) {\r\n      setTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(tag)) {\r\n        setTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        console.log(tags);\r\n        console.log(tag);\r\n        const newTags = [...tags];\r\n        newTags.push(tag);\r\n        setTags((prevTags) => [...prevTags].concat([tag]));\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setTagError({});\r\n        setOpenNewTag(false);\r\n        console.log(tags);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitEditTag = (originalTag) => {\r\n    if (editTag.length === 0) {\r\n      setEditTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(editTag)) {\r\n        setEditTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        const newTags = [...tags];\r\n        const index = tags.indexOf(originalTag);\r\n        newTags[index] = editTag;\r\n        setTags(newTags);\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setEditTagError({});\r\n        setOpenEditTag(false);\r\n        setCurrentEditTag(false);\r\n        setEditTag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteTag = (tag) => {\r\n    const newTags = [...tags];\r\n    const index = tags.findIndex((element) => element === tag);\r\n    newTags.splice(index, 1);\r\n    setTags(newTags);\r\n    updateTagsDb(newTags);\r\n    localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n  };\r\n\r\n  const handleChangeEditTag = (event) => {\r\n    setEditTag(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvasVisibilityHandler = (nodes) => {\r\n      if (files.length > 0) {\r\n        const files = nodes.filter(\r\n          (node) =>\r\n            node.hasOwnProperty(\"parentId\") || node.hasOwnProperty(\"elements\")\r\n        );\r\n      }\r\n      if (files.length && !activeFolder) setCanvasVisibility(true);\r\n      else setCanvasVisibility(false);\r\n    };\r\n\r\n    canvasVisibilityHandler(files);\r\n  }, [files, setCanvasVisibility]);\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setSelectedColor(color.rgb);\r\n    setColor(color.rgb);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    setEdgeType(event.target.value);\r\n  };\r\n\r\n  const a11yProps = (index) => {\r\n    return {\r\n      id: `scrollable-force-tab-${index}`,\r\n      \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"primary\"\r\n        tabItemContainerStyle={{ width: \"100%\" }}\r\n        textColor=\"primary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab icon={<StorageIcon />} label=\"Files\" />\r\n        <Tab icon={<PermDataSettingIcon />} label=\"Shapes\" />\r\n      </Tabs>\r\n      {value === 0 ? (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"70vh\",\r\n            textAlign: \"center\",\r\n            borderRight: \"solid #D5D5D5 1px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom style={{ padding: 20 }}>\r\n            Folder Structures\r\n          </Typography>\r\n          <Grid container spacing={0} justifyContent=\"center\">\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Add Folder\"\r\n                onClick={newFolder}\r\n                color=\"primary\"\r\n              >\r\n                <CreateNewFolderIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Dialog\r\n              open={openNewFolder}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">\r\n                Create New Folder\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  error={error.value ? true : false}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"folder\"\r\n                  label=\"Folder Name\"\r\n                  helperText={error.value && error.msg}\r\n                  onChange={handleChangeFolder}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={submitFolder} color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Add File\"\r\n                color=\"primary\"\r\n                onClick={newFile}\r\n                disabled={currentFile.hasOwnProperty(\"expanded\") ? false : true}\r\n              >\r\n                <NoteAddIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Dialog\r\n              open={openNewFile}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Create New File</DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  error={error.value ? true : false}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"file\"\r\n                  label=\"File Name\"\r\n                  onChange={handleChangeFile}\r\n                  helperText={error.value && error.msg}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={submitFile} color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Delete\"\r\n                color=\"secondary\"\r\n                onClick={deleteItem}\r\n                disabled={Object.keys(currentFile).length === 0 ? true : false}\r\n              >\r\n                <DeleteIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            {files.length === 0 ? (\r\n              <div></div>\r\n            ) : (\r\n              <TreeView\r\n                searchEnabled={true}\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  paddingLeft: 15,\r\n                  paddingTop: 15,\r\n                  paddingRight: 15,\r\n                  fontSize: 18,\r\n                  fontWeight: \"normal\",\r\n                }}\r\n                dataStructure=\"plain\"\r\n                id=\"simple-treeview\"\r\n                items={files}\r\n                width=\"100%\"\r\n                onItemClick={(e) => {\r\n                  console.log(\"ddd\", e.itemData.hasOwnProperty(\"expanded\"));\r\n                  if (!e.itemData.hasOwnProperty(\"expanded\")) {\r\n                    localStorage.setItem(\"current\", JSON.stringify(e.itemData));\r\n                    setActiveFolder(false);\r\n                    setCanvasVisibility(true);\r\n                  } else {\r\n                    setActiveFolder(true);\r\n                    setCanvasVisibility(false);\r\n                  }\r\n                  setCurrentFile(e.itemData);\r\n                }}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n          {isEditMode && (\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              style={{ marginTop: 30 }}\r\n              spacing={1}\r\n            >\r\n              <Grid container direction=\"row\" spacing={1}>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    onDragStart={(event) => onDragStart(event, \"special\")}\r\n                    draggable\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        background: \"#ADD8E6\",\r\n                        color: \"black\",\r\n                        padding: 10,\r\n                        border: \"1px solid black\",\r\n                        width: 50,\r\n                        height: 5,\r\n                        borderRadius: \"10px 10px 0px 0px\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: 20,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                    <div\r\n                      style={{\r\n                        background: \"white\",\r\n                        border: \"1px solid black\",\r\n                        color: \"black\",\r\n                        padding: 10,\r\n                        width: 50,\r\n                        height: 15,\r\n                        borderRadius: \"0px 0px 10px 10px\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: 20,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"60px\",\r\n                      width: \"80px\",\r\n                      borderRadius: \"50px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"oval\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={1}\r\n                style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"50px\",\r\n                      width: \"80px\",\r\n                      borderRadius: \"10px\",\r\n                      cursor: \"pointer\",\r\n                      marginLeft: 20,\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"rectangle\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                      borderRadius: \"5px\",\r\n                      transform: \"rotate(45deg)\",\r\n                      marginLeft: \"10px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"diamond\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"70vh\",\r\n            textAlign: \"center\",\r\n            borderRight: \"solid #D5D5D5 1px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom style={{ padding: 20 }}>\r\n            Shapes Settings\r\n          </Typography>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n              <Grid item xs={12} direction=\"row\">\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Node Color\r\n                </Typography>\r\n                <div style={styles.swatch} onClick={handleClickColor}>\r\n                  <div style={styles.color} />\r\n                </div>\r\n                {displayColorPicker ? (\r\n                  <div style={styles.popover}>\r\n                    <div style={styles.cover} onClick={handleCloseColor} />\r\n                    <SketchPicker color={color} onChange={handleChangeColor} />\r\n                  </div>\r\n                ) : null}\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                EdgeType\r\n              </InputLabel>\r\n              <Select\r\n                style={{ fontSize: 15 }}\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                onChange={handleChangeEdgeType}\r\n                variant=\"outlined\"\r\n                label=\"EdgeType\"\r\n                defaultValue=\"smoothstep\"\r\n                displayEmpty={true}\r\n              >\r\n                <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n                <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          {!isEditMode && (\r\n            <FormControl component=\"fieldset\" style={{ marginTop: 30 }}>\r\n              <FormLabel component=\"legend\">Orientation</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"Orientation\"\r\n                name=\"orientation\"\r\n                value={orientation}\r\n                onChange={handleChangeOrientation}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"vertical\"\r\n                  control={<Radio />}\r\n                  label=\"Vertical\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"horizontal\"\r\n                  control={<Radio />}\r\n                  label=\"Horizontal\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      <Divider orientation=\"horizontal\" />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          height: \"30vh\",\r\n          textAlign: \"center\",\r\n          backgroundColor: \"#F2F2F2\",\r\n          height: \"320px\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom style={{ padding: 10 }}>\r\n          Tags\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setOpenNewTag(true)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          New Tag\r\n        </Button>\r\n        <Dialog\r\n          open={openNewTag}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create New Tag</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              error={tagError.value ? true : false}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"tag\"\r\n              label=\"Tag Name\"\r\n              helperText={tagError.value && tagError.msg}\r\n              onChange={handleChangeTag}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={submitTag} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <List>\r\n          {tags.map((tag) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <LocalOfferIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={tag} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"edit\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setCurrentEditTag(tag);\r\n                    setOpenEditTag(true);\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  color=\"primary\"\r\n                  onClick={() => deleteTag(tag)}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n          <Dialog\r\n            open={openEditTag}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Edit Tag</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                error={editTagError.value ? true : false}\r\n                autoFocus\r\n                type=\"text\"\r\n                margin=\"dense\"\r\n                id=\"tag\"\r\n                defaultValue={currentEditTag}\r\n                label=\"Tag Name\"\r\n                helperText={editTagError.value && editTagError.msg}\r\n                onChange={(e) => handleChangeEditTag(e)}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => submitEditTag(currentEditTag)}\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </List>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { getSmoothStepPath, getBezierPath } from \"react-flow-renderer\";\r\n\r\nexport default function CustomEdge({\r\n  source,\r\n  target,\r\n  id,\r\n  sourceX,\r\n  sourceY,\r\n  targetX,\r\n  targetY,\r\n  sourcePosition,\r\n  targetPosition,\r\n  animated,\r\n  style = {},\r\n  data,\r\n}) {\r\n  const edgePath =\r\n    data.type === \"smoothstep\"\r\n      ? getSmoothStepPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        })\r\n      : getBezierPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        });\r\n  return (\r\n    <>\r\n      <defs>\r\n        {data.hasArrow && (\r\n          <marker\r\n            className=\"react-flow__arrowhead\"\r\n            id={`marker-${id}`}\r\n            markerWidth=\"25\"\r\n            markerHeight=\"30\"\r\n            viewBox=\"-10 -10 20 20\"\r\n            orient=\"auto\"\r\n            refX=\"0\"\r\n            refY=\"0\"\r\n          >\r\n            <polyline\r\n              stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"1\"\r\n              fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n              points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n            />\r\n          </marker>\r\n        )}\r\n        <marker\r\n          className=\"react-flow__arrowhead\"\r\n          id={`marker-start-${id}`}\r\n          markerWidth=\"25\"\r\n          markerHeight=\"30\"\r\n          viewBox=\"-10 -10 20 20\"\r\n          orient=\"auto\"\r\n          refX=\"0\"\r\n          refY=\"0\"\r\n        >\r\n          <polyline\r\n            // transform=\"translate(90)\"\r\n            style={{ transform: \"rotate(180deg)\" }}\r\n            stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"1\"\r\n            fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n            points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n          />\r\n        </marker>\r\n      </defs>\r\n      <path\r\n        id={id}\r\n        d={edgePath}\r\n        stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n        fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n        className=\"react-flow__edge-path\"\r\n        style={{\r\n          ...style,\r\n          stroke: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        }}\r\n        markerEnd={`url(#marker-${id})`}\r\n        markerStart={`url(#marker-start-${id})`}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Drawer,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  Badge,\r\n  Snackbar,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Chip,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { DropzoneDialogBase } from \"material-ui-dropzone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Papa from \"papaparse\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  ReactFlowProvider,\r\n  getMarkerEnd,\r\n  getIncomers,\r\n  getOutgoers,\r\n  isNode,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  getConnectedEdges,\r\n  isEdge,\r\n} from \"react-flow-renderer\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport dagre from \"dagre\";\r\nimport { EditText } from \"react-edit-text\";\r\nimport \"react-edit-text/dist/index.css\";\r\nimport CustomEdge from \"./CustomEdge\";\r\nconst markerEnd = getMarkerEnd(\"arrowclosed\", \"my-marker\");\r\nconsole.log(markerEnd);\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nlet realOrientation;\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\n// https://flowchart-backend.herokuapp.com\r\n// http://127.0.0.1:8000\r\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\n// const nodeDimensions = {\r\n//   special: { width: 50, height: 150 },\r\n//   rectangle: { width: 150, height: 70 },\r\n//   oval: { width: 150, height: 70 },\r\n//   diamond: { width: 100, height: 100 },\r\n// };\r\nconst nodeWidth = 170;\r\nconst nodeHeight = 180;\r\nconst getLayoutedElements = (elements, direction = \"TB\") => {\r\n  const isHorizontal = direction === \"LR\";\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, {\r\n        width: nodeWidth,\r\n        height: nodeHeight,\r\n      });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n  console.log(elements, \"danhjsubkghbjlncsbugk hjbnudcysbkhjnonubskdgh m\");\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    previewChip: {\r\n      minWidth: 160,\r\n      maxWidth: 210,\r\n    },\r\n  })\r\n);\r\n\r\nconst SpecialNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  let keys = useRef(null);\r\n  let values = useRef(null);\r\n  let expand_collapse = useRef(null);\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 10,\r\n          borderRadius: \"10px 10px 0px 0px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"5%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n\r\n      {/* <Handle\r\n          type=\"source\"\r\n          position={realOrientation === \"horizontal\" ? \"left\" : \"top\"}\r\n          style={{ background: \"black\" }}\r\n          isConnectable={true}\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          position={realOrientation === \"horizontal\" ? \"bottom\" : \"right\"}\r\n          style={{ background: \"black\" }}\r\n          isConnectable={true}\r\n        /> */}\r\n\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"1\"\r\n        position=\"left\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"2\"\r\n        position=\"top\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        position=\"right\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        position=\"bottom\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      {/* <div>\r\n          {data.title.length >= 21\r\n            ? data.title.slice(0, 20) + \"...\"\r\n            : data.title}\r\n        </div> */}\r\n\r\n      {/* <div\r\n          style={{\r\n            width: \"93%\",\r\n            // textAlign: \"center\",\r\n            overflowWrap: \"break-word\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.title}\r\n          </Typography>\r\n        </div> */}\r\n      <div\r\n        style={{\r\n          width: \"93%\",\r\n          width: 150,\r\n          background: \"#f0f0f0\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          minHeight: 40,\r\n          borderRadius: \"0px 0px 10px 10px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {/* <div>\r\n          <Typography variant=\"caption\">\r\n            {data.description.length >= 23\r\n              ? data.description.slice(0, 22) + \"...\"\r\n              : data.description}\r\n          </Typography>\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            width: \"93%\",\r\n            minHeight: \"40px\",\r\n            // overflowWrap: \"break-word\",\r\n            textAlign: \"center\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          <div>\r\n            <button\r\n              ref={expand_collapse}\r\n              style={{\r\n                position: \"absolute\",\r\n                zIndex: 2,\r\n                marginTop: \"3%\",\r\n                marginLeft: \"-35%\",\r\n                border: \"0px solid\",\r\n                color: \"#4156B5\",\r\n                fontSize: 18,\r\n              }}\r\n              onClick={() => {\r\n                if (keys.current.className == \"hide\") {\r\n                  keys.current.className = \"\";\r\n                  values.current.className = \"\";\r\n                  expand_collapse.current.className = \"rotate270\";\r\n                } else {\r\n                  keys.current.className = \"hide\";\r\n                  values.current.className = \"hide\";\r\n                  expand_collapse.current.className = \"rotateNone\";\r\n                }\r\n              }}\r\n            >\r\n              {\"➤\"}\r\n            </button>\r\n          </div>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            spacing={1}\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            {/* <div style={{ paddingLeft: 35, paddingRight: 10 }}>key</div> */}\r\n            <div ref={keys} style={{ textAlign: \"center\" }}>\r\n              {data.description.map((pair) => {\r\n                return (\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    gutterBottom\r\n                    style={{\r\n                      paddingRight: 10,\r\n                    }}\r\n                  >\r\n                    {pair.key}\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </div>\r\n            <Divider\r\n              orientation=\"vertical\"\r\n              style={{ minHeight: 50, textAlign: \"center\" }}\r\n              flexItem\r\n            />\r\n            <div ref={values} style={{ textAlign: \"center\" }}>\r\n              {data.description.map((pair) => {\r\n                return (\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    gutterBottom\r\n                    style={{\r\n                      paddingLeft: 10,\r\n                    }}\r\n                  >\r\n                    {pair.value}\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </div>\r\n            {/* <div style={{ paddingLeft: 10 }}>Value</div> */}\r\n          </Grid>\r\n          {/* <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.description}\r\n          </Typography> */}\r\n        </div>\r\n      </div>\r\n      {/* <Handle\r\n        type=\"target\"\r\n        position={realOrientation === \"horizontal\" ? \"right\" : \"bottom\"}\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position={realOrientation === \"horizontal\" ? \"top\" : \"left\"}\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OvalNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 70,\r\n          textAlign: \"center\",\r\n          borderRadius: \"50px\",\r\n        }}\r\n      >\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"1\"\r\n        position=\"left\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"2\"\r\n        position=\"right\"\r\n        isConnectable={true}\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        position=\"top\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        position=\"bottom\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst RectangleNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 70,\r\n          textAlign: \"center\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"1\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        position=\"left\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"2\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"right\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"top\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"bottom\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst DiamondNodeComponent = ({ data }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          width: \"80px\",\r\n          position: \"absolute\",\r\n          height: \"80px\",\r\n          marginTop: \"10%\",\r\n          marginLeft: \"10%\",\r\n          zIndex: \"0\",\r\n          backgroundColor: \"#f0f0f0\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          transform: \"rotate(-45deg)\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"30%\", transform: \"rotate(45deg)\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n      <div style={{ backgroundColor: \"transparent\", marginTop: \"-5%\" }}>\r\n        <Handle\r\n          type=\"source\"\r\n          id=\"1\"\r\n          position=\"left\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            marginRight: \"5%\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          id=\"2\"\r\n          position=\"right\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          id=\"3\"\r\n          position=\"top\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"source\"\r\n          id=\"4\"\r\n          position=\"bottom\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            color: \"black\",\r\n            // border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n            // border: `2px solid white`,\r\n            width: 100,\r\n            minHeight: 100,\r\n            textAlign: \"center\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{ transform: \"rotate(-45deg)\", marginTop: \"10%\", zIndex: 0 }}\r\n          >\r\n            {/* <div>\r\n            {data.title.length >= 16\r\n              ? data.title.slice(0, 15) + \"...\"\r\n              : data.title}\r\n          </div> */}\r\n            <div\r\n              style={{\r\n                width: \"93%\",\r\n                minHeight: \"40px\",\r\n                // textAlign: \"center\",\r\n                overflowWrap: \"break-word\",\r\n                marginLeft: 10,\r\n                marginRight: 300,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Canvas = ({\r\n  currentFile,\r\n  selectedColor,\r\n  edgeType,\r\n  setEditMode,\r\n  isEditMode,\r\n  orientation,\r\n}) => {\r\n  realOrientation = orientation;\r\n  const [elements, setElements] = useState([]);\r\n  const [error, setError] = useState({ value: false, msg: \"\" });\r\n  const [elementCLicked, setElementClicked] = useState({});\r\n  const [editModeTtitle, setEditModeTitle] = useState(false);\r\n  const [editModeDescription, setEditModeDescription] = useState(false);\r\n  const [editModeDesc, setEditModeDesc] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [legend, setLegend] = useState({ color: \"#846090\", title: \"\" });\r\n  const [openUpload, setOpenUpload] = React.useState(false);\r\n  const [openNewNode, setOpenNewNode] = useState(false);\r\n  const [openNewLegend, setOpenNewLegend] = useState(false);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [legendVisibility, setLegendVisibility] = useState(false);\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [displayColorPickerArrow, setDisplayColorPickerArrow] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [colorArrow, setColorArrow] = useState({\r\n    r: \"187\",\r\n    g: \"187\",\r\n    b: \"192\",\r\n    a: \"100\",\r\n  });\r\n  const [toggledElements, setToggledElements] = useState([]);\r\n  const [targetElements, setTargetElements] = useState({});\r\n  const [isFirstTime, setFirstTime] = useState(true);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n  const [renderAlert, setRenderAlert] = useState({ value: false, msg: \"\" });\r\n  const [tags, setTags] = useState([]);\r\n  const [csv, setCsv] = useState(false);\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [openNewField, setOpenNewField] = useState(false);\r\n  const [field, setField] = useState({ key: \"\", value: \"\" });\r\n  console.log();\r\n  const [hasArrowEdge, setArrowEdge] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.hasArrowEdge\r\n      : false\r\n  );\r\n  const [hasAnimatedEdge, setAnimatedEdge] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.hasAnimatedEdge\r\n      : false\r\n  );\r\n  const [isCollapsable, setCollapsable] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.isCollapsable\r\n      : false\r\n  );\r\n\r\n  const onLoad = (reactFlowInstance) => {\r\n    // console.log(\"flow loaded:\", reactFlowInstance);\r\n    // console.log(reactFlowInstance.getElements());\r\n    setReactFlowInstance(reactFlowInstance);\r\n    reactFlowInstance.fitView();\r\n  };\r\n\r\n  const handleCloseField = () => {\r\n    setOpenNewField(false);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    edges.map((edge) => {\r\n      newElements.map((element) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.type = event.target.value;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const updateElementsDb = (newElements, currentFile, isDelete = false) => {\r\n    // console.log(\"updating database....\");\r\n    // console.log(newElements);\r\n    console.log(currentFile);\r\n    fetch(`${apiUrl}/api/update-elements`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.elements);\r\n        setElements(json.elements);\r\n      });\r\n  };\r\n\r\n  const onElementsRemove = () => {\r\n    const update = elements.filter((data) => {\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = update;\r\n    setElements(update);\r\n    updateNode(update);\r\n  };\r\n\r\n  const onConnect = async (params) => {\r\n    //  setElements((els) => addEdge(params, els))\r\n    //  console.log(elements);\r\n    //  updateNode()\r\n    const newParams = { ...params };\r\n    newParams.type = \"customEdge\";\r\n    newParams.data = { hasArrow: false, type: edgeType, color: colorArrow };\r\n    newParams.animated = false;\r\n    console.log(newParams, \"**********8\");\r\n    const edge = await addEdge(newParams, elements);\r\n    await setElements(edge);\r\n  };\r\n\r\n  const onElementClick = async (event, element) => {\r\n    if (isEditMode) {\r\n      setElementClicked(element);\r\n      setCollapsable(element.data.isCollapsable);\r\n      setAnimatedEdge(element.data.hasAnimatedEdge);\r\n      setArrowEdge(element.data.hasArrowEdge);\r\n    } else {\r\n      setElementClicked(element);\r\n    }\r\n  };\r\n\r\n  const getAllOutgoers = (node, elements) => {\r\n    return getOutgoers(node, elements).reduce(\r\n      (memo, outgoer) => [\r\n        ...memo,\r\n        outgoer,\r\n        ...getAllOutgoers(outgoer, elements),\r\n      ],\r\n      []\r\n    );\r\n  };\r\n\r\n  const onNodeClick = async (event, element) => {\r\n    if (isEditMode === false) {\r\n      if (element.data.isCollapsable) {\r\n        let newElements = [...elements];\r\n        const children = getOutgoers(element, elements);\r\n        if (children.length > 0) {\r\n          const allOutgoers = getAllOutgoers(element, elements);\r\n          console.log(allOutgoers);\r\n          console.log(children);\r\n          if (children[0].isHidden) {\r\n            children.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = false;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = false;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          } else {\r\n            allOutgoers.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = true;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = true;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          }\r\n          console.log(newElements);\r\n          setElements(newElements);\r\n          // let _elements;\r\n          // if (Object.keys(targetElements).length > 0) {\r\n          //   _elements = JSON.parse(JSON.stringify(toggledElements));\r\n          // } else {\r\n          //   _elements = JSON.parse(JSON.stringify(elements));\r\n          // }\r\n          // if (!targetElements[element.id]) {\r\n          //   const targets = [];\r\n          //   _elements.forEach((elem) => {\r\n          //     if (elem[\"source\"] !== undefined && elem.source === element.id) {\r\n          //       targets.push(elem.target);\r\n          //     }\r\n          //   });\r\n          //   console.log(\"targets\", targets);\r\n          //   console.log(\"elements\", _elements);\r\n          //   let firstLevelChildren;\r\n          //   firstLevelChildren = _elements.filter(\r\n          //     (elem) => elem.source !== element.id\r\n          //   );\r\n          //   // console.log('first-level-children-1', firstLevelChildren);\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.id)\r\n          //   );\r\n          //   // console.log('first-level-children-2', firstLevelChildren);\r\n          //   firstLevelChildren.forEach((elem) => {\r\n          //     if (elem[\"source\"] !== undefined && targets.includes(elem.source)) {\r\n          //       targets.push(elem.target);\r\n          //     }\r\n          //   });\r\n          //   setTargetElements({\r\n          //     [element.id]: targets,\r\n          //   });\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.source)\r\n          //   );\r\n          //   // console.log('first-level-children-3', firstLevelChildren);\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.id)\r\n          //   );\r\n          //   console.log(\"first-level-children-final\", firstLevelChildren);\r\n          //   setToggledElements(firstLevelChildren);\r\n          // } else {\r\n          //   const firstLevelChildren = _elements.filter(\r\n          //     (elem) =>\r\n          //       elem.source === element.id ||\r\n          //       targetElements[element.id].includes(elem.id) ||\r\n          //       targetElements[element.id].includes(elem.source)\r\n          //   );\r\n          //   console.log(\"first-level-children\", firstLevelChildren);\r\n          //   setToggledElements([...toggledElements, ...firstLevelChildren]);\r\n          //   const _targetElements = JSON.parse(JSON.stringify(targetElements));\r\n          //   delete _targetElements[element.id];\r\n          //   setTargetElements(_targetElements);\r\n          // }\r\n          // setElementClicked(element);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${apiUrl}/api/get-user-info`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newElements = [];\r\n        const jsonElements = JSON.parse(json.elements);\r\n        if (jsonElements.length === 0) {\r\n          newElements = [];\r\n        } else {\r\n          if (jsonElements.hasOwnProperty(currentFile.id)) {\r\n            newElements = jsonElements[currentFile.id];\r\n          } else {\r\n            newElements = [];\r\n          }\r\n        }\r\n        console.log(newElements);\r\n        setElements(newElements);\r\n        setTags(JSON.parse(json.tags));\r\n      });\r\n  }, [currentFile]);\r\n\r\n  const onNodeDragStop = (event, node) => {\r\n    const newElements = [...elements];\r\n    console.log(node);\r\n    // console.log(newElements);\r\n    newElements.map((element) => {\r\n      console.log(element);\r\n      if (element.id === node.id) {\r\n        console.log(element);\r\n        element.position = { ...node.position };\r\n      }\r\n    });\r\n    console.log(newElements);\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenNewNode(false);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = async () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        if (!elementCLicked.data.tags.includes(tag)) {\r\n          const newElement = [...elementCLicked.data.tags];\r\n          newElement.push(tag);\r\n          elementCLicked.data.tags = newElement;\r\n        }\r\n      }\r\n    });\r\n    await setElements(newElements);\r\n    updateNode(newElements);\r\n    // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        let str;\r\n        if (event.target.value.length >= 27) {\r\n          str = event.target.value.substring(0, 27);\r\n        } else {\r\n          str = event.target.value;\r\n        }\r\n        element.data[\"title\"] = str;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n\r\n    updateNode(newElements);\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"title\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // updateNode();\r\n  };\r\n\r\n  const handleClickTitle = () => {\r\n    setEditModeTitle(true);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"description\"] = event.target.value;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"description\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    // updateNode();\r\n  };\r\n\r\n  const handleChangeDesc = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"desc\"] = event.target.value;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    console.log(\"new ele\", newElements);\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const update = elements.filter((data) => {\r\n      if (edges.includes(data)) {\r\n        return false;\r\n      }\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    if (currentFile !== null) {\r\n      const newCurrent = { ...currentFile };\r\n      newCurrent.elements = update;\r\n    }\r\n    setElements(update);\r\n    updateElementsDb(update, currentFile);\r\n    setElementClicked({});\r\n  };\r\n\r\n  const handleClickDescription = () => {\r\n    setEditModeDescription(true);\r\n  };\r\n\r\n  const handleClickDesc = () => {\r\n    setEditModeDesc(true);\r\n  };\r\n\r\n  const getNodeId = () => `randomnode_${+new Date() + Math.random()}`;\r\n\r\n  const updateNode = (element = elements) => {\r\n    const newElements = [...element];\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n    updateElementsDb(newElements, currentFile);\r\n  };\r\n  const addNode = (type, position = { x: 100, y: 0 }) => {\r\n    let newElements = elements ? [...elements] : [];\r\n    newElements.push({\r\n      id: getNodeId(),\r\n      node: currentFile.id,\r\n      type: type,\r\n      data: {\r\n        title: \"title\",\r\n        description: type === \"special\" ? [{ key: \"\", value: \"\" }] : null,\r\n        color: selectedColor,\r\n        isCollapsable: true,\r\n        hasAnimatedEdge: false,\r\n        hasArrowEdge: false,\r\n        tags: [],\r\n        desc: \"description\",\r\n      },\r\n      targetPosition: orientation === \"horizontal\" ? \"left\" : \"top\",\r\n      sourcePosition: orientation === \"horizontal\" ? \"right\" : \"bottom\",\r\n      isHidden: false,\r\n      position: position,\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleChangeArrow = async () => {\r\n    const edges = await getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    let elementClickedIndex;\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.hasArrow = hasArrowEdge === true ? null : markerEnd;\r\n          }\r\n        } else {\r\n          if (element.id === elementCLicked.id) {\r\n            elementClickedIndex = index;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    newElements[elementClickedIndex].data.hasArrowEdge =\r\n      !newElements[elementClickedIndex].data.hasArrowEdge;\r\n    setArrowEdge(!hasArrowEdge);\r\n    console.log(newElements[elementClickedIndex].data.hasArrowEdge);\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleClickColorArrow = () => {\r\n    setDisplayColorPickerArrow(!displayColorPickerArrow);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleCloseColorArrow = () => {\r\n    setDisplayColorPickerArrow(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setColor(color.rgb);\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.color = color.rgb;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleChangeColorArrow = (color) => {\r\n    setColorArrow(color.rgb);\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.color = color.rgb;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setElements(newElements);\r\n  };\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    addNode(type, position);\r\n  };\r\n\r\n  const getKeyByValue = (object, value) => {\r\n    return Object.keys(object).find((key) => object[key] === value);\r\n  };\r\n  // useEffect(() => {\r\n  //   if (elements.length > 0) {\r\n  //   }\r\n  // }, [elements]);\r\n\r\n  // console.log('target-elements', targetElements);\r\n  // console.log('toggled-elemetns', toggledElements);\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const stylesArrow = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${colorArrow.r}, ${colorArrow.g}, ${colorArrow.b}, ${colorArrow.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleChangeSwitch = () => {\r\n    setFirstTime(true);\r\n    setEditMode(!isEditMode);\r\n  };\r\n\r\n  const handleChangeCollapsable = () => {\r\n    console.log(\"YYYYYYYYYYYYYGUKB\");\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        console.log(!element.data.isCollapsable);\r\n        element.data.isCollapsable = !isCollapsable;\r\n      }\r\n    });\r\n    setCollapsable(!isCollapsable);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const handleChangeLegendTitle = (e) => {\r\n    setLegend({ color: legend.color, title: e.target.value });\r\n  };\r\n\r\n  const selectLegend = () => {\r\n    let colors = [\r\n      { color: \"#846090\", name: \"c846090\" },\r\n      { color: \"#31688E\", name: \"c31688E\" },\r\n      { color: \"#42B879\", name: \"c42B879\" },\r\n      { color: \"#FEE83A\", name: \"cFEE83A\" },\r\n    ];\r\n\r\n    return (\r\n      <Grid item xs={2} style={{ textAlign: \"start\" }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<Add />}\r\n          style={{\r\n            textAlign: \"start\",\r\n            marginTop: 20,\r\n          }}\r\n          onClick={() => setOpenNewLegend(true)}\r\n        >\r\n          Add legend\r\n        </Button>\r\n        <Dialog\r\n          open={openNewLegend}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n          // style={{ overflow: \"hidden\" }}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\r\n            Select a Legend\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                width: \"80%\",\r\n              }}\r\n            >\r\n              {colors.map((col) => (\r\n                <div\r\n                  className={col.color == legend.color ? \"bordered\" : col.name}\r\n                  style={{\r\n                    backgroundColor: col.color,\r\n                    borderRadius: \"100%\",\r\n                    width: 20,\r\n                    height: 20,\r\n                  }}\r\n                  onClick={() => {\r\n                    setLegend({ color: col.color, title: legend.title });\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n            <TextField\r\n              name={elementCLicked.id}\r\n              defaultValue={legend.title}\r\n              placeholder=\"Legend name\"\r\n              margin=\"normal\"\r\n              onChange={handleChangeLegendTitle}\r\n              style={{ width: \"90%\" }}\r\n              value={legend.title}\r\n              error={error.value ? true : false}\r\n              helperText={error.value && error.msg}\r\n              InputProps={\r\n                {\r\n                  // classes: {\r\n                  //   disabled: {\r\n                  //     color: \"black\",\r\n                  //     borderBottom: 0,\r\n                  //     \"&:before\": {\r\n                  //       borderBottom: 0,\r\n                  //     },\r\n                  //   },\r\n                  // },\r\n                }\r\n              }\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginLeft: \"60%\" }}\r\n              onClick={() => {\r\n                addLegend();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const addLegend = () => {\r\n    if (legend.title == \"\")\r\n      setError({ value: true, msg: \"Please enter the name of the legend\" });\r\n    else {\r\n      setError({ value: false, msg: \"\" });\r\n      setOpenNewLegend(false);\r\n      setLegendVisibility(true);\r\n    }\r\n  };\r\n\r\n  const hexToRgb = (hex) => {\r\n    console.log(hex);\r\n    var c;\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      console.log(\"yayyyyyyyyyyyyy\");\r\n      c = hex.substring(1).split(\"\");\r\n      if (c.length == 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n      }\r\n      c = \"0x\" + c.join(\"\");\r\n      return { r: (c >> 16) & 255, g: (c >> 8) & 255, b: c & 255, a: 1 };\r\n    }\r\n    return {\r\n      r: \"193\",\r\n      g: \"230\",\r\n      b: \"255\",\r\n      a: \"100\",\r\n    };\r\n  };\r\n\r\n  const parseDescription = (des) => {\r\n    const lst = des.split(\",\");\r\n    const finalLst = [];\r\n    lst.map((pair) => {\r\n      const newPair = pair.split(\":\");\r\n      finalLst.push({ key: newPair[0], value: newPair[1] });\r\n    });\r\n    return finalLst;\r\n  };\r\n\r\n  const submitField = () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.description.push(field);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n    setOpenNewField(false);\r\n  };\r\n\r\n  const hexToRgbA = (hex) => {\r\n    var c;\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      c = hex.substring(1).split(\"\");\r\n      if (c.length == 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n      }\r\n      c = \"0x\" + c.join(\"\");\r\n      return {\r\n        r: (c >> 16) & 255,\r\n        g: (c >> 8) & 255,\r\n        b: c & 255,\r\n        a: \"1\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleChangeAnimated = () => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    let elementClickedIndex;\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.animated = !hasAnimatedEdge;\r\n          }\r\n        } else {\r\n          if (element.id === elementCLicked.id) {\r\n            elementClickedIndex = index;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    newElements[elementClickedIndex].data.hasAnimatedEdge =\r\n      !newElements[elementClickedIndex].data.hasAnimatedEdge;\r\n    setAnimatedEdge(!hasAnimatedEdge);\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const checkTags = (tags2Check) => {\r\n    console.log(tags);\r\n    if (tags2Check.length === 0) {\r\n      return [];\r\n    } else {\r\n      const newTags = tags2Check.split(\",\");\r\n      if (tags.length === 0) {\r\n        return {\r\n          value: true,\r\n          msg: \"One or more of the tags provided does not exist.\",\r\n        };\r\n      }\r\n      newTags.map((tag) => {\r\n        if (!tags.includes(tag)) {\r\n          return {\r\n            value: true,\r\n            msg: \"One or more of the tags provided does not exist.\",\r\n          };\r\n        }\r\n      });\r\n      return newTags;\r\n    }\r\n  };\r\n\r\n  console.log(\"elements\", elements);\r\n\r\n  let filteredElements;\r\n\r\n  if (elements.length === 0) {\r\n    filteredElements = [];\r\n  } else {\r\n    console.log(elements, \"***********************88\");\r\n    filteredElements = elements.filter((data) => {\r\n      return data.node === currentFile.id || data.source;\r\n    });\r\n    filteredElements.sort((a, b) => {\r\n      if (a.hasOwnProperty(\"data\") && b.hasOwnProperty(\"data\")) {\r\n        return parseInt(a.id.slice(11, 24)) - parseInt(b.id.slice(11, 24));\r\n      }\r\n    });\r\n  }\r\n  if (!isEditMode) {\r\n    filteredElements = getLayoutedElements(\r\n      filteredElements,\r\n      orientation === \"vertical\" ? \"TB\" : \"LR\"\r\n    );\r\n  }\r\n  console.log(filteredElements);\r\n  console.log(elements);\r\n  const classes = useStyles();\r\n\r\n  if (currentFile === null) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Grid container direction=\"row\" spacing={1} style={{ width: \"80%\" }}>\r\n          <Grid item xs={2} style={{ textAlign: \"start\" }}>\r\n            {isEditMode && (\r\n              <>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  startIcon={<Add />}\r\n                  style={{\r\n                    textAlign: \"start\",\r\n                    marginTop: 20,\r\n                  }}\r\n                  onClick={() => setOpenNewNode(true)}\r\n                >\r\n                  New Node\r\n                </Button>\r\n                <Dialog\r\n                  open={openNewNode}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                  // style={{ overflow: \"hidden\" }}\r\n                >\r\n                  <DialogTitle\r\n                    id=\"form-dialog-title\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    Select a Shape\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={1}>\r\n                      <Grid container direction=\"row\" spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            onClick={() => {\r\n                              addNode(\"special\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                background: \"#ADD8E6\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                border: \"1px solid black\",\r\n                                width: 100,\r\n                                height: 10,\r\n                                borderRadius: \"10px 10px 0px 0px\",\r\n                                textAlign: \"center\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                            <div\r\n                              style={{\r\n                                background: \"white\",\r\n                                border: \"1px solid black\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                width: 100,\r\n                                height: 40,\r\n                                borderRadius: \"0px 0px 10px 10px\",\r\n                                textAlign: \"center\",\r\n                                marginRight: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"90px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"50px\",\r\n                              marginLeft: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"oval\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        spacing={1}\r\n                        style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"rectangle\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"80px\",\r\n                              borderRadius: \"5px\",\r\n                              transform: \"rotate(45deg)\",\r\n                              marginLeft: \"30px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"diamond\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            {/* <Grid container direction=\"row\"> */}\r\n            <Typography variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              {`Project: ${currentFile.parentId}`}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {`Sub Process: ${currentFile.text}`}\r\n            </Typography>\r\n            {/* </Grid> */}\r\n          </Grid>\r\n          {!legendVisibility && selectLegend()}\r\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\">\r\n              <Grid\r\n                component=\"label\"\r\n                container\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n                style={{ paddingTop: 20, paddingLeft: 90 }}\r\n              >\r\n                <Grid item>View</Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={isEditMode}\r\n                    onChange={handleChangeSwitch}\r\n                    name=\"checked\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>Edit</Grid>\r\n                {isEditMode && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: 60 }}\r\n                    onClick={() => {\r\n                      // console.log(\r\n                      //   elements,\r\n                      //   \"t8934ufjhn888ewhyobfo8ulh74uilw748ofulufo47fuligo7t357grlgt57grsg7rsty7osrlgwyot7rswy7hsgywo7hrlgwy7oglyo4rhgyotrglyo4rgyot7r\"\r\n                      // );\r\n                      updateNode([...elements]);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: isEditMode ? 10 : 30 }}\r\n                  startIcon={<CloudUploadIcon />}\r\n                  onClick={() => {\r\n                    setOpenUpload(true);\r\n                  }}\r\n                >\r\n                  Import CSV\r\n                </Button>\r\n                <DropzoneDialogBase\r\n                  clearOnUnmount={true}\r\n                  filesLimit={1}\r\n                  dialogTitle={\r\n                    <>\r\n                      {console.log(renderAlert)}\r\n                      {renderAlert.value && (\r\n                        <Alert severity=\"error\">{renderAlert.msg}</Alert>\r\n                      )}\r\n                      <span>Upload file</span>\r\n                      <IconButton\r\n                        style={{\r\n                          right: \"12px\",\r\n                          top: \"8px\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                        onClick={() => setOpenUpload(false)}\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </>\r\n                  }\r\n                  acceptedFiles={[\".csv\"]}\r\n                  fileObjects={fileObjects}\r\n                  cancelButtonText={\"cancel\"}\r\n                  showAlerts={[\"error\", \"info\"]}\r\n                  submitButtonText={\"submit\"}\r\n                  maxFileSize={5000000}\r\n                  open={openUpload}\r\n                  onAdd={(newFileObjs) => {\r\n                    console.log(\"onAdd\", newFileObjs);\r\n                    if (fileObjects.length === 0) {\r\n                      setFileObjects([].concat(fileObjects, newFileObjs));\r\n                    }\r\n                  }}\r\n                  onDelete={(deleteFileObj) => {\r\n                    const newFilesObjects = [...fileObjects].filter(\r\n                      (item) => item !== deleteFileObj\r\n                    );\r\n                    setFileObjects(newFilesObjects);\r\n                    console.log(\"onDelete\", deleteFileObj);\r\n                  }}\r\n                  onClose={() => setOpenUpload(false)}\r\n                  onSave={() => {\r\n                    console.log(fileObjects[0]);\r\n                    Papa.parse(fileObjects[0].file, {\r\n                      complete: function (results) {\r\n                        let data = results.data;\r\n                        let jsonArr = [];\r\n                        const ids = {};\r\n                        const children = {};\r\n                        const animateds = [];\r\n                        const edgeTypes = {};\r\n                        const arrows = [];\r\n                        const description = {};\r\n                        const arrowColors = {};\r\n                        let counter = 0;\r\n                        data = data.slice(1);\r\n                        data.map((element) => {\r\n                          console.log(\"0------0\", element);\r\n                          const checkedTags = checkTags(element[3]);\r\n                          console.log(checkedTags, \"7777777777777777777\");\r\n                          console.log(element[4]);\r\n                          console.log(element[0]);\r\n                          console.log(element[0].includes(\".\"));\r\n                          if (element[0].includes(\".\")) {\r\n                            counter = counter + 1;\r\n                            const lst =\r\n                              description[ids[element[0].split(\".\")[0]]] !==\r\n                              undefined\r\n                                ? [\r\n                                    ...description[\r\n                                      ids[element[0].split(\".\")[0]]\r\n                                    ],\r\n                                  ]\r\n                                : [];\r\n                            lst.push({\r\n                              key: element[1],\r\n                              value: element[2],\r\n                            });\r\n                            description[ids[element[0].split(\".\")[0]]] = [\r\n                              ...lst,\r\n                            ];\r\n                          } else {\r\n                            if (\r\n                              [\r\n                                \"special\",\r\n                                \"oval\",\r\n                                \"rectangle\",\r\n                                \"diamond\",\r\n                              ].includes(element[4].toLowerCase())\r\n                            ) {\r\n                              console.log(\"----\");\r\n                              if (Array.isArray(checkedTags)) {\r\n                                ids[element[0]] = getNodeId();\r\n                                jsonArr.push({\r\n                                  id: ids[element[0]],\r\n                                  node: currentFile.id,\r\n                                  type: element[4],\r\n                                  data: {\r\n                                    title: element[1],\r\n                                    description: null,\r\n                                    color: element[2].startsWith(\"#\")\r\n                                      ? hexToRgb(element[2])\r\n                                      : {\r\n                                          r: \"193\",\r\n                                          g: \"230\",\r\n                                          b: \"255\",\r\n                                          a: \"100\",\r\n                                        },\r\n                                    tags: checkedTags,\r\n                                    isCollapsable:\r\n                                      element[5] === \"TRUE\" ? true : false,\r\n                                  },\r\n                                  isHidden: false,\r\n                                  position: { x: 0, y: 0 },\r\n                                  desc: null,\r\n                                });\r\n                                if (element[7] === \"TRUE\") {\r\n                                  animateds.push(ids[element[0]]);\r\n                                }\r\n                                if (element[8] === \"step\") {\r\n                                  edgeTypes[ids[element[0]]] = \"step\";\r\n                                } else {\r\n                                  edgeTypes[ids[element[0]]] = \"curved\";\r\n                                }\r\n                                if (element[9] === \"TRUE\") {\r\n                                  arrows.push(ids[element[0]]);\r\n                                }\r\n                                if (element[10].startsWith(\"#\")) {\r\n                                  arrowColors[ids[element[0]]] = element[10];\r\n                                }\r\n                                console.log(jsonArr);\r\n                                if (element[6].length > 0) {\r\n                                  if (element[6].includes(\",\")) {\r\n                                    const csvChildren = element[6].split(\",\");\r\n                                    children[element[0]] = csvChildren;\r\n                                  }\r\n                                }\r\n                              } else {\r\n                                console.log(checkedTags);\r\n                                // setRenderAlert(checkedTags);\r\n                                setRenderAlert({\r\n                                  value: true,\r\n                                  msg: \"One or more of the tags provided does not exist.\",\r\n                                });\r\n                              }\r\n                            } else {\r\n                              console.log(\"test\");\r\n                              setRenderAlert({\r\n                                value: true,\r\n                                msg: \"A type of shape in the file does not exist.\",\r\n                              });\r\n                            }\r\n                          }\r\n                        });\r\n                        console.log(jsonArr);\r\n                        console.log(description);\r\n                        jsonArr.map((element) => {\r\n                          element.data.description = description[element.id];\r\n                        });\r\n                        console.log(\"Finished:\", results.data);\r\n                        console.log(\"onSave\", fileObjects);\r\n                        console.log(jsonArr.length);\r\n                        if (jsonArr.length === data.length - counter) {\r\n                          console.log(ids);\r\n                          console.log(children);\r\n                          for (var key in children) {\r\n                            if (children.hasOwnProperty(key)) {\r\n                              if (Array.isArray(children[key])) {\r\n                                children[key].map((child) => {\r\n                                  const edge = addEdge(\r\n                                    {\r\n                                      animated: animateds.includes(ids[key])\r\n                                        ? true\r\n                                        : false,\r\n                                      type: \"customEdge\",\r\n                                      data: {\r\n                                        type: edgeTypes[ids[key]],\r\n                                        hasArrow:\r\n                                          arrows.includes(ids[key]) === true\r\n                                            ? true\r\n                                            : false,\r\n                                        color:\r\n                                          arrowColors[ids[key]] !== undefined\r\n                                            ? hexToRgbA(arrowColors[ids[key]])\r\n                                            : {\r\n                                                r: \"187\",\r\n                                                g: \"187\",\r\n                                                b: \"192\",\r\n                                                a: \"100\",\r\n                                              },\r\n                                      },\r\n                                      source: ids[key],\r\n                                      target: ids[child],\r\n                                    },\r\n                                    jsonArr\r\n                                  );\r\n                                  console.log(edge);\r\n                                  jsonArr = edge;\r\n                                });\r\n                              } else {\r\n                                const edge = addEdge(\r\n                                  {\r\n                                    animated: animateds.includes(ids[key])\r\n                                      ? true\r\n                                      : false,\r\n                                    type: \"customEdge\",\r\n                                    data: {\r\n                                      type: edgeTypes[ids[key]],\r\n                                      hasArrow:\r\n                                        arrows.includes(ids[key]) === true\r\n                                          ? true\r\n                                          : false,\r\n                                      color:\r\n                                        arrowColors[ids[key]] !== undefined\r\n                                          ? hexToRgbA(arrowColors[ids[key]])\r\n                                          : {\r\n                                              r: \"187\",\r\n                                              g: \"187\",\r\n                                              b: \"192\",\r\n                                              a: \"100\",\r\n                                            },\r\n                                    },\r\n                                    source: ids[key],\r\n                                    target: ids[children[key]],\r\n                                  },\r\n                                  jsonArr\r\n                                );\r\n                                console.log(edge);\r\n                                jsonArr = edge;\r\n                              }\r\n                            }\r\n                          }\r\n                          const layoutedElements = getLayoutedElements(jsonArr);\r\n                          setElements(layoutedElements);\r\n                          updateNode(layoutedElements);\r\n                          console.log(jsonArr);\r\n                          setCsv(true);\r\n                          setOpenUpload(false);\r\n                        }\r\n                      },\r\n                    });\r\n                  }}\r\n                  showPreviewsInDropzone={false}\r\n                  useChipsForPreview\r\n                  previewGridProps={{\r\n                    container: { spacing: 1, direction: \"row\" },\r\n                  }}\r\n                  previewChipProps={{ classes: { root: classes.previewChip } }}\r\n                  showFileNamesInPreview={true}\r\n                />\r\n                <Snackbar\r\n                  open={renderAlert.value}\r\n                  autoHideDuration={5000}\r\n                  onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                >\r\n                  <Alert\r\n                    onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                    severity=\"error\"\r\n                  >\r\n                    {renderAlert.msg}\r\n                  </Alert>\r\n                </Snackbar>\r\n              </Grid>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider orientation=\"horizontal\" />\r\n        <ReactFlowProvider>\r\n          <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n            <ReactFlow\r\n              nodeTypes={{\r\n                special: SpecialNodeComponent,\r\n                oval: OvalNodeComponent,\r\n                rectangle: RectangleNodeComponent,\r\n                diamond: DiamondNodeComponent,\r\n              }}\r\n              edgeTypes={{\r\n                customEdge: CustomEdge,\r\n              }}\r\n              elements={\r\n                Object.keys(targetElements).length !== 0\r\n                  ? toggledElements\r\n                  : filteredElements\r\n              }\r\n              // elements={filteredElements}\r\n              onElementsRemove={onElementsRemove}\r\n              onNodeDoubleClick={onElementClick}\r\n              onElementClick={onNodeClick}\r\n              onDrop={onDrop}\r\n              onDragOver={onDragOver}\r\n              onNodeDragStop={onNodeDragStop}\r\n              connectionLineType={edgeType}\r\n              onPaneContextMenu={() => setOpenNewNode(true)}\r\n              onConnect={onConnect}\r\n              onLoad={onLoad}\r\n              snapToGrid={false}\r\n              // snapGrid={[15, 15]}\r\n              paneMoveable={true}\r\n              style={{ height: \"90vh\", width: isEditMode ? \"84%\" : \"95%\" }}\r\n            >\r\n              <MiniMap\r\n                nodeStrokeColor={(n) => {\r\n                  if (n.style?.background) return n.style.background;\r\n                  if (n.type === \"special\") return \"#0041d0\";\r\n                  if (n.type === \"oval\") return \"#008000\";\r\n                  if (n.type === \"rectangle\") return \"#8A2BE2\";\r\n                  if (n.type === \"diamond\") return \"#00008b\";\r\n                  if (n.type === \"output\") return \"#ff0072\";\r\n                  if (n.type === \"default\") return \"#1a192b\";\r\n\r\n                  return \"#eee\";\r\n                }}\r\n                nodeColor={(n) => {\r\n                  if (n.style?.background) return n.style.background;\r\n\r\n                  return \"#fff\";\r\n                }}\r\n                nodeBorderRadius={2}\r\n              />\r\n              <Controls />\r\n              {legend.title !== \"\" && legendVisibility && (\r\n                <div className={\"legendBox\"}>\r\n                  <div\r\n                    className={\"legendColor\"}\r\n                    style={{ backgroundColor: legend.color }}\r\n                  ></div>\r\n                  <div style={{ marginLeft: \"10%\" }}>{legend.title}</div>\r\n                </div>\r\n              )}\r\n              <Background color=\"#aaa\" gap={16} />\r\n            </ReactFlow>\r\n          </div>\r\n        </ReactFlowProvider>\r\n        <svg width=\"0\" height=\"0\">\r\n          <defs>\r\n            <marker\r\n              className=\"react-flow__arrowhead\"\r\n              id=\"my-marker\"\r\n              markerWidth=\"25\"\r\n              markerHeight=\"25\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              orient=\"auto\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n            >\r\n              <polyline\r\n                stroke=\"#BBBBC0\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"1\"\r\n                fill=\"#BBBBC0\"\r\n                points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n              />\r\n            </marker>\r\n          </defs>\r\n        </svg>\r\n        {/* <div /> */}\r\n        {isEditMode ? (\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              overflowY: \"scroll\",\r\n              maxHeight: \"100vh\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ textAlign: \"center\", width: 250, overflow: \"hidden\" }}\r\n            >\r\n              {Object.keys(elementCLicked).length === 0 ? (\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  gutterBottom\r\n                  style={{ paddingTop: 380, paddingLeft: 10, paddingRight: 10 }}\r\n                >\r\n                  Double-click on any item to get a detailed view.\r\n                </Typography>\r\n              ) : (\r\n                <div>\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Title\r\n                  </Typography>\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.title}\r\n                    margin=\"normal\"\r\n                    onChange={handleChangeTitle}\r\n                    disabled={!editModeTtitle}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.title}\r\n                    InputProps={{\r\n                      // classes: {\r\n                      //   disabled: {\r\n                      //     color: \"black\",\r\n                      //     borderBottom: 0,\r\n                      //     \"&:before\": {\r\n                      //       borderBottom: 0,\r\n                      //     },\r\n                      //   },\r\n                      // },\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton onClick={handleClickTitle}>\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Description\r\n                  </Typography>\r\n\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.desc}\r\n                    margin=\"normal\"\r\n                    rows={4}\r\n                    multiline\r\n                    variant=\"filled\"\r\n                    onChange={handleChangeDesc}\r\n                    // disabled={!editModeDesc}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.desc}\r\n                    // InputProps={{\r\n                    //   // classes: {\r\n                    //   //   disabled: {\r\n                    //   //     color: \"black\",\r\n                    //   //     borderBottom: 0,\r\n                    //   //     \"&:before\": {\r\n                    //   //       borderBottom: 0,\r\n                    //   //     },\r\n                    //   //   },\r\n                    //   // },\r\n                    //   endAdornment: (\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <IconButton onClick={handleClickDesc}>\r\n                    //         <Edit />\r\n                    //       </IconButton>\r\n                    //     </InputAdornment>\r\n                    //   ),\r\n                    // }}\r\n                  />\r\n                  {elementCLicked.type === \"special\" && (\r\n                    <>\r\n                      <Typography variant=\"h6\" style={{ marginTop: 20 }}>\r\n                        Add Field\r\n                      </Typography>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        color=\"secondary\"\r\n                        onClick={() => setOpenNewField(true)}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                      <Dialog\r\n                        open={openNewField}\r\n                        onClose={handleCloseField}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                      >\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          Add New Field\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <div style={{ textAlign: \"center\" }}>\r\n                            <TextField\r\n                              style={{ width: \"40%\", marginRigh: 10 }}\r\n                              label=\"Key\"\r\n                              id=\"outlined-size-small\"\r\n                              defaultValue=\"Key\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.key = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              style={{ width: \"40%\", marginLeft: 10 }}\r\n                              label=\"Value\"\r\n                              id=\"outlined-size-normal\"\r\n                              defaultValue=\"Value\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.value = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                            />\r\n                          </div>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={handleCloseField} color=\"primary\">\r\n                            Cancel\r\n                          </Button>\r\n                          <Button onClick={submitField} color=\"primary\">\r\n                            Add\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </>\r\n                  )}\r\n                  <Divider style={{ marginTop: 10 }} />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon size=\"medium\" />}\r\n                    onClick={() => setOpen(true)}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    Add Tag\r\n                  </Button>\r\n                  <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">Add Tag</DialogTitle>\r\n                    <DialogContent>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={tag}\r\n                        onChange={handleChangeTag}\r\n                        fullWidth\r\n                        displayEmpty\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {localStorage.getItem(\"tags\") !== null &&\r\n                        JSON.parse(localStorage.getItem(\"tags\")).length > 0 ? (\r\n                          JSON.parse(localStorage.getItem(\"tags\")).map(\r\n                            (tag) => {\r\n                              return <MenuItem value={tag}>{tag}</MenuItem>;\r\n                            }\r\n                          )\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Select>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={submitTag} color=\"primary\">\r\n                        Add\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  {elementCLicked.data.tags.length > 0 &&\r\n                    elementCLicked.data.tags.map((tag) => (\r\n                      <Chip\r\n                        label={tag}\r\n                        color=\"secondary\"\r\n                        style={{ marginBottom: 10 }}\r\n                      />\r\n                    ))}\r\n\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={isCollapsable}\r\n                          onClick={() => handleChangeCollapsable()}\r\n                          name=\"checked2\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Collapsable</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          Node Color\r\n                        </Typography>\r\n                        <div style={styles.swatch} onClick={handleClickColor}>\r\n                          <div style={styles.color} />\r\n                        </div>\r\n                        {displayColorPicker ? (\r\n                          <div style={styles.popover}>\r\n                            <div\r\n                              style={styles.cover}\r\n                              onClick={handleCloseColor}\r\n                            />\r\n                            <SketchPicker\r\n                              color={color}\r\n                              onChange={handleChangeColor}\r\n                            />\r\n                          </div>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"start\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n                    >\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                        EdgeType\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ fontSize: 15 }}\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        onChange={handleChangeEdgeType}\r\n                        variant=\"outlined\"\r\n                        label=\"EdgeType\"\r\n                        defaultValue=\"smoothstep\"\r\n                        displayEmpty={true}\r\n                      >\r\n                        <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n                        <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={hasAnimatedEdge}\r\n                          onClick={() => handleChangeAnimated()}\r\n                          name=\"checked3\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Animated</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={hasArrowEdge}\r\n                          onClick={() => handleChangeArrow()}\r\n                          name=\"checked4\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Arrow</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Arrow Color\r\n                      </Typography>\r\n                      <div\r\n                        style={stylesArrow.swatch}\r\n                        onClick={handleClickColorArrow}\r\n                      >\r\n                        <div style={stylesArrow.color} />\r\n                      </div>\r\n                      {displayColorPickerArrow ? (\r\n                        <div style={stylesArrow.popover}>\r\n                          <div\r\n                            style={stylesArrow.cover}\r\n                            onClick={handleCloseColorArrow}\r\n                          />\r\n                          <SketchPicker\r\n                            color={colorArrow}\r\n                            onChange={handleChangeColorArrow}\r\n                          />\r\n                        </div>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </div>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <IconButton\r\n                    style={{ color: \"red\" }}\r\n                    onClick={() => handleDelete()}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Drawer>\r\n        ) : (\r\n          <div>\r\n            {Object.keys(elementCLicked).length > 0 && (\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                anchor=\"right\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  overflowY: \"scroll\",\r\n                  maxHeight: \"100vh\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    width: 250,\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      style={{\r\n                        marginTop: 40,\r\n                        marginBottom: 10,\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      Title\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {elementCLicked.data.title}\r\n                    </Typography>\r\n                    {/* <TextField\r\n                      name={elementCLicked.id}\r\n                      defaultValue={elementCLicked.data.title}\r\n                      margin=\"normal\"\r\n                      onChange={handleChangeTitle}\r\n                      disabled\r\n                      style={{ width: \"90%\" }}\r\n                      value={elementCLicked.data.title}\r\n                      InputProps={\r\n                        {\r\n                          // classes: {\r\n                          //   disabled: {\r\n                          //     color: \"black\",\r\n                          //     borderBottom: 0,\r\n                          //     \"&:before\": {\r\n                          //       borderBottom: 0,\r\n                          //     },\r\n                          //   },\r\n                          // },\r\n                        }\r\n                      }\r\n                    /> */}\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      style={{\r\n                        marginTop: 40,\r\n                        marginBottom: 10,\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      Description\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {elementCLicked.data.desc}\r\n                    </Typography>\r\n                    {/* <TextField\r\n                      name={elementCLicked.id}\r\n                      defaultValue={elementCLicked.data.desc}\r\n                      margin=\"normal\"\r\n                      onChange={handleChangeDesc}\r\n                      disabled\r\n                      rows={5}\r\n                      multiline\r\n                      style={{ width: \"90%\" }}\r\n                      value={elementCLicked.data.desc}\r\n                      InputProps={\r\n                        {\r\n                          // classes: {\r\n                          //   disabled: {\r\n                          //     color: \"black\",\r\n                          //     borderBottom: 0,\r\n                          //     \"&:before\": {\r\n                          //       borderBottom: 0,\r\n                          //     },\r\n                          //   },\r\n                          // },\r\n                        }\r\n                      }\r\n                    /> */}\r\n                  </div>\r\n                </Grid>\r\n              </Drawer>\r\n            )}\r\n          </div>\r\n          // )}\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Canvas;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport SideBar from \"./components/SideBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Canvas from \"./components/Canvas\";\nimport { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// https://flowchart-backend.herokuapp.com\n// http://127.0.0.1:8000\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\n\nfunction App() {\n  const [currentFile, setCurrentFile] = useState(\n    localStorage.getItem(\"current\") === null\n      ? {}\n      : JSON.parse(localStorage.getItem(\"current\"))\n  );\n  const [isCanvasVisible, setIsCanvasVisible] = useState(false);\n  const [selectedColor, setSelectedColor] = useState({\n    r: \"193\",\n    g: \"230\",\n    b: \"255\",\n    a: \"100\",\n  });\n  const [edgeType, setEdgeType] = useState(\"smoothstep\");\n  const [isEditMode, setEditMode] = useState(false);\n  const [orientation, setOrientation] = useState(\"vertical\");\n\n  const updateSessionDb = (session) => {\n    fetch(`${apiUrl}/api/update-session`, {\n      method: \"POST\",\n      body: JSON.stringify({ session_id: session }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => console.log(json));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"session\") === null) {\n      const session = jwt.sign({ userId: uuidv4() }, \"secretkey\", {\n        expiresIn: \"1h\",\n        algorithm: \"HS256\",\n      });\n      updateSessionDb(session);\n      localStorage.setItem(\"session\", session);\n    }\n  }, []);\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={5} sm={4} md={2} lg={2}>\n        <SideBar\n          currentFile={currentFile}\n          setCurrentFile={setCurrentFile}\n          setCanvasVisibility={(flag) => setIsCanvasVisible(flag)}\n          setEdgeType={setEdgeType}\n          setSelectedColor={setSelectedColor}\n          isEditMode={isEditMode}\n          setOrientation={setOrientation}\n          orientation={orientation}\n        />\n      </Grid>\n      {isCanvasVisible && (\n        <Grid item xs={7} sm={8} md={10} lg={10}>\n          <Canvas\n            orientation={orientation}\n            currentFile={currentFile}\n            setCurrentFile={setCurrentFile}\n            isEditMode={isEditMode}\n            setEditMode={setEditMode}\n            selectedColor={selectedColor}\n            edgeType={edgeType}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}