{"version":3,"sources":["components/SideBar.js","components/CustomEdge.js","components/Canvas.js","App.js","index.js"],"names":["apiUrl","SideBar","currentFile","setCurrentFile","setCanvasVisibility","setEdgeType","setSelectedColor","isEditMode","setOrientation","orientation","useState","files","setFiles","folder","setFolder","file","setFile","React","openNewFolder","setOpenNewFolder","openNewTag","setOpenNewTag","value","msg","error","setError","names","setNames","tagError","setTagError","tag","setTag","tags","setTags","openNewFile","setOpenNewFile","openEditTag","setOpenEditTag","currentEditTag","setCurrentEditTag","editTag","setEditTag","editTagError","setEditTagError","activeFolder","setActiveFolder","displayColorPicker","setDisplayColorPicker","r","g","b","a","color","setColor","setValue","useEffect","fetch","method","body","JSON","stringify","session_id","localStorage","getItem","headers","then","res","json","newTags","newNames","newFiles","console","log","Array","isArray","parse","hasOwnProperty","handleClose","updateFilesDb","newElements","updateNamesDb","updateTagsDb","nodes","length","filter","node","canvasVisibilityHandler","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","styles","reactCSS","default","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","Tabs","onChange","newValue","variant","indicatorColor","tabItemContainerStyle","textColor","aria-label","Tab","icon","label","Grid","item","xs","style","textAlign","borderRight","Typography","gutterBottom","container","spacing","justifyContent","IconButton","onClick","fontSize","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","helperText","target","fullWidth","DialogActions","Button","includes","push","text","expanded","setItem","disabled","parentId","elements","legend","index","findIndex","element","splice","namesIndex","indexOf","removeItem","data","isDelete","updateElementsDb","Object","keys","Divider","marginTop","maxHeight","overflow","searchEnabled","paddingLeft","paddingTop","paddingRight","fontWeight","dataStructure","items","onItemClick","e","itemData","direction","draggable","border","marginLeft","paddingBottom","transform","rgb","FormControl","InputLabel","Select","labelId","defaultValue","displayEmpty","MenuItem","component","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","backgroundColor","startIcon","prevTags","concat","List","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","edge","deleteTag","type","originalTag","submitEditTag","CustomEdge","source","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","animated","edgePath","getSmoothStepPath","getBezierPath","className","markerWidth","markerHeight","viewBox","orient","refX","refY","stroke","strokeLinecap","strokeLinejoin","strokeWidth","fill","points","d","markerEnd","markerStart","hasArrow","getMarkerEnd","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","getLayoutedElements","isHorizontal","setGraph","rankdir","forEach","el","isNode","setNode","setEdge","layout","nodeWithPosition","x","nodeWidth","Math","random","y","nodeHeight","useStyles","makeStyles","theme","createStyles","previewChip","minWidth","maxWidth","SpecialNodeComponent","myRef","useRef","keys_top","values_top","expand_collapse_top","grid_top","properties_top","keys_bottom","values_bottom","expand_collapse_bottom","grid_bottom","properties_bottom","ref","borderColor","minHeight","align","title","marginRight","isConnectable","connectionMode","onMouseOver","current","onMouseLeave","description","alignItems","pair","section","key","flexItem","value1","value2","borderTop","OvalNodeComponent","RectangleNodeComponent","DiamondNodeComponent","overflowWrap","Canvas","selectedColor","edgeType","setEditMode","startLegendObj","setElements","elementCLicked","setElementClicked","editModeTtitle","setEditModeTitle","setOpen","setLegend","legends","setLegends","openUpload","setOpenUpload","openNewNode","setOpenNewNode","openNewLegend","setOpenNewLegend","displayColorPickerArrow","setDisplayColorPickerArrow","colorArrow","setColorArrow","toggledElements","targetElements","setFirstTime","fileObjects","setFileObjects","renderAlert","setRenderAlert","setCsv","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","openNewField","setOpenNewField","field","setField","hasArrowEdge","setArrowEdge","hasAnimatedEdge","setAnimatedEdge","isCollapsable","setCollapsable","anchorEl","setAnchorEl","setSection","handleCloseMenu","handleCloseField","onConnect","params","newParams","addEdge","onElementDoubleClick","getAllOutgoers","getOutgoers","reduce","memo","outgoer","onNodeClick","children","allOutgoers","isHidden","child","newChild","u","jsonElements","filteredElements","submitTag","newElement","updateNode","handleDelete","edges","getConnectedEdges","update","getNodeId","Date","newCurrent","addNode","desc","handleChangeArrow","isEdge","elementClickedIndex","stylesArrow","handleChangeLegendTitle","addLegend","newLegend","hexToRgb","hex","c","test","substring","split","join","hexToRgbA","sort","parseInt","slice","classes","Switch","checked","placeholder","newNodes","itemText","toLowerCase","undefined","descArr","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","flexDirection","col","clearOnUnmount","filesLimit","dialogTitle","Alert","severity","acceptedFiles","cancelButtonText","showAlerts","submitButtonText","maxFileSize","onAdd","newFileObjs","onDelete","deleteFileObj","newFilesObjects","onSave","Papa","complete","results","jsonArr","ids","animateds","edgeTypes","arrows","arrowColors","counter","checkedTags","tags2Check","checkTags","lst","startsWith","csvChildren","layoutedElements","showPreviewsInDropzone","useChipsForPreview","previewGridProps","previewChipProps","root","showFileNamesInPreview","Snackbar","autoHideDuration","nodeTypes","special","oval","rectangle","diamond","customEdge","onElementsRemove","onNodeDoubleClick","onElementClick","onDrop","preventDefault","reactFlowBounds","getBoundingClientRect","getData","project","clientX","clientY","onDragOver","dropEffect","onNodeDragStop","connectionLineType","onPaneContextMenu","onLoad","fitView","snapToGrid","paneMoveable","nodeStrokeColor","n","nodeColor","nodeBorderRadius","leg","gap","Drawer","anchor","overflowY","str","InputProps","endAdornment","InputAdornment","rows","multiline","marginRigh","size","newField","marginBottom","Chip","handleChangeCollapsable","handleChangeAnimated","App","isCanvasVisible","setIsCanvasVisible","session","jwt","sign","userId","uuidv4","expiresIn","algorithm","updateSessionDb","sm","md","lg","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1411081e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  FormLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TreeView from \"devextreme-react/tree-view\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport PermDataSettingIcon from \"@material-ui/icons/PermDataSetting\";\r\n// https://flowchart-backend.herokuapp.com\r\n// http://127.0.0.1:8000\r\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\r\n\r\nconst SideBar = ({\r\n  currentFile,\r\n  setCurrentFile,\r\n  setCanvasVisibility,\r\n  setEdgeType,\r\n  setSelectedColor,\r\n  isEditMode,\r\n  setOrientation,\r\n  orientation,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [folder, setFolder] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [openNewFolder, setOpenNewFolder] = React.useState(false);\r\n  const [openNewTag, setOpenNewTag] = useState(false);\r\n  const [error, setError] = useState({ value: false, msg: \"\" });\r\n  const [names, setNames] = useState([]);\r\n  const [tagError, setTagError] = useState({});\r\n  const [tag, setTag] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [openNewFile, setOpenNewFile] = React.useState(false);\r\n  const [openEditTag, setOpenEditTag] = useState(false);\r\n  const [currentEditTag, setCurrentEditTag] = useState(\"\");\r\n  const [editTag, setEditTag] = useState(\"\");\r\n  const [editTagError, setEditTagError] = useState({});\r\n  const [activeFolder, setActiveFolder] = useState(false);\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(`${apiUrl}/api/get-user-info`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newTags;\r\n        if (Array.isArray(json.tags)) {\r\n          newTags = json.tags;\r\n        } else {\r\n          if (JSON.parse(json.tags).hasOwnProperty(\"tags\")) {\r\n            newTags = JSON.parse(json.tags).tags;\r\n          } else {\r\n            newTags = JSON.parse(json.tags);\r\n          }\r\n        }\r\n        let newNames;\r\n        if (Array.isArray(json.names)) {\r\n          newNames = json.names;\r\n        } else {\r\n          if (Array.isArray(JSON.parse(json.names))) {\r\n            newNames = JSON.parse(json.names);\r\n          } else {\r\n            newNames = JSON.parse(json.names).names;\r\n          }\r\n        }\r\n\r\n        let newFiles;\r\n        if (Array.isArray(json.files)) {\r\n          newFiles = json.files;\r\n        } else {\r\n          if (Array.isArray(JSON.parse(json.files))) {\r\n            newFiles = JSON.parse(json.files);\r\n          } else {\r\n            newFiles = JSON.parse(json.files).files;\r\n          }\r\n        }\r\n\r\n        console.log(newTags);\r\n        console.log(newNames);\r\n        console.log(newFiles);\r\n        setTags(newTags);\r\n        setNames(newNames);\r\n        setFiles(JSON.parse(json.files));\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log(newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeOrientation = (event) => {\r\n    setOrientation(event.target.value);\r\n  };\r\n\r\n  const newFolder = () => {\r\n    setOpenNewFolder(true);\r\n  };\r\n\r\n  const newFile = () => {\r\n    setOpenNewFile(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFolder(\"\");\r\n    setFile(\"\");\r\n    setOpenNewTag(false);\r\n    setOpenEditTag(false);\r\n    setCurrentEditTag(false);\r\n    setEditTag(false);\r\n    setEditTagError(false);\r\n    setError({});\r\n    openNewFolder ? setOpenNewFolder(false) : setOpenNewFile(false);\r\n  };\r\n\r\n  const handleChangeFolder = (event) => {\r\n    setFolder(event.target.value);\r\n  };\r\n\r\n  const handleChangeFile = (event) => {\r\n    setFile(event.target.value);\r\n  };\r\n\r\n  const updateFilesDb = (newElements) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-files`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        files: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\r\n          json,\r\n          \"ndsojdmsio99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"\r\n        );\r\n        setFiles(JSON.parse(json.files));\r\n      });\r\n  };\r\n\r\n  const updateNamesDb = (newNames) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-names`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        names: newNames,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setNames(json.names));\r\n  };\r\n\r\n  const updateElementsDb = (newElements, isDelete = false) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-elements`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => console.log(json));\r\n  };\r\n\r\n  const updateTagsDb = (newTags) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-tags`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        tags: newTags,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(JSON.parse(json.tags));\r\n        setTags(JSON.parse(json.tags));\r\n      });\r\n  };\r\n\r\n  const submitFolder = () => {\r\n    if (folder.length === 0) {\r\n      setError({ value: true, msg: \"Folder name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(folder)) {\r\n        setError({ value: true, msg: \"Folder must be unique.\" });\r\n      } else {\r\n        const newFiles = files.length > 0 ? [...files] : [];\r\n        newFiles.push({ id: folder, text: folder, expanded: true });\r\n        setFiles(newFiles);\r\n        updateFilesDb(newFiles);\r\n        localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n        const newNames = names.length === 0 ? [] : [...names];\r\n        newNames.push(folder);\r\n        console.log(folder);\r\n        setNames(newNames);\r\n        updateNamesDb(newNames);\r\n        localStorage.setItem(\"names\", JSON.stringify(newNames));\r\n        setError({});\r\n        setOpenNewFolder(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitFile = () => {\r\n    if (file.length === 0) {\r\n      setError({ value: true, msg: \"File name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(file)) {\r\n        setError({ value: true, msg: \"File name must be unique.\" });\r\n      } else {\r\n        const newFiles = [...files];\r\n        if (newFiles[0].hasOwnProperty(\"parentId\")) {\r\n          setError({\r\n            value: true,\r\n            msg: \"You must have folder to create a file.\",\r\n          });\r\n        } else {\r\n          newFiles.push({\r\n            id: file,\r\n            text: file,\r\n            parentId: currentFile.id,\r\n            elements: [],\r\n          });\r\n          setFiles(newFiles);\r\n          updateFilesDb(newFiles);\r\n          const newNames = names.length === 0 ? [] : [...names];\r\n          newNames.push(file);\r\n          setNames(newNames);\r\n          updateNamesDb(newNames);\r\n          setError({});\r\n          setOpenNewFile(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (currentFile.hasOwnProperty(\"parentId\")) {\r\n      if (localStorage.getItem(\"legend\") !== null) {\r\n        const legend = JSON.parse(localStorage.getItem(\"legend\"));\r\n        delete legend[currentFile.id];\r\n        localStorage.setItem(\"legend\", JSON.stringify(legend));\r\n      }\r\n    }\r\n    const newFiles = [...files];\r\n    const index = files.findIndex((element) => element === currentFile);\r\n    newFiles.splice(index, 1);\r\n    const newNames = [...names];\r\n    const namesIndex = names.indexOf(currentFile.id);\r\n    newNames.splice(namesIndex, 1);\r\n    setNames(newNames);\r\n    updateNamesDb(newNames);\r\n    updateFilesDb(newFiles);\r\n    localStorage.removeItem(\"current\");\r\n    const newElements = currentFile.elements.filter((data) => {\r\n      return currentFile.id !== data.node;\r\n    });\r\n    setCurrentFile({});\r\n    updateElementsDb(newElements, true);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = () => {\r\n    if (tag.length === 0) {\r\n      setTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(tag)) {\r\n        setTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        console.log(tags);\r\n        console.log(tag);\r\n        const newTags = [...tags];\r\n        newTags.push(tag);\r\n        setTags((prevTags) => [...prevTags].concat([tag]));\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setTagError({});\r\n        setOpenNewTag(false);\r\n        console.log(tags);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitEditTag = (originalTag) => {\r\n    if (editTag.length === 0) {\r\n      setEditTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(editTag)) {\r\n        setEditTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        const newTags = [...tags];\r\n        const index = tags.indexOf(originalTag);\r\n        newTags[index] = editTag;\r\n        setTags(newTags);\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setEditTagError({});\r\n        setOpenEditTag(false);\r\n        setCurrentEditTag(false);\r\n        setEditTag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteTag = (tag) => {\r\n    const newTags = [...tags];\r\n    const index = tags.findIndex((element) => element === tag);\r\n    newTags.splice(index, 1);\r\n    setTags(newTags);\r\n    updateTagsDb(newTags);\r\n    localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n  };\r\n\r\n  const handleChangeEditTag = (event) => {\r\n    setEditTag(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvasVisibilityHandler = (nodes) => {\r\n      if (files.length > 0) {\r\n        const files = nodes.filter(\r\n          (node) =>\r\n            node.hasOwnProperty(\"parentId\") || node.hasOwnProperty(\"elements\")\r\n        );\r\n      }\r\n      if (files.length && !activeFolder) setCanvasVisibility(true);\r\n      else setCanvasVisibility(false);\r\n    };\r\n\r\n    canvasVisibilityHandler(files);\r\n  }, [files, setCanvasVisibility]);\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setSelectedColor(color.rgb);\r\n    setColor(color.rgb);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    setEdgeType(event.target.value);\r\n  };\r\n\r\n  const a11yProps = (index) => {\r\n    return {\r\n      id: `scrollable-force-tab-${index}`,\r\n      \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"primary\"\r\n        tabItemContainerStyle={{ width: \"100%\" }}\r\n        textColor=\"primary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab icon={<StorageIcon />} label=\"Files\" />\r\n        <Tab icon={<PermDataSettingIcon />} label=\"Shapes\" />\r\n      </Tabs>\r\n      {value === 0 ? (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"70vh\",\r\n            textAlign: \"center\",\r\n            borderRight: \"solid #D5D5D5 1px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom style={{ padding: 20 }}>\r\n            Folder Structures\r\n          </Typography>\r\n          <Grid container spacing={0} justifyContent=\"center\">\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Add Folder\"\r\n                onClick={newFolder}\r\n                color=\"primary\"\r\n              >\r\n                <CreateNewFolderIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Dialog\r\n              open={openNewFolder}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">\r\n                Create New Folder\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  error={error.value ? true : false}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"folder\"\r\n                  label=\"Folder Name\"\r\n                  helperText={error.value && error.msg}\r\n                  onChange={handleChangeFolder}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={submitFolder} color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Add File\"\r\n                color=\"primary\"\r\n                onClick={newFile}\r\n                disabled={currentFile.hasOwnProperty(\"expanded\") ? false : true}\r\n              >\r\n                <NoteAddIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Dialog\r\n              open={openNewFile}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Create New File</DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  error={error.value ? true : false}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"file\"\r\n                  label=\"File Name\"\r\n                  onChange={handleChangeFile}\r\n                  helperText={error.value && error.msg}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={submitFile} color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Delete\"\r\n                color=\"secondary\"\r\n                onClick={deleteItem}\r\n                disabled={Object.keys(currentFile).length === 0 ? true : false}\r\n              >\r\n                <DeleteIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            {files.length === 0 ? (\r\n              <div></div>\r\n            ) : (\r\n              <TreeView\r\n                searchEnabled={true}\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  paddingLeft: 15,\r\n                  paddingTop: 15,\r\n                  paddingRight: 15,\r\n                  fontSize: 18,\r\n                  fontWeight: \"normal\",\r\n                }}\r\n                dataStructure=\"plain\"\r\n                id=\"simple-treeview\"\r\n                items={files}\r\n                width=\"100%\"\r\n                onItemClick={(e) => {\r\n                  console.log(\"ddd\", e.itemData.hasOwnProperty(\"expanded\"));\r\n                  if (!e.itemData.hasOwnProperty(\"expanded\")) {\r\n                    localStorage.setItem(\"current\", JSON.stringify(e.itemData));\r\n                    setActiveFolder(false);\r\n                    setCanvasVisibility(true);\r\n                  } else {\r\n                    setActiveFolder(true);\r\n                    setCanvasVisibility(false);\r\n                  }\r\n                  setCurrentFile(e.itemData);\r\n                }}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n          {isEditMode && (\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              style={{ marginTop: 30 }}\r\n              spacing={1}\r\n            >\r\n              <Grid container direction=\"row\" spacing={1}>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    onDragStart={(event) => onDragStart(event, \"special\")}\r\n                    draggable\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        background: \"#ADD8E6\",\r\n                        color: \"black\",\r\n                        padding: 10,\r\n                        border: \"1px solid black\",\r\n                        width: 50,\r\n                        height: 5,\r\n                        borderRadius: \"10px 10px 0px 0px\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: 20,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                    <div\r\n                      style={{\r\n                        background: \"white\",\r\n                        border: \"1px solid black\",\r\n                        color: \"black\",\r\n                        padding: 10,\r\n                        width: 50,\r\n                        height: 15,\r\n                        borderRadius: \"0px 0px 10px 10px\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: 20,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"60px\",\r\n                      width: \"80px\",\r\n                      borderRadius: \"50px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"oval\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={1}\r\n                style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"50px\",\r\n                      width: \"80px\",\r\n                      borderRadius: \"10px\",\r\n                      cursor: \"pointer\",\r\n                      marginLeft: 20,\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"rectangle\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                      borderRadius: \"5px\",\r\n                      transform: \"rotate(45deg)\",\r\n                      marginLeft: \"10px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"diamond\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"70vh\",\r\n            textAlign: \"center\",\r\n            borderRight: \"solid #D5D5D5 1px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom style={{ padding: 20 }}>\r\n            Shapes Settings\r\n          </Typography>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n              <Grid item xs={12} direction=\"row\">\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Node Color\r\n                </Typography>\r\n                <div style={styles.swatch} onClick={handleClickColor}>\r\n                  <div style={styles.color} />\r\n                </div>\r\n                {displayColorPicker ? (\r\n                  <div style={styles.popover}>\r\n                    <div style={styles.cover} onClick={handleCloseColor} />\r\n                    <SketchPicker color={color} onChange={handleChangeColor} />\r\n                  </div>\r\n                ) : null}\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                EdgeType\r\n              </InputLabel>\r\n              <Select\r\n                style={{ fontSize: 15 }}\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                onChange={handleChangeEdgeType}\r\n                variant=\"outlined\"\r\n                label=\"EdgeType\"\r\n                defaultValue=\"smoothstep\"\r\n                displayEmpty={true}\r\n              >\r\n                <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n                <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          {!isEditMode && (\r\n            <FormControl component=\"fieldset\" style={{ marginTop: 30 }}>\r\n              <FormLabel component=\"legend\">Orientation</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"Orientation\"\r\n                name=\"orientation\"\r\n                value={orientation}\r\n                onChange={handleChangeOrientation}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"vertical\"\r\n                  control={<Radio />}\r\n                  label=\"Vertical\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"horizontal\"\r\n                  control={<Radio />}\r\n                  label=\"Horizontal\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      <Divider orientation=\"horizontal\" />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          height: \"30vh\",\r\n          textAlign: \"center\",\r\n          backgroundColor: \"#F2F2F2\",\r\n          height: \"320px\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom style={{ padding: 10 }}>\r\n          Tags\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setOpenNewTag(true)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          New Tag\r\n        </Button>\r\n        <Dialog\r\n          open={openNewTag}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create New Tag</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              error={tagError.value ? true : false}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"tag\"\r\n              label=\"Tag Name\"\r\n              helperText={tagError.value && tagError.msg}\r\n              onChange={handleChangeTag}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={submitTag} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <List>\r\n          {tags.map((tag) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <LocalOfferIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={tag} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"edit\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setCurrentEditTag(tag);\r\n                    setOpenEditTag(true);\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  color=\"primary\"\r\n                  onClick={() => deleteTag(tag)}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n          <Dialog\r\n            open={openEditTag}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Edit Tag</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                error={editTagError.value ? true : false}\r\n                autoFocus\r\n                type=\"text\"\r\n                margin=\"dense\"\r\n                id=\"tag\"\r\n                defaultValue={currentEditTag}\r\n                label=\"Tag Name\"\r\n                helperText={editTagError.value && editTagError.msg}\r\n                onChange={(e) => handleChangeEditTag(e)}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => submitEditTag(currentEditTag)}\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </List>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { getSmoothStepPath, getBezierPath } from \"react-flow-renderer\";\r\n\r\nexport default function CustomEdge({\r\n  source,\r\n  target,\r\n  id,\r\n  sourceX,\r\n  sourceY,\r\n  targetX,\r\n  targetY,\r\n  sourcePosition,\r\n  targetPosition,\r\n  animated,\r\n  style = {},\r\n  data,\r\n}) {\r\n  const edgePath =\r\n    data.type === \"smoothstep\"\r\n      ? getSmoothStepPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        })\r\n      : getBezierPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        });\r\n  console.log(targetPosition);\r\n  return (\r\n    <>\r\n      <defs>\r\n        <marker\r\n          className=\"react-flow__arrowhead\"\r\n          id={`marker-${id}`}\r\n          markerWidth=\"25\"\r\n          markerHeight=\"30\"\r\n          viewBox=\"-10 -10 20 20\"\r\n          orient=\"auto\"\r\n          refX=\"0\"\r\n          refY=\"0\"\r\n        >\r\n          <polyline\r\n            stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"1\"\r\n            fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n            points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n          />\r\n        </marker>\r\n        <marker\r\n          className=\"react-flow__arrowhead\"\r\n          id={`marker-start-${id}`}\r\n          markerWidth=\"25\"\r\n          markerHeight=\"30\"\r\n          viewBox=\"-10 -10 20 20\"\r\n          orient=\"auto\"\r\n          refX=\"0\"\r\n          refY=\"0\"\r\n        >\r\n          <polyline\r\n            // transform=\"translate(90)\"\r\n            style={{ transform: \"rotate(180deg)\" }}\r\n            stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"1\"\r\n            fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n            points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n          />\r\n        </marker>\r\n      </defs>\r\n      <path\r\n        id={id}\r\n        d={edgePath}\r\n        stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n        fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n        className=\"react-flow__edge-path\"\r\n        style={{\r\n          ...style,\r\n          stroke: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        }}\r\n        // markerEnd={\r\n        //   targetPosition === \"top\"\r\n        //     ? `url(#marker-${id})`\r\n        //     : data.hasArrow\r\n        //     ? `url(#marker${id})`\r\n        //     : null\r\n        // }\r\n        markerEnd={`url(#marker-${id})`}\r\n        // markerStart={\r\n        //   targetPosition === \"left\"\r\n        //     ? `url(#marker-start-${id})`\r\n        //     : data.hasArrow\r\n        //     ? `url(#marker-start-${id})`\r\n        //     : null\r\n        // }\r\n        markerStart={data.hasArrow && `url(#marker-start-${id})`}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Drawer,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  Badge,\r\n  Snackbar,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Chip,\r\n  Fab,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport SearchField from \"react-search-field\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { DropzoneDialogBase } from \"material-ui-dropzone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Papa from \"papaparse\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  getMarkerEnd,\r\n  getOutgoers,\r\n  isNode,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  getConnectedEdges,\r\n  isEdge,\r\n} from \"react-flow-renderer\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport dagre from \"dagre\";\r\nimport { EditText } from \"react-edit-text\";\r\nimport \"react-edit-text/dist/index.css\";\r\nimport CustomEdge from \"./CustomEdge\";\r\n\r\nconst markerEnd = getMarkerEnd(\"arrowclosed\", \"my-marker\");\r\nconsole.log(markerEnd);\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nlet realOrientation;\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\n// https://flowchart-backend.herokuapp.com\r\n// http://127.0.0.1:8000\r\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\n// const nodeDimensions = {\r\n//   special: { width: 50, height: 150 },\r\n//   rectangle: { width: 150, height: 70 },\r\n//   oval: { width: 150, height: 70 },\r\n//   diamond: { width: 100, height: 100 },\r\n// };\r\nconst nodeWidth = 170;\r\nconst nodeHeight = 180;\r\nconst getLayoutedElements = (elements, direction = \"TB\") => {\r\n  const isHorizontal = direction === \"LR\";\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, {\r\n        width: nodeWidth,\r\n        height: nodeHeight,\r\n      });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n  console.log(elements, \"danhjsubkghbjlncsbugk hjbnudcysbkhjnonubskdgh m\");\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    previewChip: {\r\n      minWidth: 160,\r\n      maxWidth: 210,\r\n    },\r\n  })\r\n);\r\n\r\nconst SpecialNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  let keys_top = useRef(null);\r\n  let values_top = useRef(null);\r\n  let expand_collapse_top = useRef(null);\r\n  let grid_top = useRef(null);\r\n  let properties_top = useRef(null);\r\n  let keys_bottom = useRef(null);\r\n  let values_bottom = useRef(null);\r\n  let expand_collapse_bottom = useRef(null);\r\n  let grid_bottom = useRef(null);\r\n  let properties_bottom = useRef(null);\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 200,\r\n          minHeight: 10,\r\n          borderRadius: \"10px 10px 0px 0px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"5%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n\r\n      {/* <Handle\r\n          type=\"source\"\r\n          position={realOrientation === \"horizontal\" ? \"left\" : \"top\"}\r\n          style={{ background: \"black\" }}\r\n          isConnectable={true}\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          position={realOrientation === \"horizontal\" ? \"bottom\" : \"right\"}\r\n          style={{ background: \"black\" }}\r\n          isConnectable={true}\r\n        /> */}\r\n\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"1\"\r\n        position=\"left\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"2\"\r\n        position=\"top\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"3\"\r\n        position=\"right\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        position=\"bottom\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <div\r\n        style={{\r\n          width: \"93%\",\r\n          width: 200,\r\n          background: \"#f0f0f0\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          minHeight: 40,\r\n          borderRadius: \"0px 0px 10px 10px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"93%\",\r\n            minHeight: \"40px\",\r\n            // overflowWrap: \"break-word\",\r\n            textAlign: \"center\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          {data.description.length != 1 && (\r\n            <>\r\n              <button\r\n                ref={expand_collapse_top}\r\n                style={{\r\n                  zIndex: 2,\r\n                  border: \"0px solid\",\r\n                  color: \"#9F9F9F\",\r\n                  fontSize: 18,\r\n                  marginTop: \"0%\",\r\n                  marginLeft: \"30%\",\r\n                  position: \"absolute\",\r\n                  backgroundColor: \"transparent\",\r\n                }}\r\n                onClick={() => {\r\n                  if (keys_top.current.className == \"hide\") {\r\n                    grid_top.current.className = \"\";\r\n                    keys_top.current.className = \"\";\r\n                    values_top.current.className = \"\";\r\n                    expand_collapse_top.current.className = \"rotate270\";\r\n                    properties_top.current.className = \"hide\";\r\n                  } else {\r\n                    grid_top.current.className = \"hide\";\r\n                    keys_top.current.className = \"hide\";\r\n                    values_top.current.className = \"hide\";\r\n                    expand_collapse_top.current.className = \"rotateNone\";\r\n                    properties_top.current.className = \"\";\r\n                  }\r\n                }}\r\n              >\r\n                {\"▲\"}\r\n              </button>\r\n              <div ref={grid_top}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  spacing={1}\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <div ref={keys_top} style={{ textAlign: \"center\" }}>\r\n                    {data.description.map((pair) => {\r\n                      if (pair.section === \"1\") {\r\n                        return (\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            gutterBottom\r\n                            style={{\r\n                              paddingRight: 10,\r\n                            }}\r\n                          >\r\n                            {pair.key}\r\n                          </Typography>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                  <Divider\r\n                    orientation=\"vertical\"\r\n                    style={{ minHeight: 50, textAlign: \"center\" }}\r\n                    flexItem\r\n                  />\r\n                  <div ref={values_top} style={{ textAlign: \"center\" }}>\r\n                    {data.description.map((pair) => {\r\n                      if (pair.section === \"1\") {\r\n                        return (\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            gutterBottom\r\n                            style={{\r\n                              paddingLeft: 10,\r\n                              paddingRight: 10,\r\n                            }}\r\n                          >\r\n                            {pair.value1}\r\n                          </Typography>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                  <Divider\r\n                    orientation=\"vertical\"\r\n                    style={{ minHeight: 50, textAlign: \"center\" }}\r\n                    flexItem\r\n                  />\r\n                  <div ref={values_top} style={{ textAlign: \"center\" }}>\r\n                    {data.description.map((pair) => {\r\n                      if (pair.section === \"1\") {\r\n                        return (\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            gutterBottom\r\n                            style={{\r\n                              paddingLeft: 10,\r\n                              paddingRight: 10,\r\n                            }}\r\n                          >\r\n                            {pair.value2}\r\n                          </Typography>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div\r\n                ref={properties_top}\r\n                className={\"hide\"}\r\n                style={{ marginTop: \"auto\" }}\r\n              >\r\n                Properties\r\n              </div>\r\n              {data.description.length > 1 && (\r\n                <>\r\n                  <button\r\n                    ref={expand_collapse_bottom}\r\n                    style={{\r\n                      zIndex: 2,\r\n                      border: \"0px solid\",\r\n                      color: \"#9F9F9F\",\r\n                      fontSize: 18,\r\n                      marginTop: \"0%\",\r\n                      marginLeft: \"30%\",\r\n                      position: \"absolute\",\r\n                      backgroundColor: \"transparent\",\r\n                    }}\r\n                    onClick={() => {\r\n                      if (keys_bottom.current.className == \"hide\") {\r\n                        grid_bottom.current.className = \"\";\r\n                        keys_bottom.current.className = \"\";\r\n                        values_bottom.current.className = \"\";\r\n                        expand_collapse_bottom.current.className = \"rotate270\";\r\n                        properties_bottom.current.className = \"hide\";\r\n                      } else {\r\n                        grid_bottom.current.className = \"hide\";\r\n                        keys_bottom.current.className = \"hide\";\r\n                        values_bottom.current.className = \"hide\";\r\n                        expand_collapse_bottom.current.className = \"rotateNone\";\r\n                        properties_bottom.current.className = \"\";\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"▲\"}\r\n                  </button>\r\n                  <div ref={grid_bottom}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      spacing={1}\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"center\"\r\n                      style={{\r\n                        borderTop: \"2px solid #C1E5FC\",\r\n                        marginTop: \"2%\",\r\n                      }}\r\n                    >\r\n                      <div ref={keys_bottom} style={{ textAlign: \"center\" }}>\r\n                        {data.description.map((pair) => {\r\n                          if (pair.section === \"2\") {\r\n                            return (\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                gutterBottom\r\n                                style={{\r\n                                  paddingRight: 10,\r\n                                }}\r\n                              >\r\n                                {pair.key}\r\n                              </Typography>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </div>\r\n                      <Divider\r\n                        orientation=\"vertical\"\r\n                        style={{ minHeight: 50, textAlign: \"center\" }}\r\n                        flexItem\r\n                      />\r\n                      <div ref={values_bottom} style={{ textAlign: \"center\" }}>\r\n                        {data.description.map((pair) => {\r\n                          if (pair.section === \"2\") {\r\n                            return (\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                gutterBottom\r\n                                style={{\r\n                                  paddingLeft: 10,\r\n                                  paddingRight: 10,\r\n                                }}\r\n                              >\r\n                                {pair.value1}\r\n                              </Typography>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </div>\r\n                      <Divider\r\n                        orientation=\"vertical\"\r\n                        style={{ minHeight: 50, textAlign: \"center\" }}\r\n                        flexItem\r\n                      />\r\n                      <div ref={values_bottom} style={{ textAlign: \"center\" }}>\r\n                        {data.description.map((pair) => {\r\n                          if (pair.section === \"2\") {\r\n                            return (\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                gutterBottom\r\n                                style={{\r\n                                  paddingLeft: 10,\r\n                                  paddingRight: 10,\r\n                                }}\r\n                              >\r\n                                {pair.value2}\r\n                              </Typography>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </div>\r\n                    </Grid>\r\n                  </div>\r\n                  <div\r\n                    ref={properties_bottom}\r\n                    className={\"hide\"}\r\n                    style={{\r\n                      marginTop: \"auto\",\r\n                      borderTop: \"2px solid #C1E5FC\",\r\n                    }}\r\n                  >\r\n                    Properties\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n          {/* <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.description}\r\n          </Typography> */}\r\n        </div>\r\n      </div>\r\n      {/* <Handle\r\n        type=\"target\"\r\n        position={realOrientation === \"horizontal\" ? \"right\" : \"bottom\"}\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position={realOrientation === \"horizontal\" ? \"top\" : \"left\"}\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OvalNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 70,\r\n          textAlign: \"center\",\r\n          borderRadius: \"50px\",\r\n        }}\r\n      >\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"1\"\r\n        position=\"left\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"2\"\r\n        position=\"right\"\r\n        isConnectable={true}\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        position=\"top\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        position=\"bottom\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst RectangleNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 70,\r\n          textAlign: \"center\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"1\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        position=\"left\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"2\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"right\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"top\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"bottom\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst DiamondNodeComponent = ({ data }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          width: \"80px\",\r\n          position: \"absolute\",\r\n          height: \"80px\",\r\n          padding: 20,\r\n          marginTop: \"10%\",\r\n          marginLeft: \"10%\",\r\n          zIndex: \"0\",\r\n          backgroundColor: \"#f0f0f0\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          transform: \"rotate(-45deg)\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"30%\", transform: \"rotate(45deg)\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n      <div style={{ backgroundColor: \"transparent\", marginTop: \"-5%\" }}>\r\n        <Handle\r\n          type=\"target\"\r\n          id=\"1\"\r\n          position=\"left\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            marginRight: \"5%\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"source\"\r\n          id=\"2\"\r\n          position=\"right\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          id=\"3\"\r\n          position=\"top\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"source\"\r\n          id=\"4\"\r\n          position=\"bottom\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            color: \"black\",\r\n            // border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n            // border: `2px solid white`,\r\n            width: 100,\r\n            minHeight: 100,\r\n            textAlign: \"center\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{ transform: \"rotate(-45deg)\", marginTop: \"10%\", zIndex: 0 }}\r\n          >\r\n            {/* <div>\r\n            {data.title.length >= 16\r\n              ? data.title.slice(0, 15) + \"...\"\r\n              : data.title}\r\n          </div> */}\r\n            <div\r\n              style={{\r\n                width: \"93%\",\r\n                minHeight: \"40px\",\r\n                // textAlign: \"center\",\r\n                overflowWrap: \"break-word\",\r\n                marginLeft: 10,\r\n                marginRight: 300,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Canvas = ({\r\n  currentFile,\r\n  selectedColor,\r\n  edgeType,\r\n  setEditMode,\r\n  isEditMode,\r\n  orientation,\r\n}) => {\r\n  realOrientation = orientation;\r\n  const startLegendObj = {};\r\n  startLegendObj[currentFile.id] = [];\r\n  console.log(JSON.parse(localStorage.getItem(\"legend\")));\r\n  console.log(startLegendObj);\r\n  const [elements, setElements] = useState([]);\r\n  const [error, setError] = useState({ value: false, msg: \"\" });\r\n  const [elementCLicked, setElementClicked] = useState({});\r\n  const [editModeTtitle, setEditModeTitle] = useState(false);\r\n  const [editModeDescription, setEditModeDescription] = useState(false);\r\n  const [editModeDesc, setEditModeDesc] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [legend, setLegend] = useState({ color: \"#846090\", title: \"\" });\r\n  const [legends, setLegends] = useState(\r\n    localStorage.getItem(\"legend\") != null\r\n      ? JSON.parse(localStorage.getItem(\"legend\"))\r\n      : startLegendObj\r\n  );\r\n  const [openUpload, setOpenUpload] = React.useState(false);\r\n  const [openNewNode, setOpenNewNode] = useState(false);\r\n  const [openNewLegend, setOpenNewLegend] = useState(false);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [displayColorPickerArrow, setDisplayColorPickerArrow] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [colorArrow, setColorArrow] = useState({\r\n    r: \"187\",\r\n    g: \"187\",\r\n    b: \"192\",\r\n    a: \"100\",\r\n  });\r\n  const [toggledElements, setToggledElements] = useState([]);\r\n  const [targetElements, setTargetElements] = useState({});\r\n  const [isFirstTime, setFirstTime] = useState(true);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n  const [renderAlert, setRenderAlert] = useState({ value: false, msg: \"\" });\r\n  const [tags, setTags] = useState([]);\r\n  const [csv, setCsv] = useState(false);\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [openNewField, setOpenNewField] = useState(false);\r\n  const [field, setField] = useState({ key: \"\", value1: \"\", value2: \"\" });\r\n  console.log();\r\n  const [hasArrowEdge, setArrowEdge] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.hasArrowEdge\r\n      : false\r\n  );\r\n  const [hasAnimatedEdge, setAnimatedEdge] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.hasAnimatedEdge\r\n      : false\r\n  );\r\n  const [isCollapsable, setCollapsable] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.isCollapsable\r\n      : false\r\n  );\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [section, setSection] = useState(\"1\");\r\n\r\n  const handleClickMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onLoad = (reactFlowInstance) => {\r\n    // console.log(\"flow loaded:\", reactFlowInstance);\r\n    // console.log(reactFlowInstance.getElements());\r\n    setReactFlowInstance(reactFlowInstance);\r\n    reactFlowInstance.fitView();\r\n  };\r\n\r\n  const handleCloseField = () => {\r\n    setOpenNewField(false);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    edges.map((edge) => {\r\n      newElements.map((element) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.type = event.target.value;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const handleChangeSection = (event) => {\r\n    setSection(event.target.value);\r\n  };\r\n\r\n  const updateElementsDb = (newElements, currentFile, isDelete = false) => {\r\n    // console.log(\"updating database....\");\r\n    // console.log(newElements);\r\n    console.log(currentFile);\r\n    fetch(`${apiUrl}/api/update-elements`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.elements);\r\n        setElements(json.elements);\r\n      });\r\n  };\r\n\r\n  const onElementsRemove = () => {\r\n    const update = elements.filter((data) => {\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = update;\r\n    setElements(update);\r\n    updateNode(update);\r\n  };\r\n\r\n  const onConnect = async (params) => {\r\n    //  setElements((els) => addEdge(params, els))\r\n    //  console.log(elements);\r\n    //  updateNode()\r\n    const newParams = { ...params };\r\n    newParams.type = \"customEdge\";\r\n    newParams.data = { hasArrow: false, type: edgeType, color: colorArrow };\r\n    newParams.animated = false;\r\n    console.log(newParams, \"**********8\");\r\n    const edge = await addEdge(newParams, elements);\r\n    await setElements(edge);\r\n  };\r\n\r\n  const onElementDoubleClick = async (event, element) => {\r\n    if (isEditMode) {\r\n      setElementClicked(element);\r\n      setCollapsable(element.data.isCollapsable);\r\n      setAnimatedEdge(element.data.hasAnimatedEdge);\r\n      setArrowEdge(element.data.hasArrowEdge);\r\n    } else {\r\n      setElementClicked(element);\r\n    }\r\n  };\r\n\r\n  const getAllOutgoers = (node, elements) => {\r\n    return getOutgoers(node, elements).reduce(\r\n      (memo, outgoer) => [\r\n        ...memo,\r\n        outgoer,\r\n        ...getAllOutgoers(outgoer, elements),\r\n      ],\r\n      []\r\n    );\r\n  };\r\n\r\n  const onNodeClick = async (event, element) => {\r\n    if (!isEditMode) {\r\n      console.log(element);\r\n      if (element.data.isCollapsable) {\r\n        let newElements = [...elements];\r\n        const children = getOutgoers(element, elements);\r\n        if (children.length > 0) {\r\n          const allOutgoers = getAllOutgoers(element, elements);\r\n          console.log(allOutgoers);\r\n          console.log(children);\r\n          if (children[0].isHidden) {\r\n            children.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = false;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = false;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          } else {\r\n            allOutgoers.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = true;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = true;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          }\r\n          console.log(newElements);\r\n          setElements(newElements);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${apiUrl}/api/get-user-info`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newElements = [];\r\n        const jsonElements = JSON.parse(json.elements);\r\n        if (jsonElements.length === 0) {\r\n          newElements = [];\r\n        } else {\r\n          if (jsonElements.hasOwnProperty(currentFile.id)) {\r\n            newElements = jsonElements[currentFile.id];\r\n          } else {\r\n            newElements = [];\r\n          }\r\n        }\r\n        console.log(newElements);\r\n        setElements(newElements);\r\n        setTags(JSON.parse(json.tags));\r\n      });\r\n  }, [currentFile]);\r\n\r\n  const onNodeDragStop = (event, node) => {\r\n    const newElements = [...elements];\r\n    console.log(node);\r\n    // console.log(newElements);\r\n    newElements.map((element) => {\r\n      console.log(element);\r\n      if (element.id === node.id) {\r\n        console.log(element);\r\n        element.position = { ...node.position };\r\n      }\r\n    });\r\n    console.log(newElements);\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenNewNode(false);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = async () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        if (!elementCLicked.data.tags.includes(tag)) {\r\n          const newElement = [...elementCLicked.data.tags];\r\n          newElement.push(tag);\r\n          elementCLicked.data.tags = newElement;\r\n        }\r\n      }\r\n    });\r\n    await setElements(newElements);\r\n    updateNode(newElements);\r\n    // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        let str;\r\n        if (event.target.value.length >= 27) {\r\n          str = event.target.value.substring(0, 27);\r\n        } else {\r\n          str = event.target.value;\r\n        }\r\n        element.data[\"title\"] = str;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n\r\n    updateNode(newElements);\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"title\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // updateNode();\r\n  };\r\n\r\n  const handleClickTitle = () => {\r\n    setEditModeTitle(true);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"description\"] = event.target.value;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"description\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    // updateNode();\r\n  };\r\n\r\n  const handleChangeDesc = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"desc\"] = event.target.value;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    console.log(\"new ele\", newElements);\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const update = elements.filter((data) => {\r\n      if (edges.includes(data)) {\r\n        return false;\r\n      }\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    if (currentFile !== null) {\r\n      const newCurrent = { ...currentFile };\r\n      newCurrent.elements = update;\r\n    }\r\n    setElements(update);\r\n    updateElementsDb(update, currentFile);\r\n    setElementClicked({});\r\n  };\r\n\r\n  const handleClickDescription = () => {\r\n    setEditModeDescription(true);\r\n  };\r\n\r\n  const handleClickDesc = () => {\r\n    setEditModeDesc(true);\r\n  };\r\n\r\n  const getNodeId = () => `randomnode_${+new Date() + Math.random()}`;\r\n\r\n  const updateNode = (element = elements) => {\r\n    const newElements = [...element];\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n    updateElementsDb(newElements, currentFile);\r\n  };\r\n  const addNode = (type, position = { x: 100, y: 0 }) => {\r\n    let newElements = elements ? [...elements] : [];\r\n    newElements.push({\r\n      id: getNodeId(),\r\n      node: currentFile.id,\r\n      type: type,\r\n      data: {\r\n        title: \"title\",\r\n        description:\r\n          type === \"special\"\r\n            ? [{ key: \"\", value1: \"\", value2: \"\", section: \"1\" }]\r\n            : null,\r\n        color: selectedColor,\r\n        isCollapsable: true,\r\n        hasAnimatedEdge: false,\r\n        hasArrowEdge: false,\r\n        tags: [],\r\n        desc: \"description\",\r\n      },\r\n      targetPosition: orientation === \"horizontal\" ? \"left\" : \"top\",\r\n      sourcePosition: orientation === \"horizontal\" ? \"right\" : \"bottom\",\r\n      isHidden: false,\r\n      position: position,\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleChangeArrow = async () => {\r\n    const edges = await getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    let elementClickedIndex;\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.hasArrow = hasArrowEdge === true ? null : markerEnd;\r\n          }\r\n        } else {\r\n          if (element.id === elementCLicked.id) {\r\n            elementClickedIndex = index;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    newElements[elementClickedIndex].data.hasArrowEdge =\r\n      !newElements[elementClickedIndex].data.hasArrowEdge;\r\n    setArrowEdge(!hasArrowEdge);\r\n    console.log(newElements[elementClickedIndex].data.hasArrowEdge);\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleClickColorArrow = () => {\r\n    setDisplayColorPickerArrow(!displayColorPickerArrow);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleCloseColorArrow = () => {\r\n    setDisplayColorPickerArrow(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setColor(color.rgb);\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.color = color.rgb;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleChangeColorArrow = (color) => {\r\n    setColorArrow(color.rgb);\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.color = color.rgb;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setElements(newElements);\r\n  };\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    addNode(type, position);\r\n  };\r\n\r\n  const getKeyByValue = (object, value) => {\r\n    return Object.keys(object).find((key) => object[key] === value);\r\n  };\r\n  // useEffect(() => {\r\n  //   if (elements.length > 0) {\r\n  //   }\r\n  // }, [elements]);\r\n\r\n  // console.log('target-elements', targetElements);\r\n  // console.log('toggled-elemetns', toggledElements);\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const stylesArrow = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${colorArrow.r}, ${colorArrow.g}, ${colorArrow.b}, ${colorArrow.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleChangeSwitch = () => {\r\n    setFirstTime(true);\r\n    setEditMode(!isEditMode);\r\n  };\r\n\r\n  const handleChangeCollapsable = () => {\r\n    console.log(\"YYYYYYYYYYYYYGUKB\");\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        console.log(!element.data.isCollapsable);\r\n        element.data.isCollapsable = !isCollapsable;\r\n      }\r\n    });\r\n    setCollapsable(!isCollapsable);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const handleChangeLegendTitle = (e) => {\r\n    setLegend({ color: legend.color, title: e.target.value });\r\n  };\r\n\r\n  const selectLegend = () => {\r\n    let colors = [\r\n      { color: \"#846090\", name: \"c846090\" },\r\n      { color: \"#31688E\", name: \"c31688E\" },\r\n      { color: \"#42B879\", name: \"c42B879\" },\r\n      { color: \"#FEE83A\", name: \"cFEE83A\" },\r\n      { color: \"#EE6548\", name: \"cEE6548\" },\r\n      { color: \"#6CDADC\", name: \"c6CDADC\" },\r\n      { color: \"#FFB54C\", name: \"cFFB54C\" },\r\n      { color: \"#E370B1\", name: \"cE370B1\" },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <MenuItem\r\n          onClick={() => {\r\n            setOpenNewLegend(true);\r\n            handleCloseMenu();\r\n          }}\r\n        >\r\n          Add legend\r\n        </MenuItem>\r\n        <Dialog\r\n          open={openNewLegend}\r\n          onClose={() => setOpenNewLegend(false)}\r\n          aria-labelledby=\"form-dialog-title\"\r\n          // style={{ overflow: \"hidden\" }}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\" style={{ textAlign: \"center\" }}>\r\n            Select a Legend\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                width: \"80%\",\r\n              }}\r\n            >\r\n              {colors.map((col) => (\r\n                <div\r\n                  className={col.color == legend.color ? \"bordered\" : col.name}\r\n                  style={{\r\n                    backgroundColor: col.color,\r\n                    borderRadius: \"100%\",\r\n                    width: 20,\r\n                    height: 20,\r\n                  }}\r\n                  onClick={() => {\r\n                    setLegend({ color: col.color, title: legend.title });\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n            <TextField\r\n              name={elementCLicked.id}\r\n              defaultValue={legend.title}\r\n              placeholder=\"Legend name\"\r\n              margin=\"normal\"\r\n              onChange={handleChangeLegendTitle}\r\n              style={{ width: \"90%\" }}\r\n              value={legend.title}\r\n              error={error.value ? true : false}\r\n              helperText={error.value && error.msg}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginLeft: \"60%\" }}\r\n              onClick={() => {\r\n                addLegend();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const addLegend = () => {\r\n    if (legend.title == \"\")\r\n      setError({ value: true, msg: \"Please enter the name of the legend\" });\r\n    else {\r\n      setError({ value: false, msg: \"\" });\r\n      setOpenNewLegend(false);\r\n      const newLegend = { ...legends };\r\n      newLegend[currentFile.id] = [...legends[currentFile.id], legend];\r\n      setLegends(newLegend);\r\n      localStorage.setItem(\"legend\", JSON.stringify(newLegend));\r\n      setLegend({ color: \"#846090\", title: \"\" });\r\n    }\r\n  };\r\n\r\n  const hexToRgb = (hex) => {\r\n    console.log(hex);\r\n    var c;\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      console.log(\"yayyyyyyyyyyyyy\");\r\n      c = hex.substring(1).split(\"\");\r\n      if (c.length == 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n      }\r\n      c = \"0x\" + c.join(\"\");\r\n      return { r: (c >> 16) & 255, g: (c >> 8) & 255, b: c & 255, a: 1 };\r\n    }\r\n    return {\r\n      r: \"193\",\r\n      g: \"230\",\r\n      b: \"255\",\r\n      a: \"100\",\r\n    };\r\n  };\r\n\r\n  const parseDescription = (des) => {\r\n    const lst = des.split(\",\");\r\n    const finalLst = [];\r\n    lst.map((pair) => {\r\n      const newPair = pair.split(\":\");\r\n      finalLst.push({ key: newPair[0], value: newPair[1] });\r\n    });\r\n    return finalLst;\r\n  };\r\n\r\n  const submitField = () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.description.push({ ...field, section: section });\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n    setOpenNewField(false);\r\n  };\r\n\r\n  const hexToRgbA = (hex) => {\r\n    var c;\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      c = hex.substring(1).split(\"\");\r\n      if (c.length == 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n      }\r\n      c = \"0x\" + c.join(\"\");\r\n      return {\r\n        r: (c >> 16) & 255,\r\n        g: (c >> 8) & 255,\r\n        b: c & 255,\r\n        a: \"1\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleChangeAnimated = () => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    let elementClickedIndex;\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.animated = !hasAnimatedEdge;\r\n          }\r\n        } else {\r\n          if (element.id === elementCLicked.id) {\r\n            elementClickedIndex = index;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    newElements[elementClickedIndex].data.hasAnimatedEdge =\r\n      !newElements[elementClickedIndex].data.hasAnimatedEdge;\r\n    setAnimatedEdge(!hasAnimatedEdge);\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const checkTags = (tags2Check) => {\r\n    console.log(tags);\r\n    if (tags2Check.length === 0) {\r\n      return [];\r\n    } else {\r\n      const newTags = tags2Check.split(\",\");\r\n      if (tags.length === 0) {\r\n        return {\r\n          value: true,\r\n          msg: \"One or more of the tags provided does not exist.\",\r\n        };\r\n      }\r\n      newTags.map((tag) => {\r\n        if (!tags.includes(tag)) {\r\n          return {\r\n            value: true,\r\n            msg: \"One or more of the tags provided does not exist.\",\r\n          };\r\n        }\r\n      });\r\n      return newTags;\r\n    }\r\n  };\r\n\r\n  console.log(\"elements\", elements);\r\n\r\n  let filteredElements;\r\n  console.log(currentFile);\r\n\r\n  if (elements.length === 0) {\r\n    filteredElements = [];\r\n  } else {\r\n    console.log(elements, \"***********************88\");\r\n    filteredElements = elements.filter((data) => {\r\n      return data.node === currentFile.id || data.source;\r\n    });\r\n    filteredElements.sort((a, b) => {\r\n      if (a.hasOwnProperty(\"data\") && b.hasOwnProperty(\"data\")) {\r\n        return parseInt(a.id.slice(11, 24)) - parseInt(b.id.slice(11, 24));\r\n      }\r\n    });\r\n  }\r\n  if (!isEditMode) {\r\n    filteredElements = getLayoutedElements(\r\n      filteredElements,\r\n      orientation === \"vertical\" ? \"TB\" : \"LR\"\r\n    );\r\n  }\r\n  console.log(filteredElements);\r\n  console.log(elements);\r\n  const classes = useStyles();\r\n\r\n  const searchNodes = (value, event) => {\r\n    console.log(value);\r\n    const nodes = [...elements];\r\n    let newNodes;\r\n    if (value === \"\") {\r\n      newNodes = [...nodes];\r\n      newNodes.map((node) => {\r\n        node.isHidden = false;\r\n      });\r\n    } else {\r\n      newNodes = nodes.filter((node) => {\r\n        if (isNode(node, nodes)) {\r\n          console.log(node);\r\n          var itemText = (node.data.desc + node.data.title).toLowerCase();\r\n          if (\r\n            node.data.description !== null &&\r\n            node.data.description !== undefined\r\n          ) {\r\n            let descArr = \"\";\r\n            node.data.description.map((pair) => {\r\n              descArr = descArr + pair.key + pair.value;\r\n            });\r\n            itemText = itemText + descArr;\r\n          }\r\n          console.log(itemText);\r\n          console.log(itemText.indexOf(value) !== -1);\r\n          if (itemText.indexOf(value) !== -1) {\r\n            node.isHidden = false;\r\n            return true;\r\n          }\r\n          node.isHidden = true;\r\n          return true;\r\n          // return itemText.indexOf(value) !== -1;\r\n        } else {\r\n          node.isHidden = true;\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n    console.log(newNodes);\r\n    setElements(newNodes);\r\n  };\r\n\r\n  if (currentFile === null) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Grid container direction=\"row\" spacing={1} style={{ width: \"82%\" }}>\r\n          <Grid item xs={3} style={{ textAlign: \"start\" }}>\r\n            {isEditMode && (\r\n              <>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  startIcon={<Add />}\r\n                  style={{\r\n                    textAlign: \"start\",\r\n                    marginTop: 20,\r\n                  }}\r\n                  onClick={() => setOpenNewNode(true)}\r\n                >\r\n                  New Node\r\n                </Button>\r\n                <Dialog\r\n                  open={openNewNode}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                  // style={{ overflow: \"hidden\" }}\r\n                >\r\n                  <DialogTitle\r\n                    id=\"form-dialog-title\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    Select a Shape\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={1}>\r\n                      <Grid container direction=\"row\" spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            onClick={() => {\r\n                              addNode(\"special\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                background: \"#ADD8E6\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                border: \"1px solid black\",\r\n                                width: 100,\r\n                                height: 10,\r\n                                borderRadius: \"10px 10px 0px 0px\",\r\n                                textAlign: \"center\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                            <div\r\n                              style={{\r\n                                background: \"white\",\r\n                                border: \"1px solid black\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                width: 100,\r\n                                height: 40,\r\n                                borderRadius: \"0px 0px 10px 10px\",\r\n                                textAlign: \"center\",\r\n                                marginRight: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"90px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"50px\",\r\n                              marginLeft: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"oval\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        spacing={1}\r\n                        style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"rectangle\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"80px\",\r\n                              borderRadius: \"5px\",\r\n                              transform: \"rotate(45deg)\",\r\n                              marginLeft: \"30px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"diamond\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            {/* <Grid container direction=\"row\"> */}\r\n            <Typography variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              {`Project: ${currentFile.parentId}`}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {`Sub Process: ${currentFile.text}`}\r\n            </Typography>\r\n            {/* </Grid> */}\r\n          </Grid>\r\n          {/* {selectLegend()} */}\r\n          <Grid item xs={5} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\">\r\n              <Grid\r\n                component=\"label\"\r\n                container\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n                style={{ paddingTop: 20, paddingLeft: 20 }}\r\n              >\r\n                <Grid item>View</Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={isEditMode}\r\n                    onChange={handleChangeSwitch}\r\n                    name=\"checked\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>Edit</Grid>\r\n                {isEditMode && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: 30 }}\r\n                    onClick={() => {\r\n                      // console.log(\r\n                      //   elements,\r\n                      //   \"t8934ufjhn888ewhyobfo8ulh74uilw748ofulufo47fuligo7t357grlgt57grsg7rsty7osrlgwyot7rswy7hsgywo7hrlgwy7oglyo4rhgyotrglyo4rgyot7r\"\r\n                      // );\r\n                      updateNode([...elements]);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n                {!isEditMode && (\r\n                  <SearchField\r\n                    style={{ marginLeft: 15 }}\r\n                    placeholder=\"Search item\"\r\n                    onChange={searchNodes}\r\n                  />\r\n                )}\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: isEditMode ? 10 : 30 }}\r\n                  startIcon={<CloudUploadIcon />}\r\n                  onClick={() => {\r\n                    setOpenUpload(true);\r\n                  }}\r\n                >\r\n                  Import CSV\r\n                </Button>\r\n                <DropzoneDialogBase\r\n                  clearOnUnmount={true}\r\n                  filesLimit={1}\r\n                  dialogTitle={\r\n                    <>\r\n                      {console.log(renderAlert)}\r\n                      {renderAlert.value && (\r\n                        <Alert severity=\"error\">{renderAlert.msg}</Alert>\r\n                      )}\r\n                      <span>Upload file</span>\r\n                      <IconButton\r\n                        style={{\r\n                          right: \"12px\",\r\n                          top: \"8px\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                        onClick={() => setOpenUpload(false)}\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </>\r\n                  }\r\n                  acceptedFiles={[\".csv\"]}\r\n                  fileObjects={fileObjects}\r\n                  cancelButtonText={\"cancel\"}\r\n                  showAlerts={[\"error\", \"info\"]}\r\n                  submitButtonText={\"submit\"}\r\n                  maxFileSize={5000000}\r\n                  open={openUpload}\r\n                  onAdd={(newFileObjs) => {\r\n                    console.log(\"onAdd\", newFileObjs);\r\n                    if (fileObjects.length === 0) {\r\n                      setFileObjects([].concat(fileObjects, newFileObjs));\r\n                    }\r\n                  }}\r\n                  onDelete={(deleteFileObj) => {\r\n                    const newFilesObjects = [...fileObjects].filter(\r\n                      (item) => item !== deleteFileObj\r\n                    );\r\n                    setFileObjects(newFilesObjects);\r\n                    console.log(\"onDelete\", deleteFileObj);\r\n                  }}\r\n                  onClose={() => setOpenUpload(false)}\r\n                  onSave={() => {\r\n                    console.log(fileObjects[0]);\r\n                    Papa.parse(fileObjects[0].file, {\r\n                      complete: function (results) {\r\n                        let data = results.data;\r\n                        let jsonArr = [];\r\n                        const ids = {};\r\n                        const children = {};\r\n                        const animateds = [];\r\n                        const edgeTypes = {};\r\n                        const arrows = [];\r\n                        const description = {};\r\n                        const arrowColors = {};\r\n                        let counter = 0;\r\n                        data = data.slice(1);\r\n                        data.map((element) => {\r\n                          console.log(\"0------0\", element);\r\n                          const checkedTags = checkTags(element[3]);\r\n                          console.log(checkedTags, \"7777777777777777777\");\r\n                          console.log(element[4]);\r\n                          console.log(element[0]);\r\n                          console.log(element[0].includes(\".\"));\r\n                          if (element[0].includes(\".\")) {\r\n                            counter = counter + 1;\r\n                            const lst =\r\n                              description[ids[element[0].split(\".\")[0]]] !==\r\n                              undefined\r\n                                ? [\r\n                                    ...description[\r\n                                      ids[element[0].split(\".\")[0]]\r\n                                    ],\r\n                                  ]\r\n                                : [];\r\n                            lst.push({\r\n                              key: element[1],\r\n                              value: element[2],\r\n                            });\r\n                            description[ids[element[0].split(\".\")[0]]] = [\r\n                              ...lst,\r\n                            ];\r\n                          } else {\r\n                            if (\r\n                              [\r\n                                \"special\",\r\n                                \"oval\",\r\n                                \"rectangle\",\r\n                                \"diamond\",\r\n                              ].includes(element[4].toLowerCase())\r\n                            ) {\r\n                              console.log(\"----\");\r\n                              if (Array.isArray(checkedTags)) {\r\n                                ids[element[0]] = getNodeId();\r\n                                jsonArr.push({\r\n                                  id: ids[element[0]],\r\n                                  node: currentFile.id,\r\n                                  type: element[4],\r\n                                  data: {\r\n                                    title: element[1],\r\n                                    description: null,\r\n                                    color: element[2].startsWith(\"#\")\r\n                                      ? hexToRgb(element[2])\r\n                                      : {\r\n                                          r: \"193\",\r\n                                          g: \"230\",\r\n                                          b: \"255\",\r\n                                          a: \"100\",\r\n                                        },\r\n                                    tags: checkedTags,\r\n                                    isCollapsable:\r\n                                      element[5] === \"TRUE\" ? true : false,\r\n                                  },\r\n                                  isHidden: false,\r\n                                  position: { x: 0, y: 0 },\r\n                                  desc: null,\r\n                                });\r\n                                if (element[7] === \"TRUE\") {\r\n                                  animateds.push(ids[element[0]]);\r\n                                }\r\n                                if (element[8] === \"step\") {\r\n                                  edgeTypes[ids[element[0]]] = \"step\";\r\n                                } else {\r\n                                  edgeTypes[ids[element[0]]] = \"curved\";\r\n                                }\r\n                                if (element[9] === \"TRUE\") {\r\n                                  arrows.push(ids[element[0]]);\r\n                                }\r\n                                if (element[10].startsWith(\"#\")) {\r\n                                  arrowColors[ids[element[0]]] = element[10];\r\n                                }\r\n                                console.log(jsonArr);\r\n                                if (element[6].length > 0) {\r\n                                  if (element[6].includes(\",\")) {\r\n                                    const csvChildren = element[6].split(\",\");\r\n                                    children[element[0]] = csvChildren;\r\n                                  }\r\n                                }\r\n                              } else {\r\n                                console.log(checkedTags);\r\n                                // setRenderAlert(checkedTags);\r\n                                setRenderAlert({\r\n                                  value: true,\r\n                                  msg: \"One or more of the tags provided does not exist.\",\r\n                                });\r\n                              }\r\n                            } else {\r\n                              console.log(\"test\");\r\n                              setRenderAlert({\r\n                                value: true,\r\n                                msg: \"A type of shape in the file does not exist.\",\r\n                              });\r\n                            }\r\n                          }\r\n                        });\r\n                        console.log(jsonArr);\r\n                        console.log(description);\r\n                        jsonArr.map((element) => {\r\n                          element.data.description = description[element.id];\r\n                        });\r\n                        console.log(\"Finished:\", results.data);\r\n                        console.log(\"onSave\", fileObjects);\r\n                        console.log(jsonArr.length);\r\n                        if (jsonArr.length === data.length - counter) {\r\n                          console.log(ids);\r\n                          console.log(children);\r\n                          for (var key in children) {\r\n                            if (children.hasOwnProperty(key)) {\r\n                              if (Array.isArray(children[key])) {\r\n                                children[key].map((child) => {\r\n                                  const edge = addEdge(\r\n                                    {\r\n                                      animated: animateds.includes(ids[key])\r\n                                        ? true\r\n                                        : false,\r\n                                      type: \"customEdge\",\r\n                                      data: {\r\n                                        type: edgeTypes[ids[key]],\r\n                                        hasArrow:\r\n                                          arrows.includes(ids[key]) === true\r\n                                            ? true\r\n                                            : false,\r\n                                        color:\r\n                                          arrowColors[ids[key]] !== undefined\r\n                                            ? hexToRgbA(arrowColors[ids[key]])\r\n                                            : {\r\n                                                r: \"187\",\r\n                                                g: \"187\",\r\n                                                b: \"192\",\r\n                                                a: \"100\",\r\n                                              },\r\n                                      },\r\n                                      source: ids[key],\r\n                                      target: ids[child],\r\n                                    },\r\n                                    jsonArr\r\n                                  );\r\n                                  console.log(edge);\r\n                                  jsonArr = edge;\r\n                                });\r\n                              } else {\r\n                                const edge = addEdge(\r\n                                  {\r\n                                    animated: animateds.includes(ids[key])\r\n                                      ? true\r\n                                      : false,\r\n                                    type: \"customEdge\",\r\n                                    data: {\r\n                                      type: edgeTypes[ids[key]],\r\n                                      hasArrow:\r\n                                        arrows.includes(ids[key]) === true\r\n                                          ? true\r\n                                          : false,\r\n                                      color:\r\n                                        arrowColors[ids[key]] !== undefined\r\n                                          ? hexToRgbA(arrowColors[ids[key]])\r\n                                          : {\r\n                                              r: \"187\",\r\n                                              g: \"187\",\r\n                                              b: \"192\",\r\n                                              a: \"100\",\r\n                                            },\r\n                                    },\r\n                                    source: ids[key],\r\n                                    target: ids[children[key]],\r\n                                  },\r\n                                  jsonArr\r\n                                );\r\n                                console.log(edge);\r\n                                jsonArr = edge;\r\n                              }\r\n                            }\r\n                          }\r\n                          const layoutedElements = getLayoutedElements(jsonArr);\r\n                          setElements(layoutedElements);\r\n                          updateNode(layoutedElements);\r\n                          console.log(jsonArr);\r\n                          setCsv(true);\r\n                          setOpenUpload(false);\r\n                        }\r\n                      },\r\n                    });\r\n                  }}\r\n                  showPreviewsInDropzone={false}\r\n                  useChipsForPreview\r\n                  previewGridProps={{\r\n                    container: { spacing: 1, direction: \"row\" },\r\n                  }}\r\n                  previewChipProps={{\r\n                    classes: { root: classes.previewChip },\r\n                  }}\r\n                  showFileNamesInPreview={true}\r\n                />\r\n                <Snackbar\r\n                  open={renderAlert.value}\r\n                  autoHideDuration={5000}\r\n                  onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                >\r\n                  <Alert\r\n                    onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                    severity=\"error\"\r\n                  >\r\n                    {renderAlert.msg}\r\n                  </Alert>\r\n                </Snackbar> */}\r\n              </Grid>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={1} style={{ textAlign: \"end\" }}>\r\n            <IconButton\r\n              // style={{ paddingLeft: 30 }}\r\n              aria-label=\"more\"\r\n              aria-controls=\"long-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClickMenu}\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleCloseMenu}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  setOpenUpload(true);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                Import CSV\r\n              </MenuItem>\r\n              {selectLegend()}\r\n              {/* <MenuItem\r\n                onClick={() => {\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                Add Legend\r\n              </MenuItem> */}\r\n            </Menu>\r\n            <DropzoneDialogBase\r\n              clearOnUnmount={true}\r\n              filesLimit={1}\r\n              dialogTitle={\r\n                <>\r\n                  {console.log(renderAlert)}\r\n                  {renderAlert.value && (\r\n                    <Alert severity=\"error\">{renderAlert.msg}</Alert>\r\n                  )}\r\n                  <span>Upload file</span>\r\n                  <IconButton\r\n                    style={{\r\n                      right: \"12px\",\r\n                      top: \"8px\",\r\n                      position: \"absolute\",\r\n                    }}\r\n                    onClick={() => setOpenUpload(false)}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </>\r\n              }\r\n              acceptedFiles={[\".csv\"]}\r\n              fileObjects={fileObjects}\r\n              cancelButtonText={\"cancel\"}\r\n              showAlerts={[\"error\", \"info\"]}\r\n              submitButtonText={\"submit\"}\r\n              maxFileSize={5000000}\r\n              open={openUpload}\r\n              onAdd={(newFileObjs) => {\r\n                console.log(\"onAdd\", newFileObjs);\r\n                if (fileObjects.length === 0) {\r\n                  setFileObjects([].concat(fileObjects, newFileObjs));\r\n                }\r\n              }}\r\n              onDelete={(deleteFileObj) => {\r\n                const newFilesObjects = [...fileObjects].filter(\r\n                  (item) => item !== deleteFileObj\r\n                );\r\n                setFileObjects(newFilesObjects);\r\n                console.log(\"onDelete\", deleteFileObj);\r\n              }}\r\n              onClose={() => setOpenUpload(false)}\r\n              onSave={() => {\r\n                console.log(fileObjects[0]);\r\n                Papa.parse(fileObjects[0].file, {\r\n                  complete: function (results) {\r\n                    let data = results.data;\r\n                    let jsonArr = [];\r\n                    const ids = {};\r\n                    const children = {};\r\n                    const animateds = [];\r\n                    const edgeTypes = {};\r\n                    const arrows = [];\r\n                    const description = {};\r\n                    const arrowColors = {};\r\n                    let counter = 0;\r\n                    data = data.slice(1);\r\n                    data.map((element) => {\r\n                      console.log(\"0------0\", element);\r\n                      const checkedTags = checkTags(element[3]);\r\n                      console.log(checkedTags, \"7777777777777777777\");\r\n                      console.log(element[4]);\r\n                      console.log(element[0]);\r\n                      console.log(element[0].includes(\".\"));\r\n                      if (element[0].includes(\".\")) {\r\n                        counter = counter + 1;\r\n                        const lst =\r\n                          description[ids[element[0].split(\".\")[0]]] !==\r\n                          undefined\r\n                            ? [...description[ids[element[0].split(\".\")[0]]]]\r\n                            : [];\r\n                        lst.push({\r\n                          key: element[1],\r\n                          value: element[2],\r\n                        });\r\n                        description[ids[element[0].split(\".\")[0]]] = [...lst];\r\n                      } else {\r\n                        if (\r\n                          [\"special\", \"oval\", \"rectangle\", \"diamond\"].includes(\r\n                            element[4].toLowerCase()\r\n                          )\r\n                        ) {\r\n                          console.log(\"----\");\r\n                          if (Array.isArray(checkedTags)) {\r\n                            ids[element[0]] = getNodeId();\r\n                            jsonArr.push({\r\n                              id: ids[element[0]],\r\n                              node: currentFile.id,\r\n                              type: element[4],\r\n                              data: {\r\n                                title: element[1],\r\n                                description: null,\r\n                                color: element[2].startsWith(\"#\")\r\n                                  ? hexToRgb(element[2])\r\n                                  : {\r\n                                      r: \"193\",\r\n                                      g: \"230\",\r\n                                      b: \"255\",\r\n                                      a: \"100\",\r\n                                    },\r\n                                tags: checkedTags,\r\n                                isCollapsable:\r\n                                  element[5] === \"TRUE\" ? true : false,\r\n                              },\r\n                              isHidden: false,\r\n                              position: { x: 0, y: 0 },\r\n                              desc: null,\r\n                            });\r\n                            if (element[7] === \"TRUE\") {\r\n                              animateds.push(ids[element[0]]);\r\n                            }\r\n                            if (element[8] === \"step\") {\r\n                              edgeTypes[ids[element[0]]] = \"step\";\r\n                            } else {\r\n                              edgeTypes[ids[element[0]]] = \"curved\";\r\n                            }\r\n                            if (element[9] === \"TRUE\") {\r\n                              arrows.push(ids[element[0]]);\r\n                            }\r\n                            if (element[10].startsWith(\"#\")) {\r\n                              arrowColors[ids[element[0]]] = element[10];\r\n                            }\r\n                            console.log(jsonArr);\r\n                            if (element[6].length > 0) {\r\n                              if (element[6].includes(\",\")) {\r\n                                const csvChildren = element[6].split(\",\");\r\n                                children[element[0]] = csvChildren;\r\n                              }\r\n                            }\r\n                          } else {\r\n                            console.log(checkedTags);\r\n                            // setRenderAlert(checkedTags);\r\n                            setRenderAlert({\r\n                              value: true,\r\n                              msg: \"One or more of the tags provided does not exist.\",\r\n                            });\r\n                          }\r\n                        } else {\r\n                          console.log(\"test\");\r\n                          setRenderAlert({\r\n                            value: true,\r\n                            msg: \"A type of shape in the file does not exist.\",\r\n                          });\r\n                        }\r\n                      }\r\n                    });\r\n                    console.log(jsonArr);\r\n                    console.log(description);\r\n                    jsonArr.map((element) => {\r\n                      element.data.description = description[element.id];\r\n                    });\r\n                    console.log(\"Finished:\", results.data);\r\n                    console.log(\"onSave\", fileObjects);\r\n                    console.log(jsonArr.length);\r\n                    if (jsonArr.length === data.length - counter) {\r\n                      console.log(ids);\r\n                      console.log(children);\r\n                      for (var key in children) {\r\n                        if (children.hasOwnProperty(key)) {\r\n                          if (Array.isArray(children[key])) {\r\n                            children[key].map((child) => {\r\n                              const edge = addEdge(\r\n                                {\r\n                                  animated: animateds.includes(ids[key])\r\n                                    ? true\r\n                                    : false,\r\n                                  type: \"customEdge\",\r\n                                  data: {\r\n                                    type: edgeTypes[ids[key]],\r\n                                    hasArrow:\r\n                                      arrows.includes(ids[key]) === true\r\n                                        ? true\r\n                                        : false,\r\n                                    color:\r\n                                      arrowColors[ids[key]] !== undefined\r\n                                        ? hexToRgbA(arrowColors[ids[key]])\r\n                                        : {\r\n                                            r: \"187\",\r\n                                            g: \"187\",\r\n                                            b: \"192\",\r\n                                            a: \"100\",\r\n                                          },\r\n                                  },\r\n                                  source: ids[key],\r\n                                  target: ids[child],\r\n                                },\r\n                                jsonArr\r\n                              );\r\n                              console.log(edge);\r\n                              jsonArr = edge;\r\n                            });\r\n                          } else {\r\n                            const edge = addEdge(\r\n                              {\r\n                                animated: animateds.includes(ids[key])\r\n                                  ? true\r\n                                  : false,\r\n                                type: \"customEdge\",\r\n                                data: {\r\n                                  type: edgeTypes[ids[key]],\r\n                                  hasArrow:\r\n                                    arrows.includes(ids[key]) === true\r\n                                      ? true\r\n                                      : false,\r\n                                  color:\r\n                                    arrowColors[ids[key]] !== undefined\r\n                                      ? hexToRgbA(arrowColors[ids[key]])\r\n                                      : {\r\n                                          r: \"187\",\r\n                                          g: \"187\",\r\n                                          b: \"192\",\r\n                                          a: \"100\",\r\n                                        },\r\n                                },\r\n                                source: ids[key],\r\n                                target: ids[children[key]],\r\n                              },\r\n                              jsonArr\r\n                            );\r\n                            console.log(edge);\r\n                            jsonArr = edge;\r\n                          }\r\n                        }\r\n                      }\r\n                      const layoutedElements = getLayoutedElements(jsonArr);\r\n                      setElements(layoutedElements);\r\n                      updateNode(layoutedElements);\r\n                      console.log(jsonArr);\r\n                      setCsv(true);\r\n                      setOpenUpload(false);\r\n                    }\r\n                  },\r\n                });\r\n              }}\r\n              showPreviewsInDropzone={false}\r\n              useChipsForPreview\r\n              previewGridProps={{\r\n                container: { spacing: 1, direction: \"row\" },\r\n              }}\r\n              previewChipProps={{\r\n                classes: { root: classes.previewChip },\r\n              }}\r\n              showFileNamesInPreview={true}\r\n            />\r\n            <Snackbar\r\n              open={renderAlert.value}\r\n              autoHideDuration={5000}\r\n              onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n            >\r\n              <Alert\r\n                onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                severity=\"error\"\r\n              >\r\n                {renderAlert.msg}\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider orientation=\"horizontal\" />\r\n        <ReactFlowProvider>\r\n          <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n            <ReactFlow\r\n              nodeTypes={{\r\n                special: SpecialNodeComponent,\r\n                oval: OvalNodeComponent,\r\n                rectangle: RectangleNodeComponent,\r\n                diamond: DiamondNodeComponent,\r\n              }}\r\n              edgeTypes={{\r\n                customEdge: CustomEdge,\r\n              }}\r\n              elements={\r\n                Object.keys(targetElements).length !== 0\r\n                  ? toggledElements\r\n                  : filteredElements\r\n              }\r\n              // elements={filteredElements}\r\n              onElementsRemove={onElementsRemove}\r\n              onNodeDoubleClick={onElementDoubleClick}\r\n              onElementClick={onNodeClick}\r\n              onDrop={onDrop}\r\n              onDragOver={onDragOver}\r\n              onNodeDragStop={onNodeDragStop}\r\n              connectionLineType={edgeType}\r\n              onPaneContextMenu={() => setOpenNewNode(true)}\r\n              onConnect={onConnect}\r\n              onLoad={onLoad}\r\n              snapToGrid={false}\r\n              // snapGrid={[15, 15]}\r\n              paneMoveable={true}\r\n              style={{ height: \"90vh\", width: isEditMode ? \"84%\" : \"95%\" }}\r\n            >\r\n              <MiniMap\r\n                nodeStrokeColor={(n) => {\r\n                  if (n.style?.background) return n.style.background;\r\n                  if (n.type === \"special\") return \"#0041d0\";\r\n                  if (n.type === \"oval\") return \"#008000\";\r\n                  if (n.type === \"rectangle\") return \"#8A2BE2\";\r\n                  if (n.type === \"diamond\") return \"#00008b\";\r\n                  if (n.type === \"output\") return \"#ff0072\";\r\n                  if (n.type === \"default\") return \"#1a192b\";\r\n\r\n                  return \"#eee\";\r\n                }}\r\n                nodeColor={(n) => {\r\n                  if (n.style?.background) return n.style.background;\r\n\r\n                  return \"#fff\";\r\n                }}\r\n                nodeBorderRadius={2}\r\n              />\r\n              <Controls />\r\n              {legends.hasOwnProperty(currentFile.id) &&\r\n                legends[currentFile.id].length != 0 && (\r\n                  <div className={\"legendBox\"}>\r\n                    {legends[currentFile.id].map((leg) => (\r\n                      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                        <div\r\n                          className={\"legendColor\"}\r\n                          style={{ backgroundColor: leg.color }}\r\n                        ></div>\r\n                        <div style={{ marginLeft: \"10%\" }}>{leg.title}</div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              <Background color=\"#aaa\" gap={16} />\r\n            </ReactFlow>\r\n          </div>\r\n        </ReactFlowProvider>\r\n        <svg width=\"0\" height=\"0\">\r\n          <defs>\r\n            <marker\r\n              className=\"react-flow__arrowhead\"\r\n              id=\"my-marker\"\r\n              markerWidth=\"25\"\r\n              markerHeight=\"25\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              orient=\"auto\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n            >\r\n              <polyline\r\n                stroke=\"#BBBBC0\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"1\"\r\n                fill=\"#BBBBC0\"\r\n                points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n              />\r\n            </marker>\r\n          </defs>\r\n        </svg>\r\n        {/* <div /> */}\r\n        {isEditMode ? (\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            style={{\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ textAlign: \"center\", width: 250, overflowY: \"auto\" }}\r\n            >\r\n              {Object.keys(elementCLicked).length === 0 ? (\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  gutterBottom\r\n                  style={{\r\n                    paddingTop: 380,\r\n                    paddingLeft: 10,\r\n                    paddingRight: 10,\r\n                  }}\r\n                >\r\n                  Double-click on any item to get a detailed view.\r\n                </Typography>\r\n              ) : (\r\n                <div>\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Title\r\n                  </Typography>\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.title}\r\n                    margin=\"normal\"\r\n                    onChange={handleChangeTitle}\r\n                    disabled={!editModeTtitle}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.title}\r\n                    InputProps={{\r\n                      // classes: {\r\n                      //   disabled: {\r\n                      //     color: \"black\",\r\n                      //     borderBottom: 0,\r\n                      //     \"&:before\": {\r\n                      //       borderBottom: 0,\r\n                      //     },\r\n                      //   },\r\n                      // },\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton onClick={handleClickTitle}>\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Description\r\n                  </Typography>\r\n\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.desc}\r\n                    margin=\"normal\"\r\n                    rows={4}\r\n                    multiline\r\n                    variant=\"filled\"\r\n                    onChange={handleChangeDesc}\r\n                    // disabled={!editModeDesc}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.desc}\r\n                    // InputProps={{\r\n                    //   // classes: {\r\n                    //   //   disabled: {\r\n                    //   //     color: \"black\",\r\n                    //   //     borderBottom: 0,\r\n                    //   //     \"&:before\": {\r\n                    //   //       borderBottom: 0,\r\n                    //   //     },\r\n                    //   //   },\r\n                    //   // },\r\n                    //   endAdornment: (\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <IconButton onClick={handleClickDesc}>\r\n                    //         <Edit />\r\n                    //       </IconButton>\r\n                    //     </InputAdornment>\r\n                    //   ),\r\n                    // }}\r\n                  />\r\n                  {elementCLicked.type === \"special\" && (\r\n                    <>\r\n                      <Typography variant=\"h6\" style={{ marginTop: 20 }}>\r\n                        Add Field\r\n                      </Typography>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        color=\"secondary\"\r\n                        onClick={() => setOpenNewField(true)}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                      <Dialog\r\n                        open={openNewField}\r\n                        onClose={handleCloseField}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                      >\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          Add New Field\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <div style={{ textAlign: \"center\" }}>\r\n                            <TextField\r\n                              style={{ width: \"23%\", marginRigh: 10 }}\r\n                              label=\"Key\"\r\n                              id=\"outlined-size-small\"\r\n                              defaultValue=\"Key\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.key = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              style={{ width: \"23%\", marginLeft: 10 }}\r\n                              label=\"Value\"\r\n                              id=\"outlined-size-normal\"\r\n                              defaultValue=\"Value 1\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.value1 = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                            />\r\n                            <TextField\r\n                              style={{ width: \"23%\", marginLeft: 10 }}\r\n                              label=\"Value\"\r\n                              id=\"outlined-size-normal\"\r\n                              defaultValue=\"Value 2\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.value2 = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                            />\r\n                          </div>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              maxHeight: \"100%\",\r\n                              overflow: \"auto\",\r\n                            }}\r\n                          >\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              style={{\r\n                                width: 200,\r\n                                marginTop: 30,\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                                Section\r\n                              </InputLabel>\r\n                              <Select\r\n                                style={{ fontSize: 15 }}\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                onChange={handleChangeSection}\r\n                                variant=\"outlined\"\r\n                                label=\"Section\"\r\n                                defaultValue=\"1\"\r\n                                displayEmpty={true}\r\n                              >\r\n                                <MenuItem value=\"1\">Section 1</MenuItem>\r\n                                <MenuItem value=\"2\">Section 2</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </Grid>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={handleCloseField} color=\"primary\">\r\n                            Cancel\r\n                          </Button>\r\n                          <Button onClick={submitField} color=\"primary\">\r\n                            Add\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </>\r\n                  )}\r\n                  <Divider style={{ marginTop: 10 }} />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon size=\"medium\" />}\r\n                    onClick={() => setOpen(true)}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    Add Tag\r\n                  </Button>\r\n                  <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">Add Tag</DialogTitle>\r\n                    <DialogContent>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={tag}\r\n                        onChange={handleChangeTag}\r\n                        fullWidth\r\n                        displayEmpty\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {localStorage.getItem(\"tags\") !== null &&\r\n                        JSON.parse(localStorage.getItem(\"tags\")).length > 0 ? (\r\n                          JSON.parse(localStorage.getItem(\"tags\")).map(\r\n                            (tag) => {\r\n                              return <MenuItem value={tag}>{tag}</MenuItem>;\r\n                            }\r\n                          )\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Select>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={submitTag} color=\"primary\">\r\n                        Add\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  {elementCLicked.data.tags.length > 0 &&\r\n                    elementCLicked.data.tags.map((tag) => (\r\n                      <Chip\r\n                        label={tag}\r\n                        color=\"secondary\"\r\n                        style={{ marginBottom: 10 }}\r\n                      />\r\n                    ))}\r\n\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={isCollapsable}\r\n                          onClick={() => handleChangeCollapsable()}\r\n                          name=\"checked2\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Collapsable</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          Node Color\r\n                        </Typography>\r\n                        <div style={styles.swatch} onClick={handleClickColor}>\r\n                          <div style={styles.color} />\r\n                        </div>\r\n                        {displayColorPicker ? (\r\n                          <div style={styles.popover}>\r\n                            <div\r\n                              style={styles.cover}\r\n                              onClick={handleCloseColor}\r\n                            />\r\n                            <SketchPicker\r\n                              color={color}\r\n                              onChange={handleChangeColor}\r\n                            />\r\n                          </div>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"start\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n                    >\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                        EdgeType\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ fontSize: 15 }}\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        onChange={handleChangeEdgeType}\r\n                        variant=\"outlined\"\r\n                        label=\"EdgeType\"\r\n                        defaultValue=\"smoothstep\"\r\n                        displayEmpty={true}\r\n                      >\r\n                        <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n                        <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={hasAnimatedEdge}\r\n                          onClick={() => handleChangeAnimated()}\r\n                          name=\"checked3\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Animated</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={hasArrowEdge}\r\n                          onClick={() => handleChangeArrow()}\r\n                          name=\"checked4\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Arrow</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Arrow Color\r\n                      </Typography>\r\n                      <div\r\n                        style={stylesArrow.swatch}\r\n                        onClick={handleClickColorArrow}\r\n                      >\r\n                        <div style={stylesArrow.color} />\r\n                      </div>\r\n                      {displayColorPickerArrow ? (\r\n                        <div style={stylesArrow.popover}>\r\n                          <div\r\n                            style={stylesArrow.cover}\r\n                            onClick={handleCloseColorArrow}\r\n                          />\r\n                          <SketchPicker\r\n                            color={colorArrow}\r\n                            onChange={handleChangeColorArrow}\r\n                          />\r\n                        </div>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </div>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <IconButton\r\n                    style={{ color: \"red\" }}\r\n                    onClick={() => handleDelete()}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Drawer>\r\n        ) : (\r\n          <div>\r\n            {Object.keys(elementCLicked).length > 0 && (\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                anchor=\"right\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    width: 250,\r\n                    overflowY: \"auto\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      style={{\r\n                        marginTop: 40,\r\n                        marginBottom: 10,\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      Title\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {elementCLicked.data.title}\r\n                    </Typography>\r\n                    {/* <TextField\r\n                      name={elementCLicked.id}\r\n                      defaultValue={elementCLicked.data.title}\r\n                      margin=\"normal\"\r\n                      onChange={handleChangeTitle}\r\n                      disabled\r\n                      style={{ width: \"90%\" }}\r\n                      value={elementCLicked.data.title}\r\n                      InputProps={\r\n                        {\r\n                          // classes: {\r\n                          //   disabled: {\r\n                          //     color: \"black\",\r\n                          //     borderBottom: 0,\r\n                          //     \"&:before\": {\r\n                          //       borderBottom: 0,\r\n                          //     },\r\n                          //   },\r\n                          // },\r\n                        }\r\n                      }\r\n                    /> */}\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      style={{\r\n                        marginTop: 40,\r\n                        marginBottom: 10,\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      Description\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {elementCLicked.data.desc}\r\n                    </Typography>\r\n                    {/* <TextField\r\n                      name={elementCLicked.id}\r\n                      defaultValue={elementCLicked.data.desc}\r\n                      margin=\"normal\"\r\n                      onChange={handleChangeDesc}\r\n                      disabled\r\n                      rows={5}\r\n                      multiline\r\n                      style={{ width: \"90%\" }}\r\n                      value={elementCLicked.data.desc}\r\n                      InputProps={\r\n                        {\r\n                          // classes: {\r\n                          //   disabled: {\r\n                          //     color: \"black\",\r\n                          //     borderBottom: 0,\r\n                          //     \"&:before\": {\r\n                          //       borderBottom: 0,\r\n                          //     },\r\n                          //   },\r\n                          // },\r\n                        }\r\n                      }\r\n                    /> */}\r\n                  </div>\r\n                </Grid>\r\n              </Drawer>\r\n            )}\r\n          </div>\r\n          // )}\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Canvas;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport SideBar from \"./components/SideBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Canvas from \"./components/Canvas\";\nimport { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// https://flowchart-backend.herokuapp.com\n// http://127.0.0.1:8000\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\n\nfunction App() {\n  const [currentFile, setCurrentFile] = useState(\n    localStorage.getItem(\"current\") === null\n      ? {}\n      : JSON.parse(localStorage.getItem(\"current\"))\n  );\n  const [isCanvasVisible, setIsCanvasVisible] = useState(false);\n  const [selectedColor, setSelectedColor] = useState({\n    r: \"193\",\n    g: \"230\",\n    b: \"255\",\n    a: \"100\",\n  });\n  const [edgeType, setEdgeType] = useState(\"smoothstep\");\n  const [isEditMode, setEditMode] = useState(false);\n  const [orientation, setOrientation] = useState(\"vertical\");\n\n  const updateSessionDb = (session) => {\n    fetch(`${apiUrl}/api/update-session`, {\n      method: \"POST\",\n      body: JSON.stringify({ session_id: session }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => console.log(json));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"session\") === null) {\n      const session = jwt.sign({ userId: uuidv4() }, \"secretkey\", {\n        expiresIn: \"1h\",\n        algorithm: \"HS256\",\n      });\n      updateSessionDb(session);\n      localStorage.setItem(\"session\", session);\n    }\n  }, []);\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={5} sm={4} md={2} lg={2}>\n        <SideBar\n          currentFile={currentFile}\n          setCurrentFile={setCurrentFile}\n          setCanvasVisibility={(flag) => setIsCanvasVisible(flag)}\n          setEdgeType={setEdgeType}\n          setSelectedColor={setSelectedColor}\n          isEditMode={isEditMode}\n          setOrientation={setOrientation}\n          orientation={orientation}\n        />\n      </Grid>\n      {isCanvasVisible && (\n        <Grid item xs={7} sm={8} md={10} lg={10}>\n          <Canvas\n            orientation={orientation}\n            currentFile={currentFile}\n            setCurrentFile={setCurrentFile}\n            isEditMode={isEditMode}\n            setEditMode={setEditMode}\n            selectedColor={selectedColor}\n            edgeType={edgeType}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}