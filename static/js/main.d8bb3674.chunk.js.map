{"version":3,"sources":["components/SideBar.js","components/CustomEdge.js","components/Canvas.js","App.js","index.js"],"names":["apiUrl","SideBar","currentFile","setCurrentFile","setCanvasVisibility","setEdgeType","setSelectedColor","isEditMode","setOrientation","orientation","useState","files","setFiles","folder","setFolder","file","setFile","React","openNewFolder","setOpenNewFolder","openNewTag","setOpenNewTag","value","msg","error","setError","names","setNames","tagError","setTagError","tag","setTag","tags","setTags","openNewFile","setOpenNewFile","openEditTag","setOpenEditTag","currentEditTag","setCurrentEditTag","editTag","setEditTag","editTagError","setEditTagError","activeFolder","setActiveFolder","displayColorPicker","setDisplayColorPicker","r","g","b","a","color","setColor","setValue","useEffect","fetch","method","body","JSON","stringify","session_id","localStorage","getItem","headers","then","res","json","newTags","newNames","console","log","Array","isArray","parse","hasOwnProperty","handleClose","updateFilesDb","newElements","updateNamesDb","updateTagsDb","filter","node","length","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","styles","reactCSS","default","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","Tabs","onChange","newValue","variant","indicatorColor","tabItemContainerStyle","textColor","aria-label","Tab","icon","label","Grid","item","xs","style","textAlign","borderRight","Typography","gutterBottom","container","spacing","justifyContent","IconButton","onClick","fontSize","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","helperText","target","fullWidth","DialogActions","Button","includes","newFiles","push","text","expanded","setItem","disabled","parentId","elements","index","findIndex","element","splice","namesIndex","indexOf","removeItem","data","isDelete","updateElementsDb","Object","keys","Divider","marginTop","maxHeight","overflow","searchEnabled","paddingLeft","paddingTop","paddingRight","fontWeight","dataStructure","items","onItemClick","e","itemData","direction","draggable","border","marginLeft","paddingBottom","transform","rgb","FormControl","InputLabel","Select","labelId","defaultValue","displayEmpty","MenuItem","component","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","backgroundColor","startIcon","prevTags","concat","List","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","edge","deleteTag","type","originalTag","submitEditTag","CustomEdge","source","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","animated","edgePath","getSmoothStepPath","getBezierPath","hasArrow","className","markerWidth","markerHeight","viewBox","orient","refX","refY","stroke","strokeLinecap","strokeLinejoin","strokeWidth","fill","points","d","markerEnd","markerStart","getMarkerEnd","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","getLayoutedElements","isHorizontal","setGraph","rankdir","forEach","el","isNode","setNode","setEdge","layout","nodeWithPosition","x","nodeWidth","Math","random","y","nodeHeight","useStyles","makeStyles","theme","createStyles","previewChip","minWidth","maxWidth","SpecialNodeComponent","myRef","useRef","ref","borderColor","minHeight","align","title","marginRight","isConnectable","connectionMode","onMouseOver","current","onMouseLeave","alignItems","description","pair","key","flexItem","OvalNodeComponent","RectangleNodeComponent","DiamondNodeComponent","overflowWrap","Canvas","selectedColor","edgeType","setEditMode","setElements","elementCLicked","setElementClicked","editModeTtitle","setEditModeTitle","editModeDesc","setEditModeDesc","setOpen","openUpload","setOpenUpload","openNewNode","setOpenNewNode","displayColorPickerArrow","setDisplayColorPickerArrow","colorArrow","setColorArrow","toggledElements","targetElements","setFirstTime","fileObjects","setFileObjects","renderAlert","setRenderAlert","setCsv","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","openNewField","setOpenNewField","field","setField","hasArrowEdge","setArrowEdge","hasAnimatedEdge","setAnimatedEdge","isCollapsable","setCollapsable","handleCloseField","onConnect","params","newParams","addEdge","onElementClick","getAllOutgoers","getOutgoers","reduce","memo","outgoer","onNodeClick","children","allOutgoers","isHidden","child","newChild","u","jsonElements","filteredElements","submitTag","newElement","updateNode","handleChangeTitle","str","substring","handleChangeDesc","handleDelete","edges","getConnectedEdges","update","getNodeId","Date","newCurrent","addNode","desc","handleChangeArrow","isEdge","elementClickedIndex","stylesArrow","hexToRgb","hex","c","test","split","join","sort","parseInt","slice","classes","Switch","checked","clearOnUnmount","filesLimit","dialogTitle","Alert","severity","acceptedFiles","cancelButtonText","showAlerts","submitButtonText","maxFileSize","onAdd","newFileObjs","onDelete","deleteFileObj","newFilesObjects","onSave","Papa","complete","results","jsonArr","ids","animateds","edgeTypes","arrows","counter","checkedTags","tags2Check","checkTags","lst","undefined","toLowerCase","startsWith","csvChildren","layoutedElements","showPreviewsInDropzone","useChipsForPreview","previewGridProps","previewChipProps","root","showFileNamesInPreview","Snackbar","autoHideDuration","nodeTypes","special","oval","rectangle","diamond","customEdge","onElementsRemove","onNodeDoubleClick","onDrop","preventDefault","reactFlowBounds","getBoundingClientRect","getData","project","clientX","clientY","onDragOver","dropEffect","onNodeDragStop","connectionLineType","onPaneContextMenu","onLoad","fitView","snapToGrid","paneMoveable","nodeStrokeColor","n","nodeColor","nodeBorderRadius","gap","Drawer","anchor","InputProps","endAdornment","InputAdornment","rows","multiline","marginRigh","size","newField","marginBottom","Chip","handleChangeCollapsable","handleChangeAnimated","App","isCanvasVisible","setIsCanvasVisible","session","jwt","sign","userId","uuidv4","expiresIn","algorithm","updateSessionDb","sm","md","lg","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8bb3674.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  FormLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TreeView from \"devextreme-react/tree-view\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport PermDataSettingIcon from \"@material-ui/icons/PermDataSetting\";\r\n// https://flowchart-backend.herokuapp.com\r\n// http://127.0.0.1:8000\r\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\r\n\r\nconst SideBar = ({\r\n  currentFile,\r\n  setCurrentFile,\r\n  setCanvasVisibility,\r\n  setEdgeType,\r\n  setSelectedColor,\r\n  isEditMode,\r\n  setOrientation,\r\n  orientation,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [folder, setFolder] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [openNewFolder, setOpenNewFolder] = React.useState(false);\r\n  const [openNewTag, setOpenNewTag] = useState(false);\r\n  const [error, setError] = useState({ value: false, msg: \"\" });\r\n  const [names, setNames] = useState([]);\r\n  const [tagError, setTagError] = useState({});\r\n  const [tag, setTag] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [openNewFile, setOpenNewFile] = React.useState(false);\r\n  const [openEditTag, setOpenEditTag] = useState(false);\r\n  const [currentEditTag, setCurrentEditTag] = useState(\"\");\r\n  const [editTag, setEditTag] = useState(\"\");\r\n  const [editTagError, setEditTagError] = useState({});\r\n  const [activeFolder, setActiveFolder] = useState(false);\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(`${apiUrl}/api/get-user-info`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newTags;\r\n        if (Array.isArray(json.tags)) {\r\n          newTags = json.tags;\r\n        } else {\r\n          if (JSON.parse(json.tags).hasOwnProperty(\"tags\")) {\r\n            newTags = JSON.parse(json.tags).tags;\r\n          } else {\r\n            newTags = JSON.parse(json.tags);\r\n          }\r\n        }\r\n        let newNames;\r\n        if (Array.isArray(json.names)) {\r\n          newNames = json.names;\r\n        } else {\r\n          if (Array.isArray(JSON.parse(json.names))) {\r\n            newNames = JSON.parse(json.names);\r\n          } else {\r\n            newNames = JSON.parse(json.names).names;\r\n          }\r\n        }\r\n\r\n        let newFiles;\r\n        if (Array.isArray(json.files)) {\r\n          newFiles = json.files;\r\n        } else {\r\n          if (Array.isArray(JSON.parse(json.files))) {\r\n            newFiles = JSON.parse(json.files);\r\n          } else {\r\n            newFiles = JSON.parse(json.files).files;\r\n          }\r\n        }\r\n\r\n        console.log(newTags);\r\n        console.log(newNames);\r\n        console.log(JSON.parse(json.files));\r\n        setTags(newTags);\r\n        setNames(newNames);\r\n        setFiles(JSON.parse(json.files));\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log(newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeOrientation = (event) => {\r\n    setOrientation(event.target.value);\r\n  };\r\n\r\n  const newFolder = () => {\r\n    setOpenNewFolder(true);\r\n  };\r\n\r\n  const newFile = () => {\r\n    setOpenNewFile(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFolder(\"\");\r\n    setFile(\"\");\r\n    setOpenNewTag(false);\r\n    setOpenEditTag(false);\r\n    setCurrentEditTag(false);\r\n    setEditTag(false);\r\n    setEditTagError(false);\r\n    setError({});\r\n    openNewFolder ? setOpenNewFolder(false) : setOpenNewFile(false);\r\n  };\r\n\r\n  const handleChangeFolder = (event) => {\r\n    setFolder(event.target.value);\r\n  };\r\n\r\n  const handleChangeFile = (event) => {\r\n    setFile(event.target.value);\r\n  };\r\n\r\n  const updateFilesDb = (newElements) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-files`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        files: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\r\n          json,\r\n          \"ndsojdmsio99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"\r\n        );\r\n        setFiles(JSON.parse(json.files));\r\n      });\r\n  };\r\n\r\n  const updateNamesDb = (newNames) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-names`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        names: newNames,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setNames(json.names));\r\n  };\r\n\r\n  const updateElementsDb = (newElements, isDelete = false) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-elements`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => console.log(json));\r\n  };\r\n\r\n  const updateTagsDb = (newTags) => {\r\n    console.log(\"updating database....\");\r\n    fetch(`${apiUrl}/api/update-tags`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        tags: newTags,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(JSON.parse(json.tags));\r\n        setTags(JSON.parse(json.tags));\r\n      });\r\n  };\r\n\r\n  const submitFolder = () => {\r\n    if (folder.length === 0) {\r\n      setError({ value: true, msg: \"Folder name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(folder)) {\r\n        setError({ value: true, msg: \"Folder must be unique.\" });\r\n      } else {\r\n        const newFiles = [...files];\r\n        newFiles.push({ id: folder, text: folder, expanded: true });\r\n        setFiles(newFiles);\r\n        updateFilesDb(newFiles);\r\n        localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n        const newNames = names.length === 0 ? [] : [...names];\r\n        newNames.push(folder);\r\n        console.log(folder);\r\n        setNames(newNames);\r\n        updateNamesDb(newNames);\r\n        localStorage.setItem(\"names\", JSON.stringify(newNames));\r\n        setError({});\r\n        setOpenNewFolder(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitFile = () => {\r\n    if (file.length === 0) {\r\n      setError({ value: true, msg: \"File name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(file)) {\r\n        setError({ value: true, msg: \"File name must be unique.\" });\r\n      } else {\r\n        const newFiles = [...files];\r\n        if (newFiles[0].hasOwnProperty(\"parentId\")) {\r\n          setError({\r\n            value: true,\r\n            msg: \"You must have folder to create a file.\",\r\n          });\r\n        } else {\r\n          newFiles.push({\r\n            id: file,\r\n            text: file,\r\n            parentId: currentFile.id,\r\n            elements: [],\r\n          });\r\n          setFiles(newFiles);\r\n          updateFilesDb(newFiles);\r\n          const newNames = names.length === 0 ? [] : [...names];\r\n          newNames.push(file);\r\n          setNames(newNames);\r\n          updateNamesDb(newNames);\r\n          setError({});\r\n          setOpenNewFile(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    const newFiles = [...files];\r\n    const index = files.findIndex((element) => element === currentFile);\r\n    newFiles.splice(index, 1);\r\n    const newNames = [...names];\r\n    const namesIndex = names.indexOf(currentFile.id);\r\n    newNames.splice(namesIndex, 1);\r\n    setNames(newNames);\r\n    updateNamesDb(newNames);\r\n    updateFilesDb(newFiles);\r\n    localStorage.removeItem(\"current\");\r\n    const newElements = currentFile.elements.filter((data) => {\r\n      return currentFile.id !== data.node;\r\n    });\r\n    setCurrentFile({});\r\n    updateElementsDb(newElements, true);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = () => {\r\n    if (tag.length === 0) {\r\n      setTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(tag)) {\r\n        setTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        console.log(tags);\r\n        console.log(tag);\r\n        const newTags = [...tags];\r\n        newTags.push(tag);\r\n        setTags((prevTags) => [...prevTags].concat([tag]));\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setTagError({});\r\n        setOpenNewTag(false);\r\n        console.log(tags);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitEditTag = (originalTag) => {\r\n    if (editTag.length === 0) {\r\n      setEditTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(editTag)) {\r\n        setEditTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        const newTags = [...tags];\r\n        const index = tags.indexOf(originalTag);\r\n        newTags[index] = editTag;\r\n        setTags(newTags);\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setEditTagError({});\r\n        setOpenEditTag(false);\r\n        setCurrentEditTag(false);\r\n        setEditTag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteTag = (tag) => {\r\n    const newTags = [...tags];\r\n    const index = tags.findIndex((element) => element === tag);\r\n    newTags.splice(index, 1);\r\n    setTags(newTags);\r\n    updateTagsDb(newTags);\r\n    localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n  };\r\n\r\n  const handleChangeEditTag = (event) => {\r\n    setEditTag(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvasVisibilityHandler = (nodes) => {\r\n      const files = nodes.filter(\r\n        (node) =>\r\n          node.hasOwnProperty(\"parentId\") || node.hasOwnProperty(\"elements\")\r\n      );\r\n      if (files.length && !activeFolder) setCanvasVisibility(true);\r\n      else setCanvasVisibility(false);\r\n    };\r\n\r\n    canvasVisibilityHandler(files);\r\n  }, [files, setCanvasVisibility]);\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setSelectedColor(color.rgb);\r\n    setColor(color.rgb);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    setEdgeType(event.target.value);\r\n  };\r\n\r\n  const a11yProps = (index) => {\r\n    return {\r\n      id: `scrollable-force-tab-${index}`,\r\n      \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"primary\"\r\n        tabItemContainerStyle={{ width: \"100%\" }}\r\n        textColor=\"primary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab icon={<StorageIcon />} label=\"Files\" />\r\n        <Tab icon={<PermDataSettingIcon />} label=\"Shapes\" />\r\n      </Tabs>\r\n      {value === 0 ? (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"70vh\",\r\n            textAlign: \"center\",\r\n            borderRight: \"solid #D5D5D5 1px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom style={{ padding: 20 }}>\r\n            Folder Structures\r\n          </Typography>\r\n          <Grid container spacing={0} justifyContent=\"center\">\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Add Folder\"\r\n                onClick={newFolder}\r\n                color=\"primary\"\r\n              >\r\n                <CreateNewFolderIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Dialog\r\n              open={openNewFolder}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">\r\n                Create New Folder\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  error={error.value ? true : false}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"folder\"\r\n                  label=\"Folder Name\"\r\n                  helperText={error.value && error.msg}\r\n                  onChange={handleChangeFolder}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={submitFolder} color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Add File\"\r\n                color=\"primary\"\r\n                onClick={newFile}\r\n                disabled={currentFile.hasOwnProperty(\"expanded\") ? false : true}\r\n              >\r\n                <NoteAddIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Dialog\r\n              open={openNewFile}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Create New File</DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  error={error.value ? true : false}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"file\"\r\n                  label=\"File Name\"\r\n                  onChange={handleChangeFile}\r\n                  helperText={error.value && error.msg}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={submitFile} color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={4}>\r\n              <IconButton\r\n                aria-label=\"Delete\"\r\n                color=\"secondary\"\r\n                onClick={deleteItem}\r\n                disabled={Object.keys(currentFile).length === 0 ? true : false}\r\n              >\r\n                <DeleteIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            {files.length === 0 ? (\r\n              <div></div>\r\n            ) : (\r\n              <TreeView\r\n                searchEnabled={true}\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  paddingLeft: 15,\r\n                  paddingTop: 15,\r\n                  paddingRight: 15,\r\n                  fontSize: 18,\r\n                  fontWeight: \"normal\",\r\n                }}\r\n                dataStructure=\"plain\"\r\n                id=\"simple-treeview\"\r\n                items={files}\r\n                width=\"100%\"\r\n                onItemClick={(e) => {\r\n                  console.log(\"ddd\", e.itemData.hasOwnProperty(\"expanded\"));\r\n                  if (!e.itemData.hasOwnProperty(\"expanded\")) {\r\n                    localStorage.setItem(\"current\", JSON.stringify(e.itemData));\r\n                    setActiveFolder(false);\r\n                    setCanvasVisibility(true);\r\n                  } else {\r\n                    setActiveFolder(true);\r\n                    setCanvasVisibility(false);\r\n                  }\r\n                  setCurrentFile(e.itemData);\r\n                }}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n          {isEditMode && (\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              style={{ marginTop: 30 }}\r\n              spacing={1}\r\n            >\r\n              <Grid container direction=\"row\" spacing={1}>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    onDragStart={(event) => onDragStart(event, \"special\")}\r\n                    draggable\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        background: \"#ADD8E6\",\r\n                        color: \"black\",\r\n                        padding: 10,\r\n                        border: \"1px solid black\",\r\n                        width: 50,\r\n                        height: 5,\r\n                        borderRadius: \"10px 10px 0px 0px\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: 20,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                    <div\r\n                      style={{\r\n                        background: \"white\",\r\n                        border: \"1px solid black\",\r\n                        color: \"black\",\r\n                        padding: 10,\r\n                        width: 50,\r\n                        height: 15,\r\n                        borderRadius: \"0px 0px 10px 10px\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: 20,\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"60px\",\r\n                      width: \"80px\",\r\n                      borderRadius: \"50px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"oval\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={1}\r\n                style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"50px\",\r\n                      width: \"80px\",\r\n                      borderRadius: \"10px\",\r\n                      cursor: \"pointer\",\r\n                      marginLeft: 20,\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"rectangle\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid black\",\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                      borderRadius: \"5px\",\r\n                      transform: \"rotate(45deg)\",\r\n                      marginLeft: \"10px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onDragStart={(event) => onDragStart(event, \"diamond\")}\r\n                    draggable\r\n                  ></div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"70vh\",\r\n            textAlign: \"center\",\r\n            borderRight: \"solid #D5D5D5 1px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" gutterBottom style={{ padding: 20 }}>\r\n            Shapes Settings\r\n          </Typography>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n              <Grid item xs={12} direction=\"row\">\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Node Color\r\n                </Typography>\r\n                <div style={styles.swatch} onClick={handleClickColor}>\r\n                  <div style={styles.color} />\r\n                </div>\r\n                {displayColorPicker ? (\r\n                  <div style={styles.popover}>\r\n                    <div style={styles.cover} onClick={handleCloseColor} />\r\n                    <SketchPicker color={color} onChange={handleChangeColor} />\r\n                  </div>\r\n                ) : null}\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n          >\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                EdgeType\r\n              </InputLabel>\r\n              <Select\r\n                style={{ fontSize: 15 }}\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                onChange={handleChangeEdgeType}\r\n                variant=\"outlined\"\r\n                label=\"EdgeType\"\r\n                defaultValue=\"smoothstep\"\r\n                displayEmpty={true}\r\n              >\r\n                <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n                <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          {!isEditMode && (\r\n            <FormControl component=\"fieldset\" style={{ marginTop: 30 }}>\r\n              <FormLabel component=\"legend\">Orientation</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"Orientation\"\r\n                name=\"orientation\"\r\n                value={orientation}\r\n                onChange={handleChangeOrientation}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"vertical\"\r\n                  control={<Radio />}\r\n                  label=\"Vertical\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"horizontal\"\r\n                  control={<Radio />}\r\n                  label=\"Horizontal\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          )}\r\n        </Grid>\r\n      )}\r\n      <Divider orientation=\"horizontal\" />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          height: \"30vh\",\r\n          textAlign: \"center\",\r\n          backgroundColor: \"#F2F2F2\",\r\n          height: \"320px\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom style={{ padding: 10 }}>\r\n          Tags\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setOpenNewTag(true)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          New Tag\r\n        </Button>\r\n        <Dialog\r\n          open={openNewTag}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create New Tag</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              error={tagError.value ? true : false}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"tag\"\r\n              label=\"Tag Name\"\r\n              helperText={tagError.value && tagError.msg}\r\n              onChange={handleChangeTag}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={submitTag} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <List>\r\n          {tags.map((tag) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <LocalOfferIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={tag} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"edit\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setCurrentEditTag(tag);\r\n                    setOpenEditTag(true);\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  color=\"primary\"\r\n                  onClick={() => deleteTag(tag)}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n          <Dialog\r\n            open={openEditTag}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Edit Tag</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                error={editTagError.value ? true : false}\r\n                autoFocus\r\n                type=\"text\"\r\n                margin=\"dense\"\r\n                id=\"tag\"\r\n                defaultValue={currentEditTag}\r\n                label=\"Tag Name\"\r\n                helperText={editTagError.value && editTagError.msg}\r\n                onChange={(e) => handleChangeEditTag(e)}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => submitEditTag(currentEditTag)}\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </List>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { getSmoothStepPath, getBezierPath } from \"react-flow-renderer\";\r\n\r\nexport default function CustomEdge({\r\n  source,\r\n  target,\r\n  id,\r\n  sourceX,\r\n  sourceY,\r\n  targetX,\r\n  targetY,\r\n  sourcePosition,\r\n  targetPosition,\r\n  animated,\r\n  style = {},\r\n  data,\r\n}) {\r\n  const edgePath =\r\n    data.type === \"smoothstep\"\r\n      ? getSmoothStepPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        })\r\n      : getBezierPath({\r\n          sourceX,\r\n          sourceY,\r\n          sourcePosition,\r\n          targetX,\r\n          targetY,\r\n          targetPosition,\r\n        });\r\n  return (\r\n    <>\r\n      {data.hasArrow && (\r\n        <defs>\r\n          <marker\r\n            className=\"react-flow__arrowhead\"\r\n            id={`marker-${id}`}\r\n            markerWidth=\"25\"\r\n            markerHeight=\"30\"\r\n            viewBox=\"-10 -10 20 20\"\r\n            orient=\"auto\"\r\n            refX=\"0\"\r\n            refY=\"0\"\r\n          >\r\n            <polyline\r\n              stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"1\"\r\n              fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n              points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n            />\r\n          </marker>\r\n          <marker\r\n            className=\"react-flow__arrowhead\"\r\n            id={`marker-start-${id}`}\r\n            markerWidth=\"25\"\r\n            markerHeight=\"30\"\r\n            viewBox=\"-10 -10 20 20\"\r\n            orient=\"auto\"\r\n            refX=\"0\"\r\n            refY=\"0\"\r\n          >\r\n            <polyline\r\n              // transform=\"translate(90)\"\r\n              style={{ transform: \"rotate(180deg)\" }}\r\n              stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"1\"\r\n              fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n              points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n            />\r\n          </marker>\r\n        </defs>\r\n      )}\r\n      <path\r\n        id={id}\r\n        d={edgePath}\r\n        stroke={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n        fill={`rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`}\r\n        className=\"react-flow__edge-path\"\r\n        style={{\r\n          ...style,\r\n          stroke: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        }}\r\n        markerEnd={`url(#marker-${id})`}\r\n        markerStart={`url(#marker-start-${id})`}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Drawer,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  Badge,\r\n  Snackbar,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Chip,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { DropzoneDialogBase } from \"material-ui-dropzone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Papa from \"papaparse\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  ReactFlowProvider,\r\n  getMarkerEnd,\r\n  getIncomers,\r\n  getOutgoers,\r\n  isNode,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n  getConnectedEdges,\r\n  isEdge,\r\n} from \"react-flow-renderer\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport dagre from \"dagre\";\r\nimport { EditText } from \"react-edit-text\";\r\nimport \"react-edit-text/dist/index.css\";\r\nimport CustomEdge from \"./CustomEdge\";\r\nconst markerEnd = getMarkerEnd(\"arrowclosed\", \"my-marker\");\r\nconsole.log(markerEnd);\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nlet realOrientation;\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\n// https://flowchart-backend.herokuapp.com\r\n// http://127.0.0.1:8000\r\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\n// const nodeDimensions = {\r\n//   special: { width: 50, height: 150 },\r\n//   rectangle: { width: 150, height: 70 },\r\n//   oval: { width: 150, height: 70 },\r\n//   diamond: { width: 100, height: 100 },\r\n// };\r\nconst nodeWidth = 170;\r\nconst nodeHeight = 180;\r\nconst getLayoutedElements = (elements, direction = \"TB\") => {\r\n  const isHorizontal = direction === \"LR\";\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, {\r\n        width: nodeWidth,\r\n        height: nodeHeight,\r\n      });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n  console.log(elements, \"danhjsubkghbjlncsbugk hjbnudcysbkhjnonubskdgh m\");\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    previewChip: {\r\n      minWidth: 160,\r\n      maxWidth: 210,\r\n    },\r\n  })\r\n);\r\n\r\nconst SpecialNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 10,\r\n          borderRadius: \"10px 10px 0px 0px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"5%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n\r\n      {/* <Handle\r\n          type=\"source\"\r\n          position={realOrientation === \"horizontal\" ? \"left\" : \"top\"}\r\n          style={{ background: \"black\" }}\r\n          isConnectable={true}\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          position={realOrientation === \"horizontal\" ? \"bottom\" : \"right\"}\r\n          style={{ background: \"black\" }}\r\n          isConnectable={true}\r\n        /> */}\r\n\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"1\"\r\n        position=\"left\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"2\"\r\n        position=\"top\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        position=\"right\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        position=\"bottom\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n      />\r\n      {/* <div>\r\n          {data.title.length >= 21\r\n            ? data.title.slice(0, 20) + \"...\"\r\n            : data.title}\r\n        </div> */}\r\n\r\n      {/* <div\r\n          style={{\r\n            width: \"93%\",\r\n            // textAlign: \"center\",\r\n            overflowWrap: \"break-word\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.title}\r\n          </Typography>\r\n        </div> */}\r\n      <div\r\n        style={{\r\n          width: \"93%\",\r\n          width: 150,\r\n          background: \"#f0f0f0\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          minHeight: 40,\r\n          borderRadius: \"0px 0px 10px 10px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {/* <div>\r\n          <Typography variant=\"caption\">\r\n            {data.description.length >= 23\r\n              ? data.description.slice(0, 22) + \"...\"\r\n              : data.description}\r\n          </Typography>\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            width: \"93%\",\r\n            minHeight: \"40px\",\r\n            // overflowWrap: \"break-word\",\r\n            textAlign: \"center\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            spacing={1}\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            {/* <div style={{ paddingLeft: 35, paddingRight: 10 }}>key</div> */}\r\n            <div style={{ textAlign: \"center\" }}>\r\n              {data.description.map((pair) => {\r\n                return (\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    gutterBottom\r\n                    style={{\r\n                      paddingRight: 10,\r\n                    }}\r\n                  >\r\n                    {pair.key}\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </div>\r\n            <Divider\r\n              orientation=\"vertical\"\r\n              style={{ minHeight: 50, textAlign: \"center\" }}\r\n              flexItem\r\n            />\r\n            <div style={{ textAlign: \"center\" }}>\r\n              {data.description.map((pair) => {\r\n                return (\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    gutterBottom\r\n                    style={{\r\n                      paddingLeft: 10,\r\n                    }}\r\n                  >\r\n                    {pair.value}\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </div>\r\n            {/* <div style={{ paddingLeft: 10 }}>Value</div> */}\r\n          </Grid>\r\n          {/* <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.description}\r\n          </Typography> */}\r\n        </div>\r\n      </div>\r\n      {/* <Handle\r\n        type=\"target\"\r\n        position={realOrientation === \"horizontal\" ? \"right\" : \"bottom\"}\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position={realOrientation === \"horizontal\" ? \"top\" : \"left\"}\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OvalNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 70,\r\n          textAlign: \"center\",\r\n          borderRadius: \"50px\",\r\n        }}\r\n      >\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"1\"\r\n        position=\"left\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"2\"\r\n        position=\"right\"\r\n        isConnectable={true}\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        position=\"top\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        position=\"bottom\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst RectangleNodeComponent = ({ data }) => {\r\n  let myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          background: \"#f0f0f0\",\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 70,\r\n          textAlign: \"center\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"1\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        position=\"left\"\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"2\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"right\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id=\"3\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"top\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id=\"4\"\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          marginRight: \"5%\",\r\n          border: \"0px\",\r\n          padding: \"23%\",\r\n          zIndex: 1,\r\n        }}\r\n        onMouseOver={(e) =>\r\n          myRef.current && (myRef.current.className = \"rectangle\")\r\n        }\r\n        onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n        position=\"bottom\"\r\n        // style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n        connectionMode=\"loose\"\r\n      />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst DiamondNodeComponent = ({ data }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const myRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div\r\n        ref={myRef}\r\n        style={{\r\n          width: \"80px\",\r\n          position: \"absolute\",\r\n          height: \"80px\",\r\n          marginTop: \"10%\",\r\n          marginLeft: \"10%\",\r\n          zIndex: \"0\",\r\n          backgroundColor: \"#f0f0f0\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          transform: \"rotate(-45deg)\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {/* ADDED BY ME*/}\r\n        <div></div>\r\n        <Typography\r\n          className=\"Typography\"\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          align=\"center\"\r\n          style={{ marginTop: \"30%\", transform: \"rotate(45deg)\" }}\r\n        >\r\n          {data.title}\r\n          {/* <span class=\"rotate\">{data.title}</span> */}\r\n        </Typography>\r\n      </div>\r\n      <div style={{ backgroundColor: \"transparent\", marginTop: \"-5%\" }}>\r\n        <Handle\r\n          type=\"source\"\r\n          id=\"1\"\r\n          position=\"left\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            marginRight: \"5%\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          id=\"2\"\r\n          position=\"right\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"source\"\r\n          id=\"3\"\r\n          position=\"top\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <Handle\r\n          type=\"target\"\r\n          id=\"4\"\r\n          position=\"bottom\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"0px\",\r\n            padding: \"23%\",\r\n            zIndex: 1,\r\n          }}\r\n          onMouseOver={(e) =>\r\n            myRef.current && (myRef.current.className = \"my-container\")\r\n          }\r\n          onMouseLeave={(e) => myRef.current && (myRef.current.className = \"\")}\r\n          isConnectable={true}\r\n          connectionMode=\"loose\"\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            color: \"black\",\r\n            // border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n            // border: `2px solid white`,\r\n            width: 100,\r\n            minHeight: 100,\r\n            textAlign: \"center\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{ transform: \"rotate(-45deg)\", marginTop: \"10%\", zIndex: 0 }}\r\n          >\r\n            {/* <div>\r\n            {data.title.length >= 16\r\n              ? data.title.slice(0, 15) + \"...\"\r\n              : data.title}\r\n          </div> */}\r\n            <div\r\n              style={{\r\n                width: \"93%\",\r\n                minHeight: \"40px\",\r\n                // textAlign: \"center\",\r\n                overflowWrap: \"break-word\",\r\n                marginLeft: 10,\r\n                marginRight: 300,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Canvas = ({\r\n  currentFile,\r\n  selectedColor,\r\n  edgeType,\r\n  setEditMode,\r\n  isEditMode,\r\n  orientation,\r\n}) => {\r\n  realOrientation = orientation;\r\n  const [elements, setElements] = useState([]);\r\n  const [elementCLicked, setElementClicked] = useState({});\r\n  const [editModeTtitle, setEditModeTitle] = useState(false);\r\n  const [editModeDescription, setEditModeDescription] = useState(false);\r\n  const [editModeDesc, setEditModeDesc] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpload, setOpenUpload] = React.useState(false);\r\n  const [openNewNode, setOpenNewNode] = useState(false);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [displayColorPickerArrow, setDisplayColorPickerArrow] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [colorArrow, setColorArrow] = useState({\r\n    r: \"187\",\r\n    g: \"187\",\r\n    b: \"192\",\r\n    a: \"100\",\r\n  });\r\n  const [toggledElements, setToggledElements] = useState([]);\r\n  const [targetElements, setTargetElements] = useState({});\r\n  const [isFirstTime, setFirstTime] = useState(true);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n  const [renderAlert, setRenderAlert] = useState({ value: false, msg: \"\" });\r\n  const [tags, setTags] = useState([]);\r\n  const [csv, setCsv] = useState(false);\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [openNewField, setOpenNewField] = useState(false);\r\n  const [field, setField] = useState({ key: \"\", value: \"\" });\r\n  console.log();\r\n  const [hasArrowEdge, setArrowEdge] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.hasArrowEdge\r\n      : false\r\n  );\r\n  const [hasAnimatedEdge, setAnimatedEdge] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.hasAnimatedEdge\r\n      : false\r\n  );\r\n  const [isCollapsable, setCollapsable] = useState(\r\n    elementCLicked.hasOwnProperty(\"data\")\r\n      ? elementCLicked.data.isCollapsable\r\n      : false\r\n  );\r\n\r\n  const onLoad = (reactFlowInstance) => {\r\n    // console.log(\"flow loaded:\", reactFlowInstance);\r\n    // console.log(reactFlowInstance.getElements());\r\n    setReactFlowInstance(reactFlowInstance);\r\n    reactFlowInstance.fitView();\r\n  };\r\n\r\n  const handleCloseField = () => {\r\n    setOpenNewField(false);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    edges.map((edge) => {\r\n      newElements.map((element) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.type = event.target.value;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const updateElementsDb = (newElements, currentFile, isDelete = false) => {\r\n    // console.log(\"updating database....\");\r\n    // console.log(newElements);\r\n    console.log(currentFile);\r\n    fetch(`${apiUrl}/api/update-elements`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.elements);\r\n        setElements(json.elements);\r\n      });\r\n  };\r\n\r\n  const onElementsRemove = () => {\r\n    const update = elements.filter((data) => {\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = update;\r\n    setElements(update);\r\n    updateNode(update);\r\n  };\r\n\r\n  const onConnect = async (params) => {\r\n    //  setElements((els) => addEdge(params, els))\r\n    //  console.log(elements);\r\n    //  updateNode()\r\n    const newParams = { ...params };\r\n    newParams.type = \"customEdge\";\r\n    newParams.data = { hasArrow: false, type: edgeType, color: colorArrow };\r\n    newParams.animated = false;\r\n    console.log(newParams, \"**********8\");\r\n    const edge = await addEdge(newParams, elements);\r\n    await setElements(edge);\r\n  };\r\n\r\n  const onElementClick = async (event, element) => {\r\n    if (isEditMode) {\r\n      setElementClicked(element);\r\n      setCollapsable(element.data.isCollapsable);\r\n      setAnimatedEdge(element.data.hasAnimatedEdge);\r\n      setArrowEdge(element.data.hasArrowEdge);\r\n    } else {\r\n      setElementClicked(element);\r\n    }\r\n  };\r\n\r\n  const getAllOutgoers = (node, elements) => {\r\n    return getOutgoers(node, elements).reduce(\r\n      (memo, outgoer) => [\r\n        ...memo,\r\n        outgoer,\r\n        ...getAllOutgoers(outgoer, elements),\r\n      ],\r\n      []\r\n    );\r\n  };\r\n\r\n  const onNodeClick = async (event, element) => {\r\n    if (isEditMode === false) {\r\n      if (element.data.isCollapsable) {\r\n        let newElements = [...elements];\r\n        const children = getOutgoers(element, elements);\r\n        if (children.length > 0) {\r\n          const allOutgoers = getAllOutgoers(element, elements);\r\n          console.log(allOutgoers);\r\n          console.log(children);\r\n          if (children[0].isHidden) {\r\n            children.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = false;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = false;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          } else {\r\n            allOutgoers.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = true;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = true;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          }\r\n          console.log(newElements);\r\n          setElements(newElements);\r\n          // let _elements;\r\n          // if (Object.keys(targetElements).length > 0) {\r\n          //   _elements = JSON.parse(JSON.stringify(toggledElements));\r\n          // } else {\r\n          //   _elements = JSON.parse(JSON.stringify(elements));\r\n          // }\r\n          // if (!targetElements[element.id]) {\r\n          //   const targets = [];\r\n          //   _elements.forEach((elem) => {\r\n          //     if (elem[\"source\"] !== undefined && elem.source === element.id) {\r\n          //       targets.push(elem.target);\r\n          //     }\r\n          //   });\r\n          //   console.log(\"targets\", targets);\r\n          //   console.log(\"elements\", _elements);\r\n          //   let firstLevelChildren;\r\n          //   firstLevelChildren = _elements.filter(\r\n          //     (elem) => elem.source !== element.id\r\n          //   );\r\n          //   // console.log('first-level-children-1', firstLevelChildren);\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.id)\r\n          //   );\r\n          //   // console.log('first-level-children-2', firstLevelChildren);\r\n          //   firstLevelChildren.forEach((elem) => {\r\n          //     if (elem[\"source\"] !== undefined && targets.includes(elem.source)) {\r\n          //       targets.push(elem.target);\r\n          //     }\r\n          //   });\r\n          //   setTargetElements({\r\n          //     [element.id]: targets,\r\n          //   });\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.source)\r\n          //   );\r\n          //   // console.log('first-level-children-3', firstLevelChildren);\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.id)\r\n          //   );\r\n          //   console.log(\"first-level-children-final\", firstLevelChildren);\r\n          //   setToggledElements(firstLevelChildren);\r\n          // } else {\r\n          //   const firstLevelChildren = _elements.filter(\r\n          //     (elem) =>\r\n          //       elem.source === element.id ||\r\n          //       targetElements[element.id].includes(elem.id) ||\r\n          //       targetElements[element.id].includes(elem.source)\r\n          //   );\r\n          //   console.log(\"first-level-children\", firstLevelChildren);\r\n          //   setToggledElements([...toggledElements, ...firstLevelChildren]);\r\n          //   const _targetElements = JSON.parse(JSON.stringify(targetElements));\r\n          //   delete _targetElements[element.id];\r\n          //   setTargetElements(_targetElements);\r\n          // }\r\n          // setElementClicked(element);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${apiUrl}/api/get-user-info`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newElements = [];\r\n        const jsonElements = JSON.parse(json.elements);\r\n        if (jsonElements.length === 0) {\r\n          newElements = [];\r\n        } else {\r\n          if (jsonElements.hasOwnProperty(currentFile.id)) {\r\n            newElements = jsonElements[currentFile.id];\r\n          } else {\r\n            newElements = [];\r\n          }\r\n        }\r\n        console.log(newElements);\r\n        setElements(newElements);\r\n        setTags(JSON.parse(json.tags));\r\n      });\r\n  }, [currentFile]);\r\n\r\n  const onNodeDragStop = (event, node) => {\r\n    const newElements = [...elements];\r\n    console.log(node);\r\n    // console.log(newElements);\r\n    newElements.map((element) => {\r\n      console.log(element);\r\n      if (element.id === node.id) {\r\n        console.log(element);\r\n        element.position = { ...node.position };\r\n      }\r\n    });\r\n    console.log(newElements);\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenNewNode(false);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = async () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        if (!elementCLicked.data.tags.includes(tag)) {\r\n          const newElement = [...elementCLicked.data.tags];\r\n          newElement.push(tag);\r\n          elementCLicked.data.tags = newElement;\r\n        }\r\n      }\r\n    });\r\n    await setElements(newElements);\r\n    updateNode(newElements);\r\n    // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        let str;\r\n        if (event.target.value.length >= 27) {\r\n          str = event.target.value.substring(0, 27);\r\n        } else {\r\n          str = event.target.value;\r\n        }\r\n        element.data[\"title\"] = str;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n\r\n    updateNode(newElements);\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"title\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // updateNode();\r\n  };\r\n\r\n  const handleClickTitle = () => {\r\n    setEditModeTitle(true);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"description\"] = event.target.value;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"description\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    // updateNode();\r\n  };\r\n\r\n  const handleChangeDesc = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"desc\"] = event.target.value;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    console.log(\"new ele\", newElements);\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const update = elements.filter((data) => {\r\n      if (edges.includes(data)) {\r\n        return false;\r\n      }\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    if (currentFile !== null) {\r\n      const newCurrent = { ...currentFile };\r\n      newCurrent.elements = update;\r\n    }\r\n    setElements(update);\r\n    updateElementsDb(update, currentFile);\r\n    setElementClicked({});\r\n  };\r\n\r\n  const handleClickDescription = () => {\r\n    setEditModeDescription(true);\r\n  };\r\n\r\n  const handleClickDesc = () => {\r\n    setEditModeDesc(true);\r\n  };\r\n\r\n  const getNodeId = () => `randomnode_${+new Date() + Math.random()}`;\r\n\r\n  const updateNode = (element = elements) => {\r\n    const newElements = [...element];\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n    updateElementsDb(newElements, currentFile);\r\n  };\r\n  const addNode = (type, position = { x: 100, y: 0 }) => {\r\n    let newElements = elements ? [...elements] : [];\r\n    newElements.push({\r\n      id: getNodeId(),\r\n      node: currentFile.id,\r\n      type: type,\r\n      data: {\r\n        title: \"title\",\r\n        description: type === \"special\" ? [{ key: \"\", value: \"\" }] : null,\r\n        color: selectedColor,\r\n        isCollapsable: true,\r\n        hasAnimatedEdge: false,\r\n        hasArrowEdge: false,\r\n        tags: [],\r\n        desc: \"description\",\r\n      },\r\n      targetPosition: orientation === \"horizontal\" ? \"left\" : \"top\",\r\n      sourcePosition: orientation === \"horizontal\" ? \"right\" : \"bottom\",\r\n      isHidden: false,\r\n      position: position,\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleChangeArrow = async () => {\r\n    const edges = await getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    let elementClickedIndex;\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.hasArrow = hasArrowEdge === true ? null : markerEnd;\r\n          }\r\n        } else {\r\n          if (element.id === elementCLicked.id) {\r\n            elementClickedIndex = index;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    newElements[elementClickedIndex].data.hasArrowEdge =\r\n      !newElements[elementClickedIndex].data.hasArrowEdge;\r\n    setArrowEdge(!hasArrowEdge);\r\n    console.log(newElements[elementClickedIndex].data.hasArrowEdge);\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleClickColorArrow = () => {\r\n    setDisplayColorPickerArrow(!displayColorPickerArrow);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleCloseColorArrow = () => {\r\n    setDisplayColorPickerArrow(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setColor(color.rgb);\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.color = color.rgb;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleChangeColorArrow = (color) => {\r\n    setColorArrow(color.rgb);\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.data.color = color.rgb;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setElements(newElements);\r\n  };\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    addNode(type, position);\r\n  };\r\n\r\n  const getKeyByValue = (object, value) => {\r\n    return Object.keys(object).find((key) => object[key] === value);\r\n  };\r\n  // useEffect(() => {\r\n  //   if (elements.length > 0) {\r\n  //   }\r\n  // }, [elements]);\r\n\r\n  // console.log('target-elements', targetElements);\r\n  // console.log('toggled-elemetns', toggledElements);\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const stylesArrow = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${colorArrow.r}, ${colorArrow.g}, ${colorArrow.b}, ${colorArrow.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleChangeSwitch = () => {\r\n    setFirstTime(true);\r\n    setEditMode(!isEditMode);\r\n  };\r\n\r\n  const handleChangeCollapsable = () => {\r\n    console.log(\"YYYYYYYYYYYYYGUKB\");\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        console.log(!element.data.isCollapsable);\r\n        element.data.isCollapsable = !isCollapsable;\r\n      }\r\n    });\r\n    setCollapsable(!isCollapsable);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const hexToRgb = (hex) => {\r\n    console.log(hex);\r\n    var c;\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      console.log(\"yayyyyyyyyyyyyy\");\r\n      c = hex.substring(1).split(\"\");\r\n      if (c.length == 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n      }\r\n      c = \"0x\" + c.join(\"\");\r\n      return { r: (c >> 16) & 255, g: (c >> 8) & 255, b: c & 255, a: 1 };\r\n    }\r\n    return {\r\n      r: \"193\",\r\n      g: \"230\",\r\n      b: \"255\",\r\n      a: \"100\",\r\n    };\r\n  };\r\n\r\n  const parseDescription = (des) => {\r\n    const lst = des.split(\",\");\r\n    const finalLst = [];\r\n    lst.map((pair) => {\r\n      const newPair = pair.split(\":\");\r\n      finalLst.push({ key: newPair[0], value: newPair[1] });\r\n    });\r\n    return finalLst;\r\n  };\r\n\r\n  const submitField = () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.description.push(field);\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n    setOpenNewField(false);\r\n  };\r\n\r\n  const handleChangeAnimated = () => {\r\n    const edges = getConnectedEdges([elementCLicked], elements);\r\n    const newElements = [...elements];\r\n    let elementClickedIndex;\r\n    edges.map((edge) => {\r\n      newElements.map((element, index) => {\r\n        if (isEdge(element)) {\r\n          if (element.id === edge.id) {\r\n            console.log(element);\r\n            element.animated = !hasAnimatedEdge;\r\n          }\r\n        } else {\r\n          if (element.id === elementCLicked.id) {\r\n            elementClickedIndex = index;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    newElements[elementClickedIndex].data.hasAnimatedEdge =\r\n      !newElements[elementClickedIndex].data.hasAnimatedEdge;\r\n    setAnimatedEdge(!hasAnimatedEdge);\r\n    setElements(newElements);\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const checkTags = (tags2Check) => {\r\n    console.log(tags);\r\n    if (tags2Check.length === 0) {\r\n      return [];\r\n    } else {\r\n      const newTags = tags2Check.split(\",\");\r\n      if (tags.length === 0) {\r\n        return {\r\n          value: true,\r\n          msg: \"One or more of the tags provided does not exist.\",\r\n        };\r\n      }\r\n      newTags.map((tag) => {\r\n        if (!tags.includes(tag)) {\r\n          return {\r\n            value: true,\r\n            msg: \"One or more of the tags provided does not exist.\",\r\n          };\r\n        }\r\n      });\r\n      return newTags;\r\n    }\r\n  };\r\n\r\n  console.log(\"elements\", elements);\r\n\r\n  let filteredElements;\r\n\r\n  if (elements.length === 0) {\r\n    filteredElements = [];\r\n  } else {\r\n    console.log(elements, \"***********************88\");\r\n    filteredElements = elements.filter((data) => {\r\n      return data.node === currentFile.id || data.source;\r\n    });\r\n    filteredElements.sort((a, b) => {\r\n      if (a.hasOwnProperty(\"data\") && b.hasOwnProperty(\"data\")) {\r\n        return parseInt(a.id.slice(11, 24)) - parseInt(b.id.slice(11, 24));\r\n      }\r\n    });\r\n  }\r\n  if (!isEditMode) {\r\n    filteredElements = getLayoutedElements(\r\n      filteredElements,\r\n      orientation === \"vertical\" ? \"TB\" : \"LR\"\r\n    );\r\n  }\r\n  console.log(filteredElements);\r\n  console.log(elements);\r\n  const classes = useStyles();\r\n\r\n  if (currentFile === null) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Grid container direction=\"row\" spacing={1} style={{ width: \"80%\" }}>\r\n          <Grid item xs={2} style={{ textAlign: \"start\" }}>\r\n            {isEditMode && (\r\n              <>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  startIcon={<Add />}\r\n                  style={{\r\n                    textAlign: \"start\",\r\n                    marginTop: 20,\r\n                  }}\r\n                  onClick={() => setOpenNewNode(true)}\r\n                >\r\n                  New Node\r\n                </Button>\r\n                <Dialog\r\n                  open={openNewNode}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                  // style={{ overflow: \"hidden\" }}\r\n                >\r\n                  <DialogTitle\r\n                    id=\"form-dialog-title\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    Select a Shape\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={1}>\r\n                      <Grid container direction=\"row\" spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            onClick={() => {\r\n                              addNode(\"special\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                background: \"#ADD8E6\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                border: \"1px solid black\",\r\n                                width: 100,\r\n                                height: 10,\r\n                                borderRadius: \"10px 10px 0px 0px\",\r\n                                textAlign: \"center\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                            <div\r\n                              style={{\r\n                                background: \"white\",\r\n                                border: \"1px solid black\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                width: 100,\r\n                                height: 40,\r\n                                borderRadius: \"0px 0px 10px 10px\",\r\n                                textAlign: \"center\",\r\n                                marginRight: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"90px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"50px\",\r\n                              marginLeft: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"oval\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        spacing={1}\r\n                        style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"rectangle\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"80px\",\r\n                              borderRadius: \"5px\",\r\n                              transform: \"rotate(45deg)\",\r\n                              marginLeft: \"30px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"diamond\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            {/* <Grid container direction=\"row\"> */}\r\n            <Typography variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              {`Project: ${currentFile.parentId}`}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {`Sub Process: ${currentFile.text}`}\r\n            </Typography>\r\n            {/* </Grid> */}\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\">\r\n              <Grid\r\n                component=\"label\"\r\n                container\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n                style={{ paddingTop: 20, paddingLeft: 90 }}\r\n              >\r\n                <Grid item>View</Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={isEditMode}\r\n                    onChange={handleChangeSwitch}\r\n                    name=\"checked\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>Edit</Grid>\r\n                {isEditMode && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: 60 }}\r\n                    onClick={() => {\r\n                      // console.log(\r\n                      //   elements,\r\n                      //   \"t8934ufjhn888ewhyobfo8ulh74uilw748ofulufo47fuligo7t357grlgt57grsg7rsty7osrlgwyot7rswy7hsgywo7hrlgwy7oglyo4rhgyotrglyo4rgyot7r\"\r\n                      // );\r\n                      updateNode([...elements]);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: isEditMode ? 10 : 30 }}\r\n                  startIcon={<CloudUploadIcon />}\r\n                  onClick={() => {\r\n                    setOpenUpload(true);\r\n                  }}\r\n                >\r\n                  Import CSV\r\n                </Button>\r\n                <DropzoneDialogBase\r\n                  clearOnUnmount={true}\r\n                  filesLimit={1}\r\n                  dialogTitle={\r\n                    <>\r\n                      {console.log(renderAlert)}\r\n                      {renderAlert.value && (\r\n                        <Alert severity=\"error\">{renderAlert.msg}</Alert>\r\n                      )}\r\n                      <span>Upload file</span>\r\n                      <IconButton\r\n                        style={{\r\n                          right: \"12px\",\r\n                          top: \"8px\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                        onClick={() => setOpenUpload(false)}\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </>\r\n                  }\r\n                  acceptedFiles={[\".csv\"]}\r\n                  fileObjects={fileObjects}\r\n                  cancelButtonText={\"cancel\"}\r\n                  showAlerts={[\"error\", \"info\"]}\r\n                  submitButtonText={\"submit\"}\r\n                  maxFileSize={5000000}\r\n                  open={openUpload}\r\n                  onAdd={(newFileObjs) => {\r\n                    console.log(\"onAdd\", newFileObjs);\r\n                    if (fileObjects.length === 0) {\r\n                      setFileObjects([].concat(fileObjects, newFileObjs));\r\n                    }\r\n                  }}\r\n                  onDelete={(deleteFileObj) => {\r\n                    const newFilesObjects = [...fileObjects].filter(\r\n                      (item) => item !== deleteFileObj\r\n                    );\r\n                    setFileObjects(newFilesObjects);\r\n                    console.log(\"onDelete\", deleteFileObj);\r\n                  }}\r\n                  onClose={() => setOpenUpload(false)}\r\n                  onSave={() => {\r\n                    console.log(fileObjects[0]);\r\n                    Papa.parse(fileObjects[0].file, {\r\n                      complete: function (results) {\r\n                        let data = results.data;\r\n                        let jsonArr = [];\r\n                        const ids = {};\r\n                        const children = {};\r\n                        const animateds = [];\r\n                        const edgeTypes = {};\r\n                        const arrows = [];\r\n                        const description = {};\r\n                        let counter = 0;\r\n                        data = data.slice(1);\r\n                        data.map((element) => {\r\n                          console.log(\"0------0\", element);\r\n                          const checkedTags = checkTags(element[3]);\r\n                          console.log(checkedTags, \"7777777777777777777\");\r\n                          console.log(element[4]);\r\n                          console.log(element[0]);\r\n                          console.log(element[0].includes(\".\"));\r\n                          if (element[0].includes(\".\")) {\r\n                            counter = counter + 1;\r\n                            const lst =\r\n                              description[ids[element[0].split(\".\")[0]]] !==\r\n                              undefined\r\n                                ? [\r\n                                    ...description[\r\n                                      ids[element[0].split(\".\")[0]]\r\n                                    ],\r\n                                  ]\r\n                                : [];\r\n                            lst.push({\r\n                              key: element[1],\r\n                              value: element[2],\r\n                            });\r\n                            description[ids[element[0].split(\".\")[0]]] = [\r\n                              ...lst,\r\n                            ];\r\n                          } else {\r\n                            if (\r\n                              [\r\n                                \"special\",\r\n                                \"oval\",\r\n                                \"rectangle\",\r\n                                \"diamond\",\r\n                              ].includes(element[4].toLowerCase())\r\n                            ) {\r\n                              console.log(\"----\");\r\n                              if (Array.isArray(checkedTags)) {\r\n                                ids[element[0]] = getNodeId();\r\n                                jsonArr.push({\r\n                                  id: ids[element[0]],\r\n                                  node: currentFile.id,\r\n                                  type: element[4],\r\n                                  data: {\r\n                                    title: element[1],\r\n                                    description: null,\r\n                                    color: element[2].startsWith(\"#\")\r\n                                      ? hexToRgb(element[2])\r\n                                      : {\r\n                                          r: \"193\",\r\n                                          g: \"230\",\r\n                                          b: \"255\",\r\n                                          a: \"100\",\r\n                                        },\r\n                                    tags: checkedTags,\r\n                                    isCollapsable:\r\n                                      element[5] === \"TRUE\" ? true : false,\r\n                                  },\r\n                                  isHidden: false,\r\n                                  position: { x: 0, y: 0 },\r\n                                  desc: null,\r\n                                });\r\n                                if (element[7] === \"TRUE\") {\r\n                                  animateds.push(ids[element[0]]);\r\n                                }\r\n                                if (element[8] === \"step\") {\r\n                                  edgeTypes[ids[element[0]]] = \"step\";\r\n                                } else {\r\n                                  edgeTypes[ids[element[0]]] = \"curved\";\r\n                                }\r\n                                if (element[9] === \"TRUE\") {\r\n                                  arrows.push(ids[element[0]]);\r\n                                }\r\n                                console.log(jsonArr);\r\n                                if (element[6].length > 0) {\r\n                                  if (element[6].includes(\",\")) {\r\n                                    const csvChildren = element[6].split(\",\");\r\n                                    children[element[0]] = csvChildren;\r\n                                  }\r\n                                }\r\n                              } else {\r\n                                console.log(checkedTags);\r\n                                // setRenderAlert(checkedTags);\r\n                                setRenderAlert({\r\n                                  value: true,\r\n                                  msg: \"One or more of the tags provided does not exist.\",\r\n                                });\r\n                              }\r\n                            } else {\r\n                              console.log(\"test\");\r\n                              setRenderAlert({\r\n                                value: true,\r\n                                msg: \"A type of shape in the file does not exist.\",\r\n                              });\r\n                            }\r\n                          }\r\n                        });\r\n                        console.log(jsonArr);\r\n                        console.log(description);\r\n                        jsonArr.map((element) => {\r\n                          element.data.description = description[element.id];\r\n                        });\r\n                        console.log(\"Finished:\", results.data);\r\n                        console.log(\"onSave\", fileObjects);\r\n                        console.log(jsonArr.length);\r\n                        if (jsonArr.length === data.length - counter) {\r\n                          console.log(ids);\r\n                          console.log(children);\r\n                          for (var key in children) {\r\n                            if (children.hasOwnProperty(key)) {\r\n                              if (Array.isArray(children[key])) {\r\n                                children[key].map((child) => {\r\n                                  const edge = addEdge(\r\n                                    {\r\n                                      animated: animateds.includes(ids[key])\r\n                                        ? true\r\n                                        : false,\r\n                                      type: \"customEdge\",\r\n                                      data: {\r\n                                        type: edgeTypes[ids[key]],\r\n                                        hasArrow:\r\n                                          arrows.includes(ids[key]) === true\r\n                                            ? true\r\n                                            : false,\r\n                                        color: colorArrow,\r\n                                      },\r\n                                      source: ids[key],\r\n                                      target: ids[child],\r\n                                    },\r\n                                    jsonArr\r\n                                  );\r\n                                  console.log(edge);\r\n                                  jsonArr = edge;\r\n                                });\r\n                              } else {\r\n                                const edge = addEdge(\r\n                                  {\r\n                                    animated: animateds.includes(ids[key])\r\n                                      ? true\r\n                                      : false,\r\n                                    type: \"customEdge\",\r\n                                    data: {\r\n                                      type: edgeTypes[ids[key]],\r\n                                      hasArrow:\r\n                                        arrows.includes(ids[key]) === true\r\n                                          ? true\r\n                                          : false,\r\n                                      color: colorArrow,\r\n                                    },\r\n                                    source: ids[key],\r\n                                    target: ids[children[key]],\r\n                                  },\r\n                                  jsonArr\r\n                                );\r\n                                console.log(edge);\r\n                                jsonArr = edge;\r\n                              }\r\n                            }\r\n                          }\r\n                          const layoutedElements = getLayoutedElements(jsonArr);\r\n                          setElements(layoutedElements);\r\n                          updateNode(layoutedElements);\r\n                          console.log(jsonArr);\r\n                          setCsv(true);\r\n                          setOpenUpload(false);\r\n                        }\r\n                      },\r\n                    });\r\n                  }}\r\n                  showPreviewsInDropzone={false}\r\n                  useChipsForPreview\r\n                  previewGridProps={{\r\n                    container: { spacing: 1, direction: \"row\" },\r\n                  }}\r\n                  previewChipProps={{ classes: { root: classes.previewChip } }}\r\n                  showFileNamesInPreview={true}\r\n                />\r\n                <Snackbar\r\n                  open={renderAlert.value}\r\n                  autoHideDuration={5000}\r\n                  onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                >\r\n                  <Alert\r\n                    onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                    severity=\"error\"\r\n                  >\r\n                    {renderAlert.msg}\r\n                  </Alert>\r\n                </Snackbar>\r\n              </Grid>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider orientation=\"horizontal\" />\r\n        <ReactFlowProvider>\r\n          <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n            <ReactFlow\r\n              nodeTypes={{\r\n                special: SpecialNodeComponent,\r\n                oval: OvalNodeComponent,\r\n                rectangle: RectangleNodeComponent,\r\n                diamond: DiamondNodeComponent,\r\n              }}\r\n              edgeTypes={{\r\n                customEdge: CustomEdge,\r\n              }}\r\n              elements={\r\n                Object.keys(targetElements).length !== 0\r\n                  ? toggledElements\r\n                  : filteredElements\r\n              }\r\n              // elements={filteredElements}\r\n              onElementsRemove={onElementsRemove}\r\n              onNodeDoubleClick={onElementClick}\r\n              onElementClick={onNodeClick}\r\n              onDrop={onDrop}\r\n              onDragOver={onDragOver}\r\n              onNodeDragStop={onNodeDragStop}\r\n              connectionLineType={edgeType}\r\n              onPaneContextMenu={() => setOpenNewNode(true)}\r\n              onConnect={onConnect}\r\n              onLoad={onLoad}\r\n              snapToGrid={false}\r\n              // snapGrid={[15, 15]}\r\n              paneMoveable={true}\r\n              style={{ height: \"90vh\", width: isEditMode ? \"84%\" : \"95%\" }}\r\n            >\r\n              <MiniMap\r\n                nodeStrokeColor={(n) => {\r\n                  if (n.style?.background) return n.style.background;\r\n                  if (n.type === \"special\") return \"#0041d0\";\r\n                  if (n.type === \"oval\") return \"#008000\";\r\n                  if (n.type === \"rectangle\") return \"#8A2BE2\";\r\n                  if (n.type === \"diamond\") return \"#00008b\";\r\n                  if (n.type === \"output\") return \"#ff0072\";\r\n                  if (n.type === \"default\") return \"#1a192b\";\r\n\r\n                  return \"#eee\";\r\n                }}\r\n                nodeColor={(n) => {\r\n                  if (n.style?.background) return n.style.background;\r\n\r\n                  return \"#fff\";\r\n                }}\r\n                nodeBorderRadius={2}\r\n              />\r\n              <Controls />\r\n              <Background color=\"#aaa\" gap={16} />\r\n            </ReactFlow>\r\n          </div>\r\n        </ReactFlowProvider>\r\n        <svg width=\"0\" height=\"0\">\r\n          <defs>\r\n            <marker\r\n              className=\"react-flow__arrowhead\"\r\n              id=\"my-marker\"\r\n              markerWidth=\"25\"\r\n              markerHeight=\"25\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              orient=\"auto\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n            >\r\n              <polyline\r\n                stroke=\"#BBBBC0\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"1\"\r\n                fill=\"#BBBBC0\"\r\n                points=\"-5,-4 0,0 -5,4 -5,-4\"\r\n              />\r\n            </marker>\r\n          </defs>\r\n        </svg>\r\n        {/* <div /> */}\r\n        {isEditMode ? (\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ textAlign: \"center\", width: 250, overflow: \"hidden\" }}\r\n            >\r\n              {Object.keys(elementCLicked).length === 0 ? (\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  gutterBottom\r\n                  style={{ paddingTop: 380, paddingLeft: 10, paddingRight: 10 }}\r\n                >\r\n                  Double-click on any item to get a detailed view.\r\n                </Typography>\r\n              ) : (\r\n                <div>\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Title\r\n                  </Typography>\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.title}\r\n                    margin=\"normal\"\r\n                    onChange={handleChangeTitle}\r\n                    disabled={!editModeTtitle}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.title}\r\n                    InputProps={{\r\n                      // classes: {\r\n                      //   disabled: {\r\n                      //     color: \"black\",\r\n                      //     borderBottom: 0,\r\n                      //     \"&:before\": {\r\n                      //       borderBottom: 0,\r\n                      //     },\r\n                      //   },\r\n                      // },\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton onClick={handleClickTitle}>\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Description\r\n                  </Typography>\r\n\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.desc}\r\n                    margin=\"normal\"\r\n                    rows={5}\r\n                    multiline\r\n                    onChange={handleChangeDesc}\r\n                    disabled={!editModeDesc}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.desc}\r\n                    InputProps={{\r\n                      // classes: {\r\n                      //   disabled: {\r\n                      //     color: \"black\",\r\n                      //     borderBottom: 0,\r\n                      //     \"&:before\": {\r\n                      //       borderBottom: 0,\r\n                      //     },\r\n                      //   },\r\n                      // },\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton onClick={handleClickDesc}>\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  {elementCLicked.type === \"special\" && (\r\n                    <>\r\n                      <Typography variant=\"h6\" style={{ marginTop: 20 }}>\r\n                        Add Field\r\n                      </Typography>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        color=\"secondary\"\r\n                        onClick={() => setOpenNewField(true)}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                      <Dialog\r\n                        open={openNewField}\r\n                        onClose={handleCloseField}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                      >\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          Add New Field\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <div style={{ textAlign: \"center\" }}>\r\n                            <TextField\r\n                              style={{ width: \"40%\", marginRigh: 10 }}\r\n                              label=\"Key\"\r\n                              id=\"outlined-size-small\"\r\n                              defaultValue=\"Key\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.key = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              style={{ width: \"40%\", marginLeft: 10 }}\r\n                              label=\"Value\"\r\n                              id=\"outlined-size-normal\"\r\n                              defaultValue=\"Value\"\r\n                              onChange={(event) => {\r\n                                const newField = { ...field };\r\n                                newField.value = event.target.value;\r\n                                setField(newField);\r\n                              }}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                            />\r\n                          </div>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={handleCloseField} color=\"primary\">\r\n                            Cancel\r\n                          </Button>\r\n                          <Button onClick={submitField} color=\"primary\">\r\n                            Add\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </>\r\n                  )}\r\n                  <Divider style={{ marginTop: 10 }} />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon size=\"medium\" />}\r\n                    onClick={() => setOpen(true)}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    Add Tag\r\n                  </Button>\r\n                  <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">Add Tag</DialogTitle>\r\n                    <DialogContent>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={tag}\r\n                        onChange={handleChangeTag}\r\n                        fullWidth\r\n                        displayEmpty\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {localStorage.getItem(\"tags\") !== null &&\r\n                        JSON.parse(localStorage.getItem(\"tags\")).length > 0 ? (\r\n                          JSON.parse(localStorage.getItem(\"tags\")).map(\r\n                            (tag) => {\r\n                              return <MenuItem value={tag}>{tag}</MenuItem>;\r\n                            }\r\n                          )\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Select>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={submitTag} color=\"primary\">\r\n                        Add\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  {elementCLicked.data.tags.length > 0 &&\r\n                    elementCLicked.data.tags.map((tag) => (\r\n                      <Chip\r\n                        label={tag}\r\n                        color=\"secondary\"\r\n                        style={{ marginBottom: 10 }}\r\n                      />\r\n                    ))}\r\n\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={isCollapsable}\r\n                          onClick={() => handleChangeCollapsable()}\r\n                          name=\"checked2\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Collapsable</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          Node Color\r\n                        </Typography>\r\n                        <div style={styles.swatch} onClick={handleClickColor}>\r\n                          <div style={styles.color} />\r\n                        </div>\r\n                        {displayColorPicker ? (\r\n                          <div style={styles.popover}>\r\n                            <div\r\n                              style={styles.cover}\r\n                              onClick={handleCloseColor}\r\n                            />\r\n                            <SketchPicker\r\n                              color={color}\r\n                              onChange={handleChangeColor}\r\n                            />\r\n                          </div>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"start\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n                    >\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                        EdgeType\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ fontSize: 15 }}\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        onChange={handleChangeEdgeType}\r\n                        variant=\"outlined\"\r\n                        label=\"EdgeType\"\r\n                        defaultValue=\"smoothstep\"\r\n                        displayEmpty={true}\r\n                      >\r\n                        <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n                        <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={hasAnimatedEdge}\r\n                          onClick={() => handleChangeAnimated()}\r\n                          name=\"checked3\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Animated</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={hasArrowEdge}\r\n                          onClick={() => handleChangeArrow()}\r\n                          name=\"checked4\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Arrow</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Arrow Color\r\n                      </Typography>\r\n                      <div\r\n                        style={stylesArrow.swatch}\r\n                        onClick={handleClickColorArrow}\r\n                      >\r\n                        <div style={stylesArrow.color} />\r\n                      </div>\r\n                      {displayColorPickerArrow ? (\r\n                        <div style={stylesArrow.popover}>\r\n                          <div\r\n                            style={stylesArrow.cover}\r\n                            onClick={handleCloseColorArrow}\r\n                          />\r\n                          <SketchPicker\r\n                            color={colorArrow}\r\n                            onChange={handleChangeColorArrow}\r\n                          />\r\n                        </div>\r\n                      ) : null}\r\n                    </Grid>\r\n                  </div>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <IconButton\r\n                    style={{ color: \"red\" }}\r\n                    onClick={() => handleDelete()}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Drawer>\r\n        ) : (\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ textAlign: \"center\", width: 250, overflow: \"hidden\" }}\r\n            >\r\n              {Object.keys(elementCLicked).length === 0 ? (\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  gutterBottom\r\n                  style={{ paddingTop: 380, paddingLeft: 10, paddingRight: 10 }}\r\n                >\r\n                  Double-click on any item to get a detailed view.\r\n                </Typography>\r\n              ) : (\r\n                <div>\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Title\r\n                  </Typography>\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.title}\r\n                    margin=\"normal\"\r\n                    onChange={handleChangeTitle}\r\n                    disabled\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.title}\r\n                    InputProps={\r\n                      {\r\n                        // classes: {\r\n                        //   disabled: {\r\n                        //     color: \"black\",\r\n                        //     borderBottom: 0,\r\n                        //     \"&:before\": {\r\n                        //       borderBottom: 0,\r\n                        //     },\r\n                        //   },\r\n                        // },\r\n                      }\r\n                    }\r\n                  />\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Description\r\n                  </Typography>\r\n\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.desc}\r\n                    margin=\"normal\"\r\n                    onChange={handleChangeDesc}\r\n                    disabled\r\n                    rows={5}\r\n                    multiline\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.desc}\r\n                    InputProps={\r\n                      {\r\n                        // classes: {\r\n                        //   disabled: {\r\n                        //     color: \"black\",\r\n                        //     borderBottom: 0,\r\n                        //     \"&:before\": {\r\n                        //       borderBottom: 0,\r\n                        //     },\r\n                        //   },\r\n                        // },\r\n                      }\r\n                    }\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Drawer>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Canvas;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport SideBar from \"./components/SideBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Canvas from \"./components/Canvas\";\nimport { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// https://flowchart-backend.herokuapp.com\n// http://127.0.0.1:8000\nconst apiUrl = \"https://flowchart-backend.herokuapp.com\";\n\nfunction App() {\n  const [currentFile, setCurrentFile] = useState(\n    localStorage.getItem(\"current\") === null\n      ? {}\n      : JSON.parse(localStorage.getItem(\"current\"))\n  );\n  const [isCanvasVisible, setIsCanvasVisible] = useState(false);\n  const [selectedColor, setSelectedColor] = useState({\n    r: \"193\",\n    g: \"230\",\n    b: \"255\",\n    a: \"100\",\n  });\n  const [edgeType, setEdgeType] = useState(\"smoothstep\");\n  const [isEditMode, setEditMode] = useState(false);\n  const [orientation, setOrientation] = useState(\"vertical\");\n\n  const updateSessionDb = (session) => {\n    fetch(`${apiUrl}/api/update-session`, {\n      method: \"POST\",\n      body: JSON.stringify({ session_id: session }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => console.log(json));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"session\") === null) {\n      const session = jwt.sign({ userId: uuidv4() }, \"secretkey\", {\n        expiresIn: \"1h\",\n        algorithm: \"HS256\",\n      });\n      updateSessionDb(session);\n      localStorage.setItem(\"session\", session);\n    }\n  }, []);\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={5} sm={4} md={2} lg={2}>\n        <SideBar\n          currentFile={currentFile}\n          setCurrentFile={setCurrentFile}\n          setCanvasVisibility={(flag) => setIsCanvasVisible(flag)}\n          setEdgeType={setEdgeType}\n          setSelectedColor={setSelectedColor}\n          isEditMode={isEditMode}\n          setOrientation={setOrientation}\n          orientation={orientation}\n        />\n      </Grid>\n      {isCanvasVisible && (\n        <Grid item xs={7} sm={8} md={10} lg={10}>\n          <Canvas\n            orientation={orientation}\n            currentFile={currentFile}\n            setCurrentFile={setCurrentFile}\n            isEditMode={isEditMode}\n            setEditMode={setEditMode}\n            selectedColor={selectedColor}\n            edgeType={edgeType}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}