{"version":3,"sources":["components/SideBar.js","components/Canvas.js","App.js","index.js"],"names":["SideBar","currentFile","setCurrentFile","setCanvasVisibility","setEdgeType","setSelectedColor","useState","localStorage","getItem","JSON","parse","files","setFiles","folder","setFolder","file","setFile","React","openNewFolder","setOpenNewFolder","openNewTag","setOpenNewTag","value","msg","error","setError","names","setNames","tagError","setTagError","tag","setTag","tags","setTags","openNewFile","setOpenNewFile","openEditTag","setOpenEditTag","currentEditTag","setCurrentEditTag","editTag","setEditTag","editTagError","setEditTagError","activeFolder","setActiveFolder","displayColorPicker","setDisplayColorPicker","r","g","b","a","color","setColor","handleClose","updateFilesDb","newElements","console","log","fetch","method","body","stringify","session_id","headers","then","res","json","updateNamesDb","newNames","updateTagsDb","newTags","useEffect","filter","node","hasOwnProperty","length","styles","reactCSS","default","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","Grid","item","xs","style","textAlign","backgroundColor","Typography","variant","gutterBottom","container","spacing","justifyContent","IconButton","onClick","fontSize","Dialog","open","onClose","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","helperText","onChange","event","target","fullWidth","DialogActions","Button","includes","newFiles","push","text","expanded","setItem","disabled","parentId","elements","index","findIndex","element","splice","namesIndex","indexOf","removeItem","data","isDelete","updateElementsDb","Object","keys","Divider","marginTop","orientation","maxHeight","overflow","searchEnabled","paddingLeft","paddingTop","paddingRight","fontWeight","dataStructure","items","onItemClick","e","itemData","direction","rgb","FormControl","marginLeft","InputLabel","Select","labelId","defaultValue","displayEmpty","MenuItem","startIcon","prevTags","concat","List","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","edge","deleteTag","type","originalTag","submitEditTag","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","nodeHeight","useStyles","makeStyles","theme","createStyles","previewChip","minWidth","maxWidth","onLoad","reactFlowInstance","fitView","SpecialNodeComponent","borderColor","border","minHeight","overflowWrap","marginRight","title","description","isConnectable","OvalNodeComponent","substring","RectangleNodeComponent","DiamondNodeComponent","transform","Canvas","selectedColor","edgeType","setElements","elementCLicked","setElementClicked","editModeTtitle","setEditModeTitle","editModeDescription","setEditModeDescription","isEditMode","setEditMode","setOpen","openUpload","setOpenUpload","openNewNode","setOpenNewNode","toggledElements","targetElements","setFirstTime","fileObjects","setFileObjects","renderAlert","setRenderAlert","setCsv","onConnect","params","newParams","addEdge","updateNode","onElementClick","getAllOutgoers","getOutgoers","reduce","memo","outgoer","onNodeClick","isCollapsable","children","allOutgoers","isHidden","child","newChild","u","filteredElements","submitTag","newElement","handleDelete","update","getNodeId","Date","Math","random","newCurrent","addNode","x","y","source","sort","parseInt","slice","classes","paddingBottom","component","alignItems","Switch","checked","name","clearOnUnmount","filesLimit","dialogTitle","Alert","severity","acceptedFiles","cancelButtonText","showAlerts","submitButtonText","maxFileSize","onAdd","newFileObjs","onDelete","deleteFileObj","newFilesObjects","onSave","Papa","complete","results","jsonArr","ids","checkedTags","tags2Check","split","checkTags","toLowerCase","Array","isArray","csvChildren","key","layoutedElements","isHorizontal","setGraph","rankdir","forEach","el","isNode","setNode","setEdge","layout","nodeWithPosition","targetPosition","sourcePosition","getLayoutedElements","showPreviewsInDropzone","useChipsForPreview","previewGridProps","previewChipProps","root","showFileNamesInPreview","Snackbar","autoHideDuration","nodeTypes","special","oval","rectangle","diamond","onElementsRemove","onNodeDoubleClick","onNodeDragStop","connectionLineType","onPaneContextMenu","snapToGrid","paneMoveable","nodeStrokeColor","n","nodeColor","nodeBorderRadius","gap","Drawer","anchor","str","InputProps","endAdornment","InputAdornment","size","marginBottom","Chip","App","isCanvasVisible","setIsCanvasVisible","session","jwt","sign","userId","uuidv4","expiresIn","algorithm","updateSessionDb","sm","md","lg","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca4dc2d7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TreeView from \"devextreme-react/tree-view\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nconst SideBar = ({\r\n  currentFile,\r\n  setCurrentFile,\r\n  setCanvasVisibility,\r\n  setEdgeType,\r\n  setSelectedColor,\r\n}) => {\r\n  const [files, setFiles] = useState(\r\n    localStorage.getItem(\"files\") === null\r\n      ? []\r\n      : JSON.parse(localStorage.getItem(\"files\"))\r\n  );\r\n\r\n  const [folder, setFolder] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [openNewFolder, setOpenNewFolder] = React.useState(false);\r\n  const [openNewTag, setOpenNewTag] = useState(false);\r\n  const [error, setError] = useState({ value: false, msg: \"\" });\r\n  const [names, setNames] = useState(\r\n    localStorage.getItem(\"names\") === null\r\n      ? []\r\n      : JSON.parse(localStorage.getItem(\"names\"))\r\n  );\r\n  const [tagError, setTagError] = useState({});\r\n  const [tag, setTag] = useState(\"\");\r\n  const [tags, setTags] = useState(\r\n    localStorage.getItem(\"tags\") === null\r\n      ? []\r\n      : JSON.parse(localStorage.getItem(\"tags\"))\r\n  );\r\n  const [openNewFile, setOpenNewFile] = React.useState(false);\r\n  const [openEditTag, setOpenEditTag] = useState(false);\r\n  const [currentEditTag, setCurrentEditTag] = useState(\"\");\r\n  const [editTag, setEditTag] = useState(\"\");\r\n  const [editTagError, setEditTagError] = useState({});\r\n  const [activeFolder, setActiveFolder] = useState(false);\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n\r\n  const newFolder = () => {\r\n    setOpenNewFolder(true);\r\n  };\r\n\r\n  const newFile = () => {\r\n    setOpenNewFile(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFolder(\"\");\r\n    setFile(\"\");\r\n    setOpenNewTag(false);\r\n    setOpenEditTag(false);\r\n    setCurrentEditTag(false);\r\n    setEditTag(false);\r\n    setEditTagError(false);\r\n    setError({});\r\n    openNewFolder ? setOpenNewFolder(false) : setOpenNewFile(false);\r\n  };\r\n\r\n  const handleChangeFolder = (event) => {\r\n    setFolder(event.target.value);\r\n  };\r\n\r\n  const handleChangeFile = (event) => {\r\n    setFile(event.target.value);\r\n  };\r\n\r\n  const updateFilesDb = (newElements) => {\r\n    console.log(\"updating database....\");\r\n    fetch(\"http://127.0.0.1:8000/api/update-files\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        files: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\r\n          json,\r\n          \"ndsojdmsio99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"\r\n        );\r\n        setFiles(json.files);\r\n      });\r\n  };\r\n\r\n  const updateNamesDb = (newNames) => {\r\n    console.log(\"updating database....\");\r\n    fetch(\"http://127.0.0.1:8000/api/update-names\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        names: newNames,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setNames(json.names));\r\n  };\r\n\r\n  const updateElementsDb = (newElements, isDelete = false) => {\r\n    console.log(\"updating database....\");\r\n    fetch(\"http://127.0.0.1:8000/api/update-elements\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => console.log(json));\r\n  };\r\n\r\n  const updateTagsDb = (newTags) => {\r\n    console.log(\"updating database....\");\r\n    fetch(\"http://127.0.0.1:8000/api/update-tags\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        tags: newTags,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setTags(json.tags));\r\n  };\r\n\r\n  const submitFolder = () => {\r\n    if (folder.length === 0) {\r\n      setError({ value: true, msg: \"Folder name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(folder)) {\r\n        setError({ value: true, msg: \"Folder must be unique.\" });\r\n      } else {\r\n        const newFiles = [...files];\r\n        newFiles.push({ id: folder, text: folder, expanded: true });\r\n        setFiles(newFiles);\r\n        updateFilesDb(newFiles);\r\n        localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n        const newNames = [...names];\r\n        newNames.push(folder);\r\n        setNames(newNames);\r\n        updateNamesDb(newNames);\r\n        localStorage.setItem(\"names\", JSON.stringify(newNames));\r\n        setError({});\r\n        setOpenNewFolder(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitFile = () => {\r\n    if (file.length === 0) {\r\n      setError({ value: true, msg: \"File name can not be empty.\" });\r\n    } else {\r\n      if (names.includes(file)) {\r\n        setError({ value: true, msg: \"File name must be unique.\" });\r\n      } else {\r\n        const newFiles = [...files];\r\n        if (!\"parentId\" in newFiles[0]) {\r\n          setError({\r\n            value: true,\r\n            msg: \"You must have folder to create a file.\",\r\n          });\r\n        } else {\r\n          newFiles.push({\r\n            id: file,\r\n            text: file,\r\n            parentId: currentFile.id,\r\n            elements: [],\r\n          });\r\n          setFiles(newFiles);\r\n          updateFilesDb(newFiles);\r\n          localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n          const newNames = [...names];\r\n          newNames.push(file);\r\n          setNames(newNames);\r\n          localStorage.setItem(\"names\", JSON.stringify(newNames));\r\n          updateNamesDb(newNames);\r\n          setError({});\r\n          setOpenNewFile(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    const newFiles = JSON.parse(JSON.stringify(files));\r\n    const index = files.findIndex((element) => element === currentFile);\r\n    newFiles.splice(index, 1);\r\n    const newNames = [...names];\r\n    const namesIndex = names.indexOf(currentFile.id);\r\n    newNames.splice(namesIndex, 1);\r\n    setNames(newNames);\r\n    updateNamesDb(newNames);\r\n    localStorage.setItem(\"names\", JSON.stringify(newNames));\r\n    setFiles(newFiles);\r\n    updateFilesDb(newFiles);\r\n    localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n    localStorage.removeItem(\"current\");\r\n    const newElements = currentFile.elements.filter((data) => {\r\n      return currentFile.id !== data.node;\r\n    });\r\n    setCurrentFile({});\r\n    updateElementsDb(newElements, true);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = () => {\r\n    if (tag.length === 0) {\r\n      setTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(tag)) {\r\n        setTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        console.log(tags);\r\n        console.log(tag);\r\n        const newTags = [...tags];\r\n        newTags.push(tag);\r\n        setTags((prevTags) => [...prevTags].concat([tag]));\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setTagError({});\r\n        setOpenNewTag(false);\r\n        console.log(tags);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitEditTag = (originalTag) => {\r\n    if (editTag.length === 0) {\r\n      setEditTagError({ value: true, msg: \"Tag name can not be empty.\" });\r\n    } else {\r\n      if (tags.includes(editTag)) {\r\n        setEditTagError({ value: true, msg: \"Tag must be unique.\" });\r\n      } else {\r\n        const newTags = [...tags];\r\n        const index = tags.indexOf(originalTag);\r\n        newTags[index] = editTag;\r\n        setTags(newTags);\r\n        updateTagsDb(newTags);\r\n        localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n        setEditTagError({});\r\n        setOpenEditTag(false);\r\n        setCurrentEditTag(false);\r\n        setEditTag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteTag = (tag) => {\r\n    const newTags = [...tags];\r\n    const index = tags.findIndex((element) => element === tag);\r\n    newTags.splice(index, 1);\r\n    setTags(newTags);\r\n    updateTagsDb(newTags);\r\n    localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n  };\r\n\r\n  const handleChangeEditTag = (event) => {\r\n    setEditTag(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvasVisibilityHandler = (nodes) => {\r\n      const files = nodes.filter(\r\n        (node) =>\r\n          node.hasOwnProperty(\"parentId\") || node.hasOwnProperty(\"elements\")\r\n      );\r\n      if (files.length && !activeFolder) setCanvasVisibility(true);\r\n      else setCanvasVisibility(false);\r\n    };\r\n\r\n    canvasVisibilityHandler(files);\r\n  }, [files, setCanvasVisibility]);\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setSelectedColor(color.rgb);\r\n    setColor(color.rgb);\r\n  };\r\n\r\n  const handleChangeEdgeType = (event) => {\r\n    setEdgeType(event.target.value);\r\n  };\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          height: \"70vh\",\r\n          textAlign: \"center\",\r\n          backgroundColor: \"#F2F2F2\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom style={{ padding: 10 }}>\r\n          Folder Structures\r\n        </Typography>\r\n        <Grid container spacing={0} justifyContent=\"center\">\r\n          <Grid item xs={4}>\r\n            <IconButton\r\n              aria-label=\"Add Folder\"\r\n              onClick={newFolder}\r\n              color=\"primary\"\r\n            >\r\n              <CreateNewFolderIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </Grid>\r\n          <Dialog\r\n            open={openNewFolder}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Create New Folder</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                error={error.value ? true : false}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"folder\"\r\n                label=\"Folder Name\"\r\n                helperText={error.value && error.msg}\r\n                onChange={handleChangeFolder}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={submitFolder} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Grid item xs={4}>\r\n            <IconButton\r\n              aria-label=\"Add File\"\r\n              color=\"primary\"\r\n              onClick={newFile}\r\n              disabled={currentFile.hasOwnProperty(\"expanded\") ? false : true}\r\n            >\r\n              <NoteAddIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </Grid>\r\n          <Dialog\r\n            open={openNewFile}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Create New File</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                error={error.value ? true : false}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"file\"\r\n                label=\"File Name\"\r\n                onChange={handleChangeFile}\r\n                helperText={error.value && error.msg}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={submitFile} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Grid item xs={4}>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              color=\"secondary\"\r\n              onClick={deleteItem}\r\n              disabled={Object.keys(currentFile).length === 0 ? true : false}\r\n            >\r\n              <DeleteIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider style={{ marginTop: 20 }} orientation=\"horizontal\" />\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n        >\r\n          {files.length === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <TreeView\r\n              searchEnabled={true}\r\n              style={{\r\n                display: \"inline-block\",\r\n                paddingLeft: 15,\r\n                paddingTop: 15,\r\n                paddingRight: 15,\r\n                fontSize: 18,\r\n                fontWeight: \"normal\",\r\n              }}\r\n              dataStructure=\"plain\"\r\n              id=\"simple-treeview\"\r\n              items={files}\r\n              width=\"100%\"\r\n              onItemClick={(e) => {\r\n                console.log(\"ddd\", e.itemData.hasOwnProperty(\"expanded\"));\r\n                if (!e.itemData.hasOwnProperty(\"expanded\")) {\r\n                  localStorage.setItem(\"current\", JSON.stringify(e.itemData));\r\n                  setActiveFolder(false);\r\n                  setCanvasVisibility(true);\r\n                } else {\r\n                  setActiveFolder(true);\r\n                  setCanvasVisibility(false);\r\n                }\r\n                setCurrentFile(e.itemData);\r\n              }}\r\n            />\r\n          )}\r\n        </Grid>\r\n        <Divider orientation=\"horizontal\" />\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n        >\r\n          <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n            <Grid item xs={12} direction=\"row\">\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Node Color\r\n              </Typography>\r\n              <div style={styles.swatch} onClick={handleClickColor}>\r\n                <div style={styles.color} />\r\n              </div>\r\n              {displayColorPicker ? (\r\n                <div style={styles.popover}>\r\n                  <div style={styles.cover} onClick={handleCloseColor} />\r\n                  <SketchPicker color={color} onChange={handleChangeColor} />\r\n                </div>\r\n              ) : null}\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ textAlign: \"start\", maxHeight: \"100%\", overflow: \"auto\" }}\r\n        >\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{ width: 150, marginTop: 30, marginLeft: 20 }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              EdgeType\r\n            </InputLabel>\r\n            <Select\r\n              style={{ fontSize: 15 }}\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              onChange={handleChangeEdgeType}\r\n              variant=\"outlined\"\r\n              label=\"EdgeType\"\r\n              defaultValue=\"smoothstep\"\r\n              displayEmpty={true}\r\n            >\r\n              <MenuItem value=\"smoothstep\">Step Edge</MenuItem>\r\n              <MenuItem value=\"default\">Curved Edge</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider orientation=\"horizontal\" />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          height: \"30vh\",\r\n          textAlign: \"center\",\r\n          backgroundColor: \"#F2F2F2\",\r\n          height: \"320px\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom style={{ padding: 10 }}>\r\n          Tags\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setOpenNewTag(true)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          New Tag\r\n        </Button>\r\n        <Dialog\r\n          open={openNewTag}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create New Tag</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              error={tagError.value ? true : false}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"tag\"\r\n              label=\"Tag Name\"\r\n              helperText={tagError.value && tagError.msg}\r\n              onChange={handleChangeTag}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={submitTag} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <List>\r\n          {tags.map((tag) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <LocalOfferIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={tag} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"edit\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setCurrentEditTag(tag);\r\n                    setOpenEditTag(true);\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  color=\"primary\"\r\n                  onClick={() => deleteTag(tag)}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n          <Dialog\r\n            open={openEditTag}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Edit Tag</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                error={editTagError.value ? true : false}\r\n                autoFocus\r\n                type=\"text\"\r\n                margin=\"dense\"\r\n                id=\"tag\"\r\n                defaultValue={currentEditTag}\r\n                label=\"Tag Name\"\r\n                helperText={editTagError.value && editTagError.msg}\r\n                onChange={(e) => handleChangeEditTag(e)}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => submitEditTag(currentEditTag)}\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </List>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import {\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Drawer,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  Badge,\r\n  Snackbar,\r\n  DialogActions,\r\n  Button,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { DropzoneDialogBase } from \"material-ui-dropzone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Papa from \"papaparse\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  getIncomers,\r\n  getOutgoers,\r\n  isNode,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Handle,\r\n} from \"react-flow-renderer\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport dagre from \"dagre\";\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\n// const nodeDimensions = {\r\n//   special: { width: 50, height: 150 },\r\n//   rectangle: { width: 150, height: 70 },\r\n//   oval: { width: 150, height: 70 },\r\n//   diamond: { width: 100, height: 100 },\r\n// };\r\nconst nodeWidth = 170;\r\nconst nodeHeight = 170;\r\nconst getLayoutedElements = (elements, direction = \"TB\") => {\r\n  const isHorizontal = direction === \"LR\";\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, {\r\n        width: nodeWidth,\r\n        height: nodeHeight,\r\n      });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    previewChip: {\r\n      minWidth: 160,\r\n      maxWidth: 210,\r\n    },\r\n  })\r\n);\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n  // console.log(\"flow loaded:\", reactFlowInstance);\r\n  // console.log(reactFlowInstance.getElements());\r\n  reactFlowInstance.fitView();\r\n};\r\n\r\nconst SpecialNodeComponent = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 150,\r\n          minHeight: 10,\r\n          borderRadius: \"10px 10px 0px 0px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <Handle type=\"target\" position=\"top\" style={{ background: \"black\" }} />\r\n        {/* <div>\r\n          {data.title.length >= 21\r\n            ? data.title.slice(0, 20) + \"...\"\r\n            : data.title}\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            width: \"93%\",\r\n            // textAlign: \"center\",\r\n            overflowWrap: \"break-word\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.title}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          background: \"white\",\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          color: \"black\",\r\n          padding: 10,\r\n          width: 150,\r\n          minHeight: 40,\r\n          borderRadius: \"0px 0px 10px 10px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {/* <div>\r\n          <Typography variant=\"caption\">\r\n            {data.description.length >= 23\r\n              ? data.description.slice(0, 22) + \"...\"\r\n              : data.description}\r\n          </Typography>\r\n        </div> */}\r\n        <div\r\n          style={{\r\n            width: \"93%\",\r\n            minHeight: \"40px\",\r\n            // textAlign: \"center\",\r\n            overflowWrap: \"break-word\",\r\n            marginLeft: 10,\r\n            marginRight: 300,\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            gutterBottom\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {data.description}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OvalNodeComponent = ({ data }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        color: \"black\",\r\n        padding: 10,\r\n        border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        width: 150,\r\n        minHeight: 70,\r\n        textAlign: \"center\",\r\n        borderRadius: \"50px\",\r\n      }}\r\n    >\r\n      <Handle type=\"target\" position=\"top\" style={{ background: \"black\" }} />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n      <div\r\n        style={{\r\n          width: \"93%\",\r\n          // textAlign: \"center\",\r\n          overflowWrap: \"break-word\",\r\n          marginLeft: 10,\r\n          marginRight: 300,\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          {data.title.substring(0, 27)}\r\n        </Typography>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RectangleNodeComponent = ({ data }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: `rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        color: \"black\",\r\n        padding: 10,\r\n        border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n        width: 150,\r\n        minHeight: 70,\r\n        textAlign: \"center\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Handle type=\"target\" position=\"top\" style={{ background: \"black\" }} />\r\n      {/* <div style={{ paddingTop: 20 }}>\r\n        {data.title.length >= 21 ? data.title.slice(0, 20) + \"...\" : data.title}\r\n      </div> */}\r\n      <div\r\n        style={{\r\n          width: \"93%\",\r\n          // textAlign: \"center\",\r\n          overflowWrap: \"break-word\",\r\n          marginLeft: 10,\r\n          marginRight: 300,\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          {data.title}\r\n        </Typography>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DiamondNodeComponent = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          color: \"black\",\r\n          padding: 10,\r\n          border: `2px solid rgba(${data.color.r}, ${data.color.g}, ${data.color.b}, ${data.color.a})`,\r\n          width: 100,\r\n          minHeight: 100,\r\n          textAlign: \"center\",\r\n          borderRadius: \"5px\",\r\n          transform: \"rotate(45deg)\",\r\n        }}\r\n      >\r\n        <div style={{ transform: \"rotate(-45deg)\", marginTop: 35 }}>\r\n          {/* <div>\r\n            {data.title.length >= 16\r\n              ? data.title.slice(0, 15) + \"...\"\r\n              : data.title}\r\n          </div> */}\r\n          <div\r\n            style={{\r\n              width: \"93%\",\r\n              minHeight: \"40px\",\r\n              // textAlign: \"center\",\r\n              overflowWrap: \"break-word\",\r\n              marginLeft: 10,\r\n              marginRight: 300,\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              gutterBottom\r\n              style={{\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              {data.title}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ background: \"black\" }}\r\n        isConnectable={true}\r\n      />\r\n      <Handle type=\"target\" position=\"top\" style={{ background: \"black\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Canvas = ({ currentFile, selectedColor, edgeType }) => {\r\n  const [elements, setElements] = useState([]);\r\n  const [elementCLicked, setElementClicked] = useState({});\r\n  const [editModeTtitle, setEditModeTitle] = useState(false);\r\n  const [editModeDescription, setEditModeDescription] = useState(false);\r\n  const [isEditMode, setEditMode] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpload, setOpenUpload] = React.useState(false);\r\n  const [openNewNode, setOpenNewNode] = useState(false);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const [color, setColor] = useState({\r\n    r: \"193\",\r\n    g: \"230\",\r\n    b: \"255\",\r\n    a: \"100\",\r\n  });\r\n  const [toggledElements, setToggledElements] = useState([]);\r\n  const [targetElements, setTargetElements] = useState({});\r\n  const [isFirstTime, setFirstTime] = useState(true);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n  const [renderAlert, setRenderAlert] = useState({ value: false, msg: \"\" });\r\n  const [tags, setTags] = useState([]);\r\n  const [csv, setCsv] = useState(false);\r\n\r\n  const updateElementsDb = (newElements, currentFile, isDelete = false) => {\r\n    // console.log(\"updating database....\");\r\n    // console.log(newElements);\r\n    console.log(currentFile);\r\n    fetch(\"http://127.0.0.1:8000/api/update-elements\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n        file: currentFile.id,\r\n        isDelete: isDelete,\r\n        elements: newElements,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.elements);\r\n        setElements(json.elements);\r\n      });\r\n  };\r\n\r\n  const onElementsRemove = () => {\r\n    const update = elements.filter((data) => {\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = update;\r\n    setElements(update);\r\n    updateNode();\r\n  };\r\n\r\n  const onConnect = async (params) => {\r\n    //  setElements((els) => addEdge(params, els))\r\n    //  console.log(elements);\r\n    //  updateNode()\r\n    const newParams = { ...params };\r\n    newParams.type = edgeType;\r\n    // console.log(newParams, \"**********8\");\r\n    const edge = await addEdge(newParams, elements);\r\n    await setElements(edge);\r\n    await updateNode(edge);\r\n  };\r\n\r\n  const onElementClick = async (event, element) => {\r\n    if (isEditMode) {\r\n      setElementClicked(element);\r\n    }\r\n  };\r\n\r\n  const getAllOutgoers = (node, elements) => {\r\n    return getOutgoers(node, elements).reduce(\r\n      (memo, outgoer) => [\r\n        ...memo,\r\n        outgoer,\r\n        ...getAllOutgoers(outgoer, elements),\r\n      ],\r\n      []\r\n    );\r\n  };\r\n\r\n  const onNodeClick = async (event, element) => {\r\n    if (isEditMode === false) {\r\n      if (element.data.isCollapsable) {\r\n        let newElements = [...elements];\r\n        const children = getOutgoers(element, elements);\r\n        if (children.length > 0) {\r\n          const allOutgoers = getAllOutgoers(element, elements);\r\n          console.log(allOutgoers);\r\n          console.log(children);\r\n          if (children[0].isHidden) {\r\n            children.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = false;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = false;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          } else {\r\n            allOutgoers.map((child) => {\r\n              const newChild = { ...child };\r\n              newChild.isHidden = true;\r\n              console.log(newChild);\r\n              newElements = newElements.map((u) => {\r\n                if (u.id !== child.id) {\r\n                  if (u.hasOwnProperty(\"target\")) {\r\n                    if (u.target === child.id) {\r\n                      u.isHidden = true;\r\n                    }\r\n                  }\r\n                  return u;\r\n                } else {\r\n                  return newChild;\r\n                }\r\n              });\r\n              // newElements = newElements.map((u) => (u.id !== child.id ? u : newChild));\r\n            });\r\n          }\r\n          console.log(newElements);\r\n          setElements(newElements);\r\n          updateNode(newElements);\r\n          // let _elements;\r\n          // if (Object.keys(targetElements).length > 0) {\r\n          //   _elements = JSON.parse(JSON.stringify(toggledElements));\r\n          // } else {\r\n          //   _elements = JSON.parse(JSON.stringify(elements));\r\n          // }\r\n          // if (!targetElements[element.id]) {\r\n          //   const targets = [];\r\n          //   _elements.forEach((elem) => {\r\n          //     if (elem[\"source\"] !== undefined && elem.source === element.id) {\r\n          //       targets.push(elem.target);\r\n          //     }\r\n          //   });\r\n          //   console.log(\"targets\", targets);\r\n          //   console.log(\"elements\", _elements);\r\n          //   let firstLevelChildren;\r\n          //   firstLevelChildren = _elements.filter(\r\n          //     (elem) => elem.source !== element.id\r\n          //   );\r\n          //   // console.log('first-level-children-1', firstLevelChildren);\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.id)\r\n          //   );\r\n          //   // console.log('first-level-children-2', firstLevelChildren);\r\n          //   firstLevelChildren.forEach((elem) => {\r\n          //     if (elem[\"source\"] !== undefined && targets.includes(elem.source)) {\r\n          //       targets.push(elem.target);\r\n          //     }\r\n          //   });\r\n          //   setTargetElements({\r\n          //     [element.id]: targets,\r\n          //   });\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.source)\r\n          //   );\r\n          //   // console.log('first-level-children-3', firstLevelChildren);\r\n          //   firstLevelChildren = firstLevelChildren.filter(\r\n          //     (elem) => !targets.includes(elem.id)\r\n          //   );\r\n          //   console.log(\"first-level-children-final\", firstLevelChildren);\r\n          //   setToggledElements(firstLevelChildren);\r\n          // } else {\r\n          //   const firstLevelChildren = _elements.filter(\r\n          //     (elem) =>\r\n          //       elem.source === element.id ||\r\n          //       targetElements[element.id].includes(elem.id) ||\r\n          //       targetElements[element.id].includes(elem.source)\r\n          //   );\r\n          //   console.log(\"first-level-children\", firstLevelChildren);\r\n          //   setToggledElements([...toggledElements, ...firstLevelChildren]);\r\n          //   const _targetElements = JSON.parse(JSON.stringify(targetElements));\r\n          //   delete _targetElements[element.id];\r\n          //   setTargetElements(_targetElements);\r\n          // }\r\n          // setElementClicked(element);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/api/get-user-info\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        session_id: localStorage.getItem(\"session\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"testtttttttttt\", json);\r\n        let newElements = [];\r\n        if (json.elements.length === 0) {\r\n          newElements = [];\r\n        } else {\r\n          if (json.elements.hasOwnProperty(currentFile.id)) {\r\n            newElements = json.elements[currentFile.id];\r\n          } else {\r\n            newElements = [];\r\n          }\r\n        }\r\n        console.log(newElements);\r\n        setElements(newElements);\r\n        setTags(json.tags);\r\n      });\r\n  }, [currentFile]);\r\n\r\n  const onNodeDragStop = (event, node) => {\r\n    const newElements = [...elements];\r\n    // console.log(newElements);\r\n    newElements.map((element) => {\r\n      if (element.id === node.id) {\r\n        element.position = node.position;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenNewNode(false);\r\n  };\r\n\r\n  const handleChangeTag = (event) => {\r\n    setTag(event.target.value);\r\n  };\r\n\r\n  const submitTag = async () => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        if (!elementCLicked.data.tags.includes(tag)) {\r\n          const newElement = [...elementCLicked.data.tags];\r\n          newElement.push(tag);\r\n          elementCLicked.data.tags = newElement;\r\n        }\r\n      }\r\n    });\r\n    await setElements(newElements);\r\n    updateNode();\r\n    // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        let str;\r\n        if (event.target.value.length >= 27) {\r\n          str = event.target.value.substring(0, 27);\r\n        } else {\r\n          str = event.target.value;\r\n        }\r\n        element.data[\"title\"] = str;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode();\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"title\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // updateNode();\r\n  };\r\n\r\n  const handleClickTitle = () => {\r\n    setEditModeTitle(true);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === event.target.name) {\r\n        element.data[\"description\"] = event.target.value;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode();\r\n    // const newElements = [...elements];\r\n    // newElements.map((element) => {\r\n    //   if (element.id === event.target.name) {\r\n    //     element.data[\"description\"] = event.target.value;\r\n    //   }\r\n    // });\r\n    // setElements(newElements);\r\n    // // localStorage.setItem(\"elements\", JSON.stringify(newElements));\r\n    // updateNode();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const update = elements.filter((data) => {\r\n      return data.id !== elementCLicked.id;\r\n    });\r\n    if (currentFile !== null) {\r\n      const newCurrent = { ...currentFile };\r\n      newCurrent.elements = update;\r\n    }\r\n    setElements(update);\r\n    updateElementsDb(update, currentFile);\r\n    setElementClicked({});\r\n  };\r\n\r\n  const handleClickDescription = () => {\r\n    setEditModeDescription(true);\r\n  };\r\n\r\n  const getNodeId = () => `randomnode_${+new Date() + Math.random()}`;\r\n\r\n  const updateNode = (element = elements) => {\r\n    const newElements = [...element];\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n    updateElementsDb(newElements, currentFile);\r\n  };\r\n  const addNode = (type) => {\r\n    let newElements = elements ? [...elements] : [];\r\n    newElements.push({\r\n      id: getNodeId(),\r\n      node: currentFile.id,\r\n      type: type,\r\n      data: {\r\n        title: \"title\",\r\n        description: type === \"special\" ? \"A description\" : null,\r\n        color: selectedColor,\r\n        isCollapsable: true,\r\n        tags: [],\r\n      },\r\n      isHidden: false,\r\n      position: { x: 100, y: 0 },\r\n    });\r\n    const newCurrent = { ...currentFile };\r\n    newCurrent.elements = newElements;\r\n    setElements(newElements);\r\n  };\r\n\r\n  const handleClickColor = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleCloseColor = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    setColor(color.rgb);\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        element.data.color = color.rgb;\r\n      }\r\n    });\r\n    setElements(newElements);\r\n    updateNode();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (elements.length > 0) {\r\n  //   }\r\n  // }, [elements]);\r\n\r\n  // console.log('target-elements', targetElements);\r\n  // console.log('toggled-elemetns', toggledElements);\r\n\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        width: \"36px\",\r\n        height: \"14px\",\r\n        borderRadius: \"2px\",\r\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n      },\r\n      swatch: {\r\n        padding: \"5px\",\r\n        borderRadius: \"1px\",\r\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleChangeSwitch = () => {\r\n    setFirstTime(true);\r\n    setEditMode(!isEditMode);\r\n  };\r\n\r\n  const handleChangeCollapsable = () => {\r\n    console.log(\"YYYYYYYYYYYYYGUKB\");\r\n    const newElements = [...elements];\r\n    newElements.map((element) => {\r\n      if (element.id === elementCLicked.id) {\r\n        console.log(!element.data.isCollapsable);\r\n        element.data.isCollapsable = !element.data.isCollapsable;\r\n        setElementClicked(element);\r\n      }\r\n    });\r\n    updateNode(newElements);\r\n  };\r\n\r\n  const checkTags = (tags2Check) => {\r\n    console.log(tags);\r\n    if (tags2Check.length === 0) {\r\n      return [];\r\n    } else {\r\n      const newTags = tags2Check.split(\",\");\r\n      if (tags.length === 0) {\r\n        return {\r\n          value: true,\r\n          msg: \"One or more of the tags provided does not exist.\",\r\n        };\r\n      }\r\n      newTags.map((tag) => {\r\n        if (!tags.includes(tag)) {\r\n          return {\r\n            value: true,\r\n            msg: \"One or more of the tags provided does not exist.\",\r\n          };\r\n        }\r\n      });\r\n      return newTags;\r\n    }\r\n  };\r\n\r\n  console.log(\"elements\", elements);\r\n\r\n  let filteredElements;\r\n\r\n  if (elements.length === 0) {\r\n    filteredElements = [];\r\n  } else {\r\n    console.log(elements, \"***********************88\");\r\n    filteredElements = elements.filter((data) => {\r\n      return data.node === currentFile.id || data.source;\r\n    });\r\n    filteredElements.sort((a, b) => {\r\n      if (a.hasOwnProperty(\"data\") && b.hasOwnProperty(\"data\")) {\r\n        return parseInt(a.id.slice(11, 24)) - parseInt(b.id.slice(11, 24));\r\n      }\r\n    });\r\n    // if (!isEditMode) {\r\n    //     if (isFirstTime) {\r\n    //       console.log(filteredElements);\r\n    //       const newFilteredElements = filteredElements.slice(1);\r\n    //       newFilteredElements.map((element) => {\r\n    //         element.isHidden = true;\r\n    //       });\r\n    //       setFirstTime(false);\r\n    //     }\r\n    // } else {\r\n    //   filteredElements.map((element) => {\r\n    //     element.isHidden = false;\r\n    //   });\r\n    // }\r\n  }\r\n  console.log(filteredElements);\r\n  console.log(elements);\r\n  const classes = useStyles();\r\n\r\n  if (currentFile === null) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3} style={{ width: \"80%\" }}>\r\n          <Grid item xs={4} style={{ textAlign: \"start\" }}>\r\n            {isEditMode && (\r\n              <>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  startIcon={<Add />}\r\n                  style={{\r\n                    textAlign: \"start\",\r\n                    marginTop: 20,\r\n                  }}\r\n                  onClick={() => setOpenNewNode(true)}\r\n                >\r\n                  New Node\r\n                </Button>\r\n                <Dialog\r\n                  open={openNewNode}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                  // style={{ overflow: \"hidden\" }}\r\n                >\r\n                  <DialogTitle\r\n                    id=\"form-dialog-title\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    Select a Shape\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={1}>\r\n                      <Grid container direction=\"row\" spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            onClick={() => {\r\n                              addNode(\"special\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                background: \"#ADD8E6\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                border: \"1px solid black\",\r\n                                width: 100,\r\n                                height: 10,\r\n                                borderRadius: \"10px 10px 0px 0px\",\r\n                                textAlign: \"center\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                            <div\r\n                              style={{\r\n                                background: \"white\",\r\n                                border: \"1px solid black\",\r\n                                color: \"black\",\r\n                                padding: 10,\r\n                                width: 100,\r\n                                height: 40,\r\n                                borderRadius: \"0px 0px 10px 10px\",\r\n                                textAlign: \"center\",\r\n                                marginRight: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"90px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"50px\",\r\n                              marginLeft: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"oval\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        spacing={1}\r\n                        style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"130px\",\r\n                              borderRadius: \"10px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"rectangle\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              height: \"80px\",\r\n                              width: \"80px\",\r\n                              borderRadius: \"5px\",\r\n                              transform: \"rotate(45deg)\",\r\n                              marginLeft: \"30px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => {\r\n                              addNode(\"diamond\");\r\n                              setOpenNewNode(false);\r\n                            }}\r\n                          ></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2} style={{ textAlign: \"center\" }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              gutterBottom\r\n              style={{ paddingTop: 10, fontWeight: \"bold\" }}\r\n            >\r\n              {`Project: ${currentFile.parentId}`}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {`Sub Process: ${currentFile.text}`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n            <Typography component=\"div\">\r\n              <Grid\r\n                component=\"label\"\r\n                container\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n                style={{ paddingTop: 20, paddingLeft: 90 }}\r\n              >\r\n                <Grid item>View</Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={isEditMode}\r\n                    onChange={handleChangeSwitch}\r\n                    name=\"checked\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>Edit</Grid>\r\n                {isEditMode && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: 60 }}\r\n                    onClick={() => {\r\n                      // console.log(\r\n                      //   elements,\r\n                      //   \"t8934ufjhn888ewhyobfo8ulh74uilw748ofulufo47fuligo7t357grlgt57grsg7rsty7osrlgwyot7rswy7hsgywo7hrlgwy7oglyo4rhgyotrglyo4rgyot7r\"\r\n                      // );\r\n                      updateElementsDb([...elements], currentFile);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: isEditMode ? 10 : 60 }}\r\n                  startIcon={<CloudUploadIcon />}\r\n                  onClick={() => {\r\n                    setOpenUpload(true);\r\n                  }}\r\n                >\r\n                  Import CSV\r\n                </Button>\r\n                <DropzoneDialogBase\r\n                  clearOnUnmount={true}\r\n                  filesLimit={1}\r\n                  dialogTitle={\r\n                    <>\r\n                      {console.log(renderAlert)}\r\n                      {renderAlert.value && (\r\n                        <Alert severity=\"error\">{renderAlert.msg}</Alert>\r\n                      )}\r\n                      <span>Upload file</span>\r\n                      <IconButton\r\n                        style={{\r\n                          right: \"12px\",\r\n                          top: \"8px\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                        onClick={() => setOpenUpload(false)}\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </>\r\n                  }\r\n                  acceptedFiles={[\".csv\"]}\r\n                  fileObjects={fileObjects}\r\n                  cancelButtonText={\"cancel\"}\r\n                  showAlerts={[\"error\", \"info\"]}\r\n                  submitButtonText={\"submit\"}\r\n                  maxFileSize={5000000}\r\n                  open={openUpload}\r\n                  onAdd={(newFileObjs) => {\r\n                    console.log(\"onAdd\", newFileObjs);\r\n                    if (fileObjects.length === 0) {\r\n                      setFileObjects([].concat(fileObjects, newFileObjs));\r\n                    }\r\n                  }}\r\n                  onDelete={(deleteFileObj) => {\r\n                    const newFilesObjects = [...fileObjects].filter(\r\n                      (item) => item !== deleteFileObj\r\n                    );\r\n                    setFileObjects(newFilesObjects);\r\n                    console.log(\"onDelete\", deleteFileObj);\r\n                  }}\r\n                  onClose={() => setOpenUpload(false)}\r\n                  onSave={() => {\r\n                    console.log(fileObjects[0]);\r\n                    Papa.parse(fileObjects[0].file, {\r\n                      complete: function (results) {\r\n                        let data = results.data;\r\n                        let jsonArr = [];\r\n                        const ids = {};\r\n                        const children = {};\r\n                        data = data.slice(1);\r\n                        data.map((element) => {\r\n                          const checkedTags = checkTags(element[4]);\r\n                          console.log(checkedTags, \"7777777777777777777\");\r\n                          console.log(element[5]);\r\n                          if (\r\n                            [\r\n                              \"special\",\r\n                              \"oval\",\r\n                              \"rectangle\",\r\n                              \"diamond\",\r\n                            ].includes(element[5].toLowerCase())\r\n                          ) {\r\n                            if (Array.isArray(checkedTags)) {\r\n                              ids[element[0]] = getNodeId();\r\n                              jsonArr.push({\r\n                                id: ids[element[0]],\r\n                                node: currentFile.id,\r\n                                type: element[5],\r\n                                data: {\r\n                                  title: element[1],\r\n                                  description:\r\n                                    element[2].length === 0 ? null : element[2],\r\n                                  color: {\r\n                                    r: \"193\",\r\n                                    g: \"230\",\r\n                                    b: \"255\",\r\n                                    a: \"100\",\r\n                                  },\r\n                                  tags: checkedTags,\r\n                                  isCollapsable:\r\n                                    element[6] === \"TRUE\" ? true : false,\r\n                                },\r\n                                isHidden: false,\r\n                                position: { x: 0, y: 0 },\r\n                              });\r\n                              if (element[7].length > 0) {\r\n                                if (element[7].includes(\",\")) {\r\n                                  const csvChildren = element[7].split(\",\");\r\n                                  children[element[0]] = csvChildren;\r\n                                }\r\n                              }\r\n                            } else {\r\n                              console.log(checkedTags);\r\n                              // setRenderAlert(checkedTags);\r\n                              setRenderAlert({\r\n                                value: true,\r\n                                msg: \"One or more of the tags provided does not exist.\",\r\n                              });\r\n                            }\r\n                          } else {\r\n                            console.log(\"test\");\r\n                            setRenderAlert({\r\n                              value: true,\r\n                              msg: \"A type of shape in the file does not exist.\",\r\n                            });\r\n                          }\r\n                        });\r\n                        console.log(jsonArr);\r\n                        console.log(\"Finished:\", results.data);\r\n                        console.log(\"onSave\", fileObjects);\r\n                        console.log(jsonArr.length);\r\n                        if (jsonArr.length === data.length) {\r\n                          console.log(ids);\r\n                          console.log(children);\r\n                          for (var key in children) {\r\n                            if (children.hasOwnProperty(key)) {\r\n                              if (Array.isArray(children[key])) {\r\n                                children[key].map((child) => {\r\n                                  const edge = addEdge(\r\n                                    {\r\n                                      source: ids[key],\r\n                                      target: ids[child],\r\n                                    },\r\n                                    jsonArr\r\n                                  );\r\n                                  console.log(edge);\r\n                                  jsonArr = edge;\r\n                                });\r\n                              } else {\r\n                                const edge = addEdge(\r\n                                  {\r\n                                    source: ids[key],\r\n                                    target: ids[children[key]],\r\n                                  },\r\n                                  jsonArr\r\n                                );\r\n                                console.log(edge);\r\n                                jsonArr = edge;\r\n                              }\r\n                            }\r\n                          }\r\n                          const layoutedElements = getLayoutedElements(jsonArr);\r\n                          setElements(layoutedElements);\r\n                          updateNode(layoutedElements);\r\n                          console.log(jsonArr);\r\n                          setCsv(true);\r\n                          setOpenUpload(false);\r\n                        }\r\n                      },\r\n                    });\r\n                  }}\r\n                  showPreviewsInDropzone={false}\r\n                  useChipsForPreview\r\n                  previewGridProps={{\r\n                    container: { spacing: 1, direction: \"row\" },\r\n                  }}\r\n                  previewChipProps={{ classes: { root: classes.previewChip } }}\r\n                  showFileNamesInPreview={true}\r\n                />\r\n                <Snackbar\r\n                  open={renderAlert.value}\r\n                  autoHideDuration={5000}\r\n                  onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                >\r\n                  <Alert\r\n                    onClose={() => setRenderAlert({ value: false, msg: \"\" })}\r\n                    severity=\"error\"\r\n                  >\r\n                    {renderAlert.msg}\r\n                  </Alert>\r\n                </Snackbar>\r\n              </Grid>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider orientation=\"horizontal\" />\r\n        <ReactFlow\r\n          nodeTypes={{\r\n            special: SpecialNodeComponent,\r\n            oval: OvalNodeComponent,\r\n            rectangle: RectangleNodeComponent,\r\n            diamond: DiamondNodeComponent,\r\n          }}\r\n          elements={\r\n            Object.keys(targetElements).length !== 0\r\n              ? toggledElements\r\n              : filteredElements\r\n          }\r\n          // elements={filteredElements}\r\n          onElementsRemove={onElementsRemove}\r\n          onNodeDoubleClick={onElementClick}\r\n          onElementClick={onNodeClick}\r\n          onNodeDragStop={onNodeDragStop}\r\n          connectionLineType={edgeType}\r\n          onPaneContextMenu={() => setOpenNewNode(true)}\r\n          onConnect={onConnect}\r\n          onLoad={onLoad}\r\n          snapToGrid={false}\r\n          // snapGrid={[15, 15]}\r\n          paneMoveable={true}\r\n          style={{ height: \"90vh\", width: isEditMode ? \"84%\" : \"95%\" }}\r\n        >\r\n          <MiniMap\r\n            nodeStrokeColor={(n) => {\r\n              if (n.style?.background) return n.style.background;\r\n              if (n.type === \"special\") return \"#0041d0\";\r\n              if (n.type === \"oval\") return \"#008000\";\r\n              if (n.type === \"rectangle\") return \"#8A2BE2\";\r\n              if (n.type === \"diamond\") return \"#00008b\";\r\n              if (n.type === \"output\") return \"#ff0072\";\r\n              if (n.type === \"default\") return \"#1a192b\";\r\n\r\n              return \"#eee\";\r\n            }}\r\n            nodeColor={(n) => {\r\n              if (n.style?.background) return n.style.background;\r\n\r\n              return \"#fff\";\r\n            }}\r\n            nodeBorderRadius={2}\r\n          />\r\n          <Controls />\r\n          <Background color=\"#aaa\" gap={16} />\r\n        </ReactFlow>\r\n        {/* <div /> */}\r\n        {isEditMode && (\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ textAlign: \"center\", width: 250, overflow: \"hidden\" }}\r\n            >\r\n              {Object.keys(elementCLicked).length === 0 ? (\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  gutterBottom\r\n                  style={{ paddingTop: 380, paddingLeft: 10, paddingRight: 10 }}\r\n                >\r\n                  Double-click on any item to get a detailed view.\r\n                </Typography>\r\n              ) : (\r\n                <div>\r\n                  <Typography variant=\"h6\" style={{ marginTop: 40 }}>\r\n                    Edit Title\r\n                  </Typography>\r\n                  <TextField\r\n                    name={elementCLicked.id}\r\n                    defaultValue={elementCLicked.data.title}\r\n                    margin=\"normal\"\r\n                    onChange={handleChangeTitle}\r\n                    disabled={!editModeTtitle}\r\n                    style={{ width: \"90%\" }}\r\n                    value={elementCLicked.data.title}\r\n                    InputProps={{\r\n                      // classes: {\r\n                      //   disabled: {\r\n                      //     color: \"black\",\r\n                      //     borderBottom: 0,\r\n                      //     \"&:before\": {\r\n                      //       borderBottom: 0,\r\n                      //     },\r\n                      //   },\r\n                      // },\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton onClick={handleClickTitle}>\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  {elementCLicked.type === \"special\" && (\r\n                    <>\r\n                      <Typography variant=\"h6\" style={{ marginTop: 20 }}>\r\n                        Edit Description\r\n                      </Typography>\r\n                      <TextField\r\n                        name={elementCLicked.id}\r\n                        defaultValue={elementCLicked.data.description}\r\n                        margin=\"normal\"\r\n                        onChange={handleChangeDescription}\r\n                        disabled={!editModeDescription}\r\n                        style={{ width: \"90%\" }}\r\n                        value={elementCLicked.data.description}\r\n                        // className={{\r\n                        //   marginLeft: 40,\r\n                        //   marginRight: 40,\r\n                        //   width: 300,\r\n                        //   color: \"black\",\r\n                        //   fontSize: 30,\r\n                        //   opacity: 1,\r\n                        //   borderBottom: 0,\r\n                        //   \"&:before\": {\r\n                        //     borderBottom: 0,\r\n                        //   },\r\n                        // }}\r\n                        InputProps={{\r\n                          // classes: {\r\n                          //   disabled: {\r\n                          //     color: \"black\",\r\n                          //     borderBottom: 0,\r\n                          //     \"&:before\": {\r\n                          //       borderBottom: 0,\r\n                          //     },\r\n                          //   },\r\n                          // },\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton onClick={handleClickDescription}>\r\n                                <Edit />\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                  <Divider style={{ marginTop: 10 }} />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon size=\"medium\" />}\r\n                    onClick={() => setOpen(true)}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    Add Tag\r\n                  </Button>\r\n                  <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">Add Tag</DialogTitle>\r\n                    <DialogContent>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={tag}\r\n                        onChange={handleChangeTag}\r\n                        fullWidth\r\n                        displayEmpty\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {localStorage.getItem(\"tags\") !== null &&\r\n                        JSON.parse(localStorage.getItem(\"tags\")).length > 0 ? (\r\n                          JSON.parse(localStorage.getItem(\"tags\")).map(\r\n                            (tag) => {\r\n                              return <MenuItem value={tag}>{tag}</MenuItem>;\r\n                            }\r\n                          )\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Select>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={submitTag} color=\"primary\">\r\n                        Add\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  {elementCLicked.data.tags.length > 0 &&\r\n                    elementCLicked.data.tags.map((tag) => (\r\n                      <Chip\r\n                        label={tag}\r\n                        color=\"secondary\"\r\n                        style={{ marginBottom: 10 }}\r\n                      />\r\n                    ))}\r\n\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Typography component=\"div\">\r\n                    <Grid\r\n                      component=\"label\"\r\n                      container\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                      style={{ paddingTop: 20, paddingLeft: 40 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={elementCLicked.data.isCollapsable}\r\n                          onChange={handleChangeCollapsable}\r\n                          name=\"checked\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>Collapsable</Grid>\r\n                    </Grid>\r\n                  </Typography>\r\n                  <Divider orientation=\"horizontal\" style={{ marginTop: 10 }} />\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                  >\r\n                    <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          Node Color\r\n                        </Typography>\r\n                        <div style={styles.swatch} onClick={handleClickColor}>\r\n                          <div style={styles.color} />\r\n                        </div>\r\n                        {displayColorPicker ? (\r\n                          <div style={styles.popover}>\r\n                            <div\r\n                              style={styles.cover}\r\n                              onClick={handleCloseColor}\r\n                            />\r\n                            <SketchPicker\r\n                              color={color}\r\n                              onChange={handleChangeColor}\r\n                            />\r\n                          </div>\r\n                        ) : null}\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                  <IconButton\r\n                    style={{ color: \"red\" }}\r\n                    onClick={() => handleDelete()}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Drawer>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Canvas;\r\n","import \"./App.css\";\nimport SideBar from \"./components/SideBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Canvas from \"./components/Canvas\";\nimport { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [currentFile, setCurrentFile] = useState(\n    localStorage.getItem(\"current\") === null\n      ? {}\n      : JSON.parse(localStorage.getItem(\"current\"))\n  );\n  const [isCanvasVisible, setIsCanvasVisible] = useState(false);\n  const [selectedColor, setSelectedColor] = useState({\n    r: \"193\",\n    g: \"230\",\n    b: \"255\",\n    a: \"100\",\n  });\n  const [edgeType, setEdgeType] = useState(\"smoothstep\");\n\n  const updateSessionDb = (session) => {\n    fetch(\"http://127.0.0.1:8000/api/update-session\", {\n      method: \"POST\",\n      body: JSON.stringify({ session_id: session }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => console.log(json));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"session\") === null) {\n      const session = jwt.sign({ userId: uuidv4() }, \"secretkey\", {\n        expiresIn: \"1h\",\n        algorithm: \"HS256\",\n      });\n      updateSessionDb(session);\n      localStorage.setItem(\"session\", session);\n    }\n  }, []);\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={5} sm={5} md={2} lg={2}>\n        <SideBar\n          currentFile={currentFile}\n          setCurrentFile={setCurrentFile}\n          setCanvasVisibility={(flag) => setIsCanvasVisible(flag)}\n          setEdgeType={setEdgeType}\n          setSelectedColor={setSelectedColor}\n        />\n      </Grid>\n      {isCanvasVisible && (\n        <Grid item xs={7} sm={7} md={10} lg={10}>\n          <Canvas\n            currentFile={currentFile}\n            setCurrentFile={setCurrentFile}\n            selectedColor={selectedColor}\n            edgeType={edgeType}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}